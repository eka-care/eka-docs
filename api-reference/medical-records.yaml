openapi: 3.0.3
info:
  title: Medical Records API
  version: 1.0.0
  description: API for uploading documents and receiving pre-signed URLs for further processing.

paths:
  /api/v3/docs/:
    post:
      summary: Upload a document and receive pre-signed URLs
      operationId: uploadDocument
      requestBody:
        description: The request payload to upload a document.
        required: true
        content:
          application/json:
            schema:
              type: object
              enum: ["ps","lr","cc","ca","pp","ot","ds","vc","in","iv","sc","nc","nq"]
              properties:
                dt:
                  type: string
                  example: "ot"
                  description: Type of document.
                files:
                  type: array
                  items:
                    type: object
                    enum: ["image/jpeg", "image/jpg", "image/png", "application/pdf"]
                    properties:
                      contentType:
                        type: string
                        example: "image/jpeg"
                        description: MIME type of the file.
                dd:
                  type: string
                  format: date
                  example: "2023-10-12"
                  description: Document date.
                sh:
                  type: boolean
                  example: false
                  description: Shareable flag.
                patient_oid:
                  type: string
                  example: "172295758497656"
                  description: The unique identifier for the patient.
                p_poid:
                  type: string
                  example: "172344612388185"
                  description: The unique identifier for the associated entity.
      responses:
        '200':
          description: Successfully received the document and pre-signed URL.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                    description: Indicates if there was an error.
                  message:
                    type: string
                    example: ""
                    description: Message detailing the response.
                  batch_response:
                    type: object
                    nullable: true
                    description: Additional batch information.
                  token:
                    type: string
                    example: "1723794713"
                    description: A token related to the request.
                  document_id:
                    type: string
                    format: uuid
                    example: "e32d8dc4-1880-4f7c-beb0-fb4e9a008e0f"
                    description: The unique identifier of the document.
                  forms:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: uri
                          example: "https://sample-lab-report.s3.amazonaws.com/"
                          description: The pre-signed URL for uploading the file.
                        fields:
                          type: object
                          properties:
                            Content-Type:
                              type: string
                              example: "image/png"
                              description: The content type of the file.
                            Policy:
                              type: string
                              description: The policy string for S3 upload.
                            X-Amz-Algorithm:
                              type: string
                              example: "AWS4-HMAC-SHA256"
                              description: AWS signing algorithm.
                            X-Amz-Credential:
                              type: string
                              example: "ASIAY3ANKL2EOPMVGSQZ/20240816/ap-south-1/s3/aws4_request"
                              description: AWS credential scope.
                            X-Amz-Date:
                              type: string
                              example: "20240816T075153Z"
                              description: The date of the request.
                            X-Amz-Security-Token:
                              type: string
                              description: AWS session token.
                            X-Amz-Signature:
                              type: string
                              description: The signature of the request.
                            key:
                              type: string
                              example: "d/10000/dd203e40-5ddc-438e-99f6-6a92371df7d0/e32d8dc4-1880-4f7c-beb0-fb4e9a008e0f/eka-1.png"
                              description: The key under which the file will be stored in S3.

      security:
        - jwtPayloadAuth: []
        - serviceIdAuth: []

  /:
    post:
      servers:
        - url: https://sample-lab-report.s3.amazonaws.com
          description: Upload files to s3 server
      summary: Upload a file to S3
      description: Uploads a file to the S3 bucket with the specified key and policy.
      operationId: uploadFileToS3
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Content-Type:
                  type: string
                  example: image/jpeg
                key:
                  type: string
                  example: 161918171478263/1342d02b-0c80-436a-80a3-e0efa62dc6d4/d0508b41-f823-4149-8781-64fa4404b9af.jpeg
                policy:
                  type: string
                  example: >
                    eyJleHBpcmF0aW9uIjogIjIwMjQtMDctMjVUMDk6MzA6NDFaIiwgImNvbmRpdGlvbnMiOiBbeyJDb250ZW50LVR5cGUiOiAiaW1hZ2UvanBlZyJ9LCBbImNvbnRlbnQtbGVuZ3RoLXJhbmdlIiwgMCwgMjA5NzE1MjAwXSwgeyJidWNrZXQiOiAic2FtcGxlLWxhYi1yZXBvcnQifSwgeyJrZXkiOiAiMTYxOTE4MTcxNDc4MjYzLzEzNDJkMDJiLTBjODAtNDM2YS04MGEzLWUwZWZhNjJkYzZkNC9kMDUwOGI0MS1mODIzLTQxNDktODc4MS02NGZhNDQwNGI5YWYuanBlZyJ9LCB7IngtYW16LWFsZ29yaXRobSI6ICJBV1M0LUhNQUMtU0hBMjU2In0sIHsieC1hbXotY3JlZGVudGlhbCI6ICJBU0lBWTNBTktMMkVKTkZNWFIyVC8yMDI0MDcyNS9hcC1zb3V0aC0xL3MzL2F3czRfcmVxdWVzdCJ9LCB7IngtYW16LWRhdGUiOiAiMjAyNDA3MjVUMDkyNTQxWiJ9LCB7IngtYW16LXNlY3VyaXR5LXRva2VuIjogIklRb0piM0pwWjJsdVgyVmpFT0gvLy8vLy8vLy8vd0VhQ21Gd0xYTnZkWFJvTFRFaVNEQkdBaUVBd3NiRmpteE9wYU1RSkpUdnBwekJ2VjVKaWI2bUJHVXZKV0hWOVdvMXZ6OENJUUN5K1g5YlN2SWVmNWJ2UVZoeWlsQmJ0bjlVKzI2ZDNQMlM0VldCTFo4MzNTcjZBZ2k2Ly8vLy8vLy8vLzhCRUFJYUREWXdOemMyTlRneE5Ea3lNQ0lNVWxkRHFwaFpxQS81N0tCa0tzNENCNUlnRkZ6aGoxaHB6bWhrSDNPTHZUUSt2UHY1RGJFV1QxZEN0dEo1N3Z4U05haS9OMURTeXBtaDFGY2w2VHRINWFXM01vTUJjSTZ0bitvcHNXS0p4SG5XbFVZSGdOZVhhWmNySVI3MklwT1c1NWZvOEFqYzlEVEdCVWJuY2xIMXhKOXZ4QUZVdXdxRkZpS3V0KysrNUtaSmJUQkxJaXJpdzBjaWcwWjRuVkRnU1lMc2RXaTJHWUNpTWsxcmxLeFVtamp3andtUXFXOHBWb0VteGdOb2JkYnB6UTFjRlNUNjZ5cERyejkrbDQ0WEFHcjdEZGM2RHNaSEpna0RhK1pCRnBJbzN5MzNoeHo0ZDVSeko4S2JTOXNDWTUyTGt4ekk4Znhpc1pmZGtId2NHTVp5UkkxSTZLZlB5RGxtNXpzNHJ1L0hrTVBCRUFBSHFQSzlpRk9BQVhQL2FmTTJpbkNZeExjU3hGRVMwZXlaNGVsbitpZWNEY0ZMQ0xSOC9DOEMxbGd3N3FEUE1aYlY0RzVXcEdMN1p1SldLOGRsajJVcUttR0hEVDJJSmNIOFppbUdINmRXZ250NGJyeWQyakN6cjRpMUJqcWRBWDlWcnFtWnNrR1NMTjlQbVErQUdRNFVqZU1sdVlRcmRCT0pEZG5VMi9xZkNZWStKWng5ZjZiTXZvSW5oVFo1T3R1dk5vS1gxM3RVYVdNdDV0OFFXanRITjNrdFN2M1FESGEzU21FN0ZtODBtZEQrMWFoQWx0aVNpNTFQL1hUZlhqUm1yejg4N3A3dXgrMktPdnhWNlkvczRUVzZ1OXFJMFlrQ2Jwd09LQjlVMm5GeWVBWUgrd1p3SXdCdGZaemh0aVVEVXhwVER2SFhqalNmK1lJPSJ9XX0=
                x-amz-algorithm:
                  type: string
                  example: AWS4-HMAC-SHA256
                x-amz-credential:
                  type: string
                  example: ASIAY3ANKL2EJNFMXR2T/20240725/ap-south-1/s3/aws4_request
                x-amz-date:
                  type: string
                  example: 20240725T092541Z
                x-amz-security-token:
                  type: string
                  example: >
                    IQoJb3JpZ2luX2VjEOH//////////wEaCmFwLXNvdXRoLTEiSDBGAiEAwsbFjmxOpaMQJJTvppzBvV5Jib6mBGUvJWHV9Wo1vz8CIQCy+X9bSvIef5bvQVhyilBbtn9U+26d3P2S4VWBLZ833Sr6Agi6//////////8BEAIaDDYwNzc2NTgxNDkyMCIMUldDqphZqA/57KBkKs4CB5IgFFzhj1hpzmhkH3OLvTQ+vPv5DbEWT1dCttJ57vxSNai/N1DSypmh1Fcl6TtH5aW3MoMBcI6tn+opsWKJxHnWlUYHgNeXaZcrIR72IpOW55fo8Ajc9DTGBUbnclH1xJ9vxAFUuwqFFiKut+++5KZJbTBLIiriw0cig0Z4nVDgSYLsdWi2GYCiMk1rlKxUmjjwjwmQqW8pVoEmxgNobdbpzQ1cFST66ypDrz9+l44XAGr7Ddc6DsZHJgkDa+ZBFpIo3y33hxz4d5RzJ8KbS9sCY52LkxzI8fxisZfdkHwcGMZyRI1I6KfPyDlm5zs4ru/HkMPBEAAHqPK9iFOAAXP/afM2inCYxLcSxFES0eyZ4eln+iecDcFLCLR8/C8C1lgw7qDPMZbV4G5WpGL7ZuJWK8dlj2UqKmGHDT2IJcH8ZimGH6dWgnt4bryd2jCzr4i1BjqdAX9VrqmZskGSLN9PmQ+AGQ4UjeMluYQrdBOJDdnU2/qfCYZ+JZx9f6bMvoInhTZ5OtuvaoKX13tUaWMt5t8qQWjtHN3ktSv3QDH3mS3mE7Fm80mdD+1ahAltiSi51P/XTfXjRmrz887p7ux+2K2ovxV6Y/s4TW6u9qI0YkCbptOKB9U2nFyeAYH+wZwIwBtgFQ0bFMSmNJR4PpSRRNL9PbVPvWcqGmHKpZciCqSHR5x5hJ9ShMVhjqSf+YI=
                x-amz-signature:
                  type: string
                  example: 2157a852f2f8db5b0595cbe3f002fb71e8be450b22d16a7b6ad3da6697b9c1cb
                file:
                  type: string
                  format: binary
              required:
                - Content-Type
                - key
                - policy
                - x-amz-algorithm
                - x-amz-credential
                - x-amz-date
                - x-amz-security-token
                - x-amz-signature
                - file

      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api/v4/docs:
    get:
      summary: Fetch documents based on filters
      operationId: getDocuments
      parameters:
        - name: oid
          in: query
          required: true
          schema:
            type: string
          description: Object ID to filter documents.
        - name: sort
          in: query
          required: true
          schema:
            type: string
          description: Sort order of the documents.
        - name: flavour
          in: query
          required: true
          schema:
            type: string
          description: Flavour to specify the type of documents to fetch.
        - name: Accept
          in: header
          required: false
          schema:
            type: string
          example: "*/*"
          description: Accept header.
        - name: jwt-payload
          in: header
          required: true
          schema:
            type: string
          description: JWT payload containing user information.
        - name: client-id
          in: header
          required: true
          schema:
            type: string
          description: Client ID for authentication.

      responses:
        '200':
          description: A list of documents matching the query.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            record:
                              type: object
                              properties:
                                item:
                                  type: object
                                  properties:
                                    documentId:
                                      type: string
                                      description: Unique ID of the document.
                                      example: df04c7e6-577b-4990-948c-5a31820c6a67
                                    uploadDate:
                                      type: string
                                      format: date-time
                                      description: Date when the document was uploaded.
                                      example: 2024-08-06T07:39:35Z
                                    documentType:
                                      type: string
                                      description: Type of the document.
                                      example: TYPE_LAB_REPORT
                                    metadata:
                                      type: object
                                      properties:
                                        thumbnail:
                                          type: string
                                          format: uri
                                          description: URL of the document's thumbnail.
                                          example: https://vault-cdn.dev.eka.care/fac0704e-a0e3-4c93-a972-e6c1f188592d/df04c7e6-577b-4990-948c-5a31820c6a67/5dbc4b75-df1a-412d-82a3-77d54671398c.jpeg
                                        documentDate:
                                          type: string
                                          format: date-time
                                          description: Date of the document.
                                          example: 2021-09-08T18:30:00Z
                                        tags:
                                          type: array
                                          items:
                                            type: string
                                            description: Tags associated with the document.
                                            example: TYPE_TAG_SMART
                                        cta:
                                          type: object
                                          properties:
                                            pid:
                                              type: string
                                              description: PID for CTA.
                                              example: deepthought_page
                                            params:
                                              type: object
                                              properties:
                                                context:
                                                  type: string
                                                  description: Context parameter for the CTA.
                                                  example: '{"prescription_id":"P-PP-68F9D6EC-536B-4BC2-8366-EBEA8C42E35E"}'
                                                page_type:
                                                  type: string
                                                  description: Page type for the CTA.
                                                  example: smart_prescription
                                            ctaParamsProto:
                                              type: string
                                              description: CTA parameters in proto format.
                                              example: '{"context":"{\"prescription_id\":\"P-PP-68F9D6EC-536B-4BC2-8366-EBEA8C42E35E\"}","page_type":"smart_prescription"}'
                                    patientOid:
                                      type: string
                                      description: Patient OID associated with the document.
                                      example: 161494290947153
                                hash:
                                  type: string
                                  description: Hash of the document.
                                  example: b81bc27bc1e7608a93dcf675ecc21125aaf9351c88bdbde55f0a3b01ccc6c234
        '400':
          description: Bad Request. Invalid or missing parameters.
        '401':
          description: Unauthorized. Invalid JWT token or client ID.
        '500':
          description: Internal Server Error.
components:
  securitySchemes:
    jwtPayloadAuth:
      type: apiKey
      in: header
      name: jwt-payload
    serviceIdAuth:
      type: apiKey
      in: header
      name: service-id

