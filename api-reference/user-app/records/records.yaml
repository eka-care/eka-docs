openapi: 3.1.0
info:
  title: Document Upload API
  description: API to pre-sign the URL for uploading documents.
  version: 1.0.0
  license:
    name: Proprietary License
    url: https://developer.eka.care/license

servers:
  - url: https://api.eka.care
    description: Production server
  - url: https://api.dev.eka.care
    description: Development server
tags:
  - name: Records
    description: API related to records document management.
paths:
  /mr/api/v1/docs:
    get:
      summary: List Documents
      description: To get the list of all the records for a given authenticated user.
      operationId: getDocuments
      parameters:
        - name: u_at__gt
          in: query
          schema:
            type: string
            nullable: true
            example: 1614556800
          description: Filters the documents by returning all documents that were updated after the specified u_at__gt timestamp. The value should be a valid epoch timestamp.
        - name: offset
          in: query
          schema:
            type: string
            nullable: true
          description: Please include the nextPageToken from the API response to enable pagination.
        - name: accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
          example: application/json
          description: To get response in json format
      responses:
        "200":
          description: A list of documents matching the query.
          content:
            application/json:
              schema:
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        record:
                          type: object
                          properties:
                            item:
                              type: object
                              properties:
                                document_id:
                                  type: string
                                  description: Unique ID of the document.
                                  example: df04c7e6-577b-4990-948c-5a31820c6a67
                                upload_date:
                                  type: integer
                                  format: epoch
                                  description: Date when the document was uploaded.
                                  example: 1722929975
                                document_type:
                                  type: string
                                  description: Type of the document.
                                  example: lr
                                metadata:
                                  type: object
                                  properties:
                                    thumbnail:
                                      type: string
                                      format: uri
                                      description: URL of the document's thumbnail.
                                      example: https://vault-cdn.dev.eka.care/fac0704e-a0e3-4c93-a972-e6c1f188592d/df04c7e6-577b-4990-948c-5a31820c6a67/5dbc4b75-df1a-412d-82a3-77d54671398c.jpeg
                                    document_date:
                                      type: integer
                                      format: epoch
                                      description: Date of the document.
                                      example: 1722929975
                                    tags:
                                      type: array
                                      items:
                                        type: string
                                        description: Tags associated with the document.
                                        example: TYPE_TAG_SMART
                                    title:
                                      type: string
                                      description: Title associated with the document.
                                    abha:
                                      type: object
                                      nullable: true
                                      properties:
                                        health_id:
                                          type: string
                                          example: mayank.singh@abdm
                                        link_status:
                                          type: string
                                          enum:
                                            - LINKED
                                            - INITIATED
                                            - SCHEDULED
                                            - ERRORED
                                            - RESCHEDULED
                                patient_id:
                                  type: string
                                  description: Patient OID associated with the document.
                                  example: 161494290947153
                  next_token:
                    type: string
                    description: Token used for pagination to retrieve the next set of results in a paginated response.

        "400":
          description: Bad Request. Invalid or missing parameters.
        "401":
          description: Unauthorized. Invalid JWT token or client ID.
        "500":
          description: Internal Server Error.
      security:
        - auth: []
    post:
      operationId: getAuthorization
      tags:
        - Records
      summary: "Step 1: Upload Record"
      description: Generate a presigned URL that allows you to securely upload a document to the server. This URL can be used to upload the document directly without needing additional authentication or authorization steps.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                batch_request:
                  type: array
                  items:
                    $ref: "#/components/schemas/UpdateDocumentV3Request"
            example:
              batch_request:
                - dt: "ps"
                  sh: false
                  dd_e: 1614556800
                  tg: ["tag1", "tag2"]
                  files:
                    - contentType: "image/jpeg"
                      file_size: 110000
      responses:
        "200":
          description: Presigned URL successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadResponse"
          links:
            GetDocumentByDocumentID:
              operationId: getDocument
              parameters:
                document_id: ‘$response.body#/batch_response/0/document_id’
              description: >
                The `document_id` value returned in the response can be used as
                the `document_id` parameter in `GET /mr/api/v1/docs/{document_id}`.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorUploadResponse"
              examples:
                ErrorUploadResponse:
                  summary: Example of an error response with an empty batch_request
                  value:
                    error: true
                    message: "Invalid document type."
                    batch_response: [] # Empty array for batch_request
                    upload_time: null
        "500":
          description: Internal Server Error. No response body is expected.
        "502":
          description: Bad Gateway. No response body is expected.
        "503":
          description: Service Unavailable. No response body is expected.
        "504":
          description: Gateway Timeout. No response body is expected.
      security:
        - auth: []

  /mr/api/v1/docs/{document_id}:
    patch:
      summary: Update Document
      description: This API is used to update the document.
      parameters:
        - in: path
          name: document_id
          required: true
          description: Document ID to update the document details.
          schema:
            type: string
            example: 2df9e795-d368-4ceb-be9d-b44281703827
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dt:
                  type: string
                  nullable: true
                  description: |
                    The following values are allowed:
                    - `ps`: Prescription
                    - `lr`: Lab Report
                    - `ot`: Other
                    - `ds`: Discharge Summary
                    - `vc`: Vaccine Certificate
                    - `in`: Insurance
                    - `iv`: Invoice
                    - `sc`: Scan
                  enum:
                    - ps
                    - lr
                    - ot
                    - ds
                    - vc
                    - in
                    - iv
                    - sc
                  example: lr
                ndhm:
                  type: boolean
                  nullable: true
                  description: If true, the record will be linked.
                  example: true
                oid:
                  type: string
                  nullable: true
                  description: OID associated with the document.
                  example: "161847797963700"
                dd_e:
                  type: integer
                  nullable: true
                  format: int64
                  description: Format should be in epoch seconds.
                  example: 1614556800
                tg:
                  type: array
                  nullable: true
                  description: Tags associated with the uploaded documents. The rules for tags are the same as the upload API.
                  example: ["covid"]
                  items:
                    type: string
              anyOf:
                - required: ["dt"]
                - required: ["ndhm"]
                - required: ["oid"]
                - required: ["dd_e"]
                - required: ["tg"]
      responses:
        "200":
          description: Document linked successfully.
        "404":
          description: No such document.
        "5XX":
          description: Unexpected error.
      security:
        - auth: []

    delete:
      summary: Delete a document
      description: This API is used to delete a document using a document ID.
      parameters:
        - in: path
          name: document_id
          required: true
          description: Document ID to delete the document.
          schema:
            type: string
            example: 2df9e795-d368-4ceb-be9d-b44281703827
      responses:
        "200":
          description: Document deleted successfully.
        "404":
          description: No such document.
        "5XX":
          description: Unexpected error.
      security:
        - auth: []

    get:
      summary: Describes a document
      description: Once you get the list of all the documents with coresponding id's, you can this to know more details about the document.
      operationId: getDocument
      parameters:
        - in: path
          name: document_id
          required: true
          description: Document ID to fetch the document details.
          schema:
            type: string
            example: 2df9e795-d368-4ceb-be9d-b44281703827
      responses:
        "200":
          description: Description of a document.
          content:
            application/json:
              schema:
                type: object
                properties:
                  source:
                    type: string
                  document_date_epoch:
                    type: integer
                  tags:
                    type: array
                    items:
                      type: string
                  dt:
                    type: string
                    enum:
                      - lr
                      - ps
                      - ds
                      - vc
                      - in
                      - iv
                      - sc
                      - ot
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        asset_url:
                          type: string
                          format: uri
                        file_type:
                          type: string
                          enum:
                            - IMG
                            - PDF
              example:
                source: "androidp"
                document_date_epoch: 1614556800
                document_type: lr
                tags: ["covid"]
                files:
                  - asset_url: https://sample-lab-report.s3.ap-south-1.amazonaws.com/161494290947153/2df9e795-d368-4ceb-be9d-b44281703827/0cb1277e-1c4d-42cc-acd1-9630497e4f9d.jpeg
                    file_type: IMG
                  - asset_url: https://sample-lab-report.s3.ap-south-1.amazonaws.com/161494290947153/2df9e795-d368-4ceb-be9d-b44281703827/0cb1277e-1c4d-42cc-acd1-9630497e4f9d.pdf
                    file_type: PDF
        "5XX":
          description: Unexpected error.
        "404":
          description: No such document.
      security:
        - auth: []

  /health/api/v1/fhir/retrieve:
    get:
      summary: Retrieve health records
      description: Retrieve a health record based on the given identifier, hip_id, and health_id in nrces FHIR json format.
      parameters:
        - name: identifier
          in: query
          required: true
          description: The unique identifier for the health record is care_context_id.
          schema:
            type: string
        - name: hip_id
          in: query
          required: true
          description: The HIP (Health Information Provider) ID.
          schema:
            type: string
        - name: health_id
          in: query
          required: true
          description: The health ID associated with the record.
          schema:
            type: string
      responses:
        "200":
          description: Successful retrieval of health records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  resourceType:
                    type: string
                    example: Bundle
                  type:
                    type: string
                    example: document
                  link:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                        relation:
                          type: string
                  entry:
                    type: array
                    items:
                      type: object
                      properties:
                        resource:
                          type: object
                          properties:
                            author:
                              type: array
                              items:
                                type: object
                                properties:
                                  reference:
                                    type: string
                            date:
                              type: string
                              format: date-time
                            extension:
                              type: array
                              items:
                                type: object
                                properties:
                                  url:
                                    type: string
                                  valueString:
                                    type: string
                            id:
                              type: string
                            identifier:
                              type: object
                              properties:
                                system:
                                  type: string
                                value:
                                  type: string
                            meta:
                              type: object
                              properties:
                                lastUpdated:
                                  type: string
                                  format: date-time
                            resourceType:
                              type: string
                            section:
                              type: array
                              items:
                                type: object
                                properties:
                                  entry:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        reference:
                                          type: string
                                  title:
                                    type: string
                            status:
                              type: string
                            subject:
                              type: object
                              properties:
                                reference:
                                  type: string
                            title:
                              type: string
                            type:
                              type: object
                              properties:
                                text:
                                  type: string
                  id:
                    type: string
                  meta:
                    type: object
                    properties:
                      versionId:
                        type: string
                      lastUpdated:
                        type: string
                        format: date-time
                      profile:
                        type: array
                        items:
                          type: string
                      security:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                            display:
                              type: string
                            system:
                              type: string
                  identifier:
                    type: object
                    properties:
                      system:
                        type: string
                      value:
                        type: string
                  timestamp:
                    type: string
                    format: date-time
        "404":
          description: when request identifier, hip_id, health_id has no data
          content:
            application/json:
              schema:
                type: object
                properties:
                  resourceType:
                    type: string
                    example: Bundle
                  type:
                    type: string
                    example: document
                  meta:
                    type: object
                    properties:
                      lastUpdated:
                        type: string
                        format: date-time
        "401":
          description: Unauthorized. Invalid or missing authentication.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - auth: []

  /mr/api/v2/docs:
    post:
      operationId: uploadDocument
      tags:
        - Records
      summary: "Upload Record"
      description: Upload the image or PDF file
      parameters:
        - in: query
          name: dt
          required: true
          schema:
            $ref: "#/components/schemas/DocumentTypeQueryParam"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: base64
                  title: file
                  description: The file to be uploaded.
              required:
                - file
      responses:
        "200":
          description: File uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_id:
                    type: string
                    format: uuid
                    description: The unique identifier for the uploaded document.
                    example: "8570e23d-ee57-4948-95a7-370f0f113db8"
        "400":
          description: Bad request, typically due to missing or invalid fields.
          content:
            text/plain:
              schema:
                type: string
                example: Invalid form data.
        "403":
          description: Forbidden Access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden"
        "500":
          description: Internal Server Error. No response body is expected.
        "502":
          description: Bad Gateway. No response body is expected.
        "503":
          description: Service Unavailable. No response body is expected.
        "504":
          description: Gateway Timeout. No response body is expected.
      security:
        - auth: []

  /mr/webhook/smart-report:
    post:
      tags:
        - Webhooks
      summary: Smart Report
      description: >-
        When the records get uploaded, a webhook event is sent to register to get the smart report of the record upload. If there are multiple records upload in upload docs API we need to register web hook for all the document id recevied in the reponse. Use the below request payload to register to webhook. You can find [here](https://ekacare.notion.site/726b13df13ea4409b0cd30c6f3a80315?v=dcd10c722d3149d880ae889b06f4820a) list of parsing capablities we have as of now.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_type:
                  type: string
                  example: "smart-report"
                timestamp:
                  type: string
                  example: "2023-07-30T18:07:24.000Z"
                data:
                  type: object
                  properties:
                    document_id:
                      type: string
                      description: This is document_id which you have recevied Obtain a Presigned URL for Document Upload response
                    webook_url:
                      type: string
                      description: This url we will use to send the payload upon successful parsing of the record

      responses:
        "200":
          description: Event registered successfully
        "204":
          description: Event created successfully
        "400":
          description: Bad request
        "403":
          description: Forbidden - Access Denied
        "500":
          description: Something went wrong
      security:
        - auth: []
components:
  schemas:
    DocumentTypeQueryParam:
      type: string
      description: |
        Specifies the type of document being uploaded. 
        The following values are allowed:
        - `ps`: Prescription
        - `lr`: Lab Report
        - `ot`: Other
        - `ds`: Discharge Summary
        - `vc`: Vaccine Certificate
        - `in`: Insurance
        - `iv`: Invoice
        - `sc`: Scan
      enum:
        - ps
        - lr
        - ot
        - ds
        - vc
        - in
        - iv
        - sc

    FileUploadRequest:
      type: object
      properties:
        contentType:
          type: string
          description: The MIME type of the file (e.g., image/jpeg, application/pdf).
        file_size:
          type: integer
          format: int64
          description: Unit of file size should be bytes
      required:
        - contentType
        - file_size

    UpdateDocumentV3Request:
      type: object
      properties:
        dt:
          $ref: "#/components/schemas/DocumentTypeQueryParam"
        dd_e:
          type: integer
          format: int64
          description: Format should be in epoch seconds.
        sh:
          type: boolean
          description: Indicates if the record can be shared with a doctor.
        tg:
          type: array
          description: The tag array can contain a maximum of **10 tags**.
            If more than 10 tags are provided in the request, only the **first 10 tags** will be considered.
          items:
            type: string
            description: Each tag must be between **2 to 20 characters** in length.

        files:
          type: array
          description: A list of files to be uploaded, each with a specified content type and size.
          items:
            $ref: "#/components/schemas/FileUploadRequest"
        title:
          type: string
          description: Title of the document. Max length of 256 characters.
          nullable: true
      required:
        - files
    UploadResponse:
      type: object
      properties:
        error:
          type: boolean
          example: false
        message:
          type: string
          example: ""
        batch_response:
          type: array
          items:
            $ref: "#/components/schemas/UploadResponseBody"

    ErrorUploadResponse:
      type: object
      properties:
        error:
          type: boolean
          example: true
        message:
          type: string
          description: Description of the error encountered
        batch_response:
          type: array
          items:
            $ref: "#/components/schemas/UploadResponseBody"
        token:
          type: string
          format: date-time

    UploadResponseBody:
      type: object
      properties:
        document_id:
          type: string
        forms:
          type: array
          items:
            $ref: "#/components/schemas/UploadResponseBodyForms"
    UploadResponseBodyForms:
      type: object
      properties:
        url:
          type: string
        fields:
          type: object
          additionalProperties:
            type: string
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
