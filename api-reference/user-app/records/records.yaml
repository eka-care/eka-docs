openapi: 3.1.0
info:
  title: Document Upload API
  description: API to pre-sign the URL for uploading documents.
  version: 1.0.0
  license:
    name: Proprietary License
    url: https://developer.eka.care/license

servers:
  - url: https://api.eka.care
    description: Production server
  - url: https://api.dev.eka.care
    description: Development server
tags:
  - name: Records
    description: API related to records document management.
paths:
  /mr/api/v1/docs:
    get:
      summary: List Documents
      description: To get the list of all the records for a given authenticated user.
      operationId: getDocuments
      parameters:
        - name: u_at__gt
          in: query
          schema:
            type: string
            nullable: true
            example: 1614556800
          description: Filters the documents by returning all documents that were updated after the specified u_at__gt timestamp. The value should be a valid epoch timestamp.
        - name: offset
          in: query
          schema:
            type: string
            nullable: true
          description: Please include the nextPageToken from the API response to enable pagination.
        - name: p_oid
          in: query
          schema:
            type: string
            nullable: true
            required: false
          description: Include the patient identifier (p_oid) to fetch the list of records. Applicable only for EMR cases.
        - name: accept
          in: header
          required: true
          schema:
            type: string
            enum:
              - application/json
          example: application/json
          description: To get response in json format
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
      responses:
        "200":
          description: A list of documents matching the query.
          content:
            application/json:
              schema:
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        record:
                          type: object
                          properties:
                            item:
                              type: object
                              properties:
                                document_id:
                                  type: string
                                  description: Unique ID of the document.
                                  example: df04c7e6-577b-4990-948c-5a31820c6a67
                                upload_date:
                                  type: integer
                                  format: epoch
                                  description: Date when the document was uploaded.
                                  example: 1722929975
                                document_type:
                                  type: string
                                  description: Type of the document.
                                  example: lr
                                metadata:
                                  type: object
                                  properties:
                                    thumbnail:
                                      type: string
                                      format: uri
                                      description: URL of the document's thumbnail.
                                      example: https://vault-cdn.dev.eka.care/fac0704e-a0e3-4c93-a972-e6c1f188592d/df04c7e6-577b-4990-948c-5a31820c6a67/5dbc4b75-df1a-412d-82a3-77d54671398c.jpeg
                                    document_date:
                                      type: integer
                                      format: epoch
                                      description: Date of the document.
                                      example: 1722929975
                                    tags:
                                      type: array
                                      items:
                                        type: string
                                        description: Tags associated with the document.
                                    auto_tags:
                                        type : array
                                        items:
                                          type: string
                                          description: Automatically assigned tags.
                                          example: TYPE_TAG_SMART

                                    title:
                                      type: string
                                      description: Title associated with the document.
                                    abha:
                                      type: object
                                      nullable: true
                                      properties:
                                        health_id:
                                          type: string
                                          example: mayank.singh@abdm
                                        link_status:
                                          type: string
                                          enum:
                                            - LINKED
                                            - INITIATED
                                            - ERRORED
                                patient_id:
                                  type: string
                                  description: Patient OID associated with the document.
                                  example: 161494290947153
                  next_token:
                    type: string
                    description: Token used for pagination to retrieve the next set of results in a paginated response.

        "400":
          description: Bad Request. Invalid or missing parameters.
        "401":
          description: Unauthorized. Invalid JWT token or client ID.
        "500":
          description: Internal Server Error.
      security:
        - auth: []
    post:
      operationId: getAuthorization
      tags:
        - Records
      summary: "Step 1: Upload Record"
      description: Generate a presigned URL that allows you to securely upload a document to the server. This URL can be used to upload the document directly without needing additional authentication or authorization steps.
      parameters:
        - in: query
          name: p_oid
          required: false
          description: Include the patient identifier (p_oid) to upload the record. This is applicable only for EMR cases.
          schema:
            type: string
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                batch_request:
                  type: array
                  items:
                    $ref: "#/components/schemas/UpdateDocumentV3Request"
            example:
              batch_request:
                - dt: "ps"
                  dd_e: 1614556800
                  tg: ["tag1", "tag2"]
                  files:
                    - contentType: "image/jpeg"
                      file_size: 110000
      responses:
        "200":
          description: Presigned URL successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadResponse"
          links:
            GetDocumentByDocumentID:
              operationId: getDocument
              parameters:
                document_id: ‘$response.body#/batch_response/0/document_id’
              description: >
                The `document_id` value returned in the response can be used as
                the `document_id` parameter in `GET /mr/api/v1/docs/{document_id}`.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorUploadResponse"
              examples:
                ErrorUploadResponse:
                  summary: Example of an error response with an empty batch_request
                  value:
                    error: true
                    message: "Invalid document type."
                    batch_response: [] # Empty array for batch_request
                    upload_time: null
        "500":
          description: Internal Server Error. No response body is expected.
        "502":
          description: Bad Gateway. No response body is expected.
        "503":
          description: Service Unavailable. No response body is expected.
        "504":
          description: Gateway Timeout. No response body is expected.
      security:
        - auth: []

  /mr/api/v1/docs/{document_id}:
    patch:
      summary: Update Document
      description: This API is used to update the document.
      parameters:
        - in: path
          name: document_id
          required: true
          description: Document ID to update the document details.
          schema:
            type: string
            example: 2df9e795-d368-4ceb-be9d-b44281703827
        - name: p_oid
          in: query
          schema:
            type: string
            nullable: true
            required: false
          description: Include the patient identifier (p_oid) to update a patient's record. Applicable only for EMR cases.
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dt:
                  type: string
                  nullable: true
                  description: |
                    The following values are allowed:
                    - `ps`: Prescription
                    - `lr`: Lab Report
                    - `ot`: Other
                    - `ds`: Discharge Summary
                    - `vc`: Vaccine Certificate
                    - `in`: Insurance
                    - `iv`: Invoice
                    - `sc`: Scan
                  enum:
                    - ps
                    - lr
                    - ot
                    - ds
                    - vc
                    - in
                    - iv
                    - sc
                  example: lr
                ndhm:
                  type: boolean
                  nullable: true
                  description: If true, the record will be linked.
                  example: true
                oid:
                  type: string
                  nullable: true
                  description: OID associated with the document.
                  example: "161847797963700"
                dd_e:
                  type: integer
                  nullable: true
                  format: int64
                  description: Format should be in epoch seconds.
                  example: 1614556800
                tg:
                  type: array
                  nullable: true
                  description: Tags associated with the uploaded documents. The rules for tags are the same as the upload API.
                  example: ["covid"]
                  items:
                    type: string
              anyOf:
                - required: ["dt"]
                - required: ["ndhm"]
                - required: ["oid"]
                - required: ["dd_e"]
                - required: ["tg"]
      responses:
        "200":
          description: Document linked successfully.
        "404":
          description: No such document.
        "5XX":
          description: Unexpected error.
      security:
        - auth: []

    delete:
      summary: Delete a document
      description: This API is used to delete a document using a document ID.
      parameters:
        - in: path
          name: document_id
          required: true
          description: Document ID to delete the document.
          schema:
            type: string
            example: 2df9e795-d368-4ceb-be9d-b44281703827
        - name: p_oid
          in: query
          schema:
            type: string
            nullable: true
            required: false
          description: Include the patient identifier (p_oid) to delete a patient's record. Applicable only for EMR cases.
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
      responses:
        "200":
          description: Document deleted successfully.
        "404":
          description: No such document.
        "5XX":
          description: Unexpected error.
      security:
        - auth: []


    get:
      summary: Describes a document
      description: Once you retrieve a list of all documents with their corresponding IDs, you can use this endpoint to get more details about a specific document.
      operationId: getDocument
      parameters:
        - in: path
          name: document_id
          required: true
          description: Document ID to fetch the document details.
          schema:
            type: string
            example: 2df9e795-d368-4ceb-be9d-b44281703827
        - in: query
          name: p_oid
          required: false
          description: Include the patient identifier (p_oid) to fetch a patient's record, applicable only for EMR cases.
          schema:
            type: string
            nullable: true
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
      responses:
        "200":
          description: Description of a document.
          content:
            application/json:
              schema:
                type: object
                properties:
                  source:
                    type: string
                  document_date_epoch:
                    type: integer
                  tags:
                    type: array
                    items:
                      type: string
                  dt:
                    type: string
                    enum: [ lr, ps, ds, vc, in, iv, sc, ot ]
                  smart_report:
                    type: object
                    properties:
                      verified:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                            unit:
                              type: string
                            unit_eka_id:
                              type: string
                            range:
                              type: string
                            result:
                              type: string
                            result_id:
                              type: string
                              enum:
                                - sm-4067205096
                                - sm-2631712380
                                - sm-1420480405
                                - sm-5279215230
                                - sm-8146614980
                                - sm-5279274814
                                - sm-1220479757
                                - sm-2631771970
                                - sm-4067860500
                                - sm-5379306527
                                - sm-5612225938
                            display_result:
                              type: string
                            id:
                              type: integer
                            vital_id:
                              type: string
                            page_num:
                              type: integer
                            file_index:
                              type: integer
                            coordinates:
                              type: array
                              items:
                                type: object
                                properties:
                                  x:
                                    type: number
                                  y:
                                    type: number
                            eka_id:
                              type: string
                            is_result_editable:
                              type: boolean
                            date:
                              type: integer
                              format: int64
                      unverified:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                            unit:
                              type: string
                            unit_eka_id:
                              type: string
                            range:
                              type: string
                            result:
                              type: string
                            result_id:
                              type: string
                              enum:
                                - sm-4067205096
                                - sm-2631712380
                                - sm-1420480405
                                - sm-5279215230
                                - sm-8146614980
                                - sm-5279274814
                                - sm-1220479757
                                - sm-2631771970
                                - sm-4067860500
                                - sm-5379306527
                                - sm-5612225938
                            display_result:
                              type: string
                            id:
                              type: integer
                            vital_id:
                              type: string
                            page_num:
                              type: integer
                            file_index:
                              type: integer
                            coordinates:
                              type: array
                              items:
                                type: object
                                properties:
                                  x:
                                    type: number
                                  y:
                                    type: number
                            eka_id:
                              type: string
                            is_result_editable:
                              type: boolean
                            date:
                              type: integer
                              format: int64
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        asset_url:
                          type: string
                          format: uri
                        file_type:
                          type: string
                          enum: [ IMG, PDF ]
              example:
                source: "androidp"
                document_date_epoch: 1614556800
                document_type: lr
                tags: ["covid"]
                files:
                  - asset_url: https://sample-lab-report.s3.ap-south-1.amazonaws.com/161494290947153/2df9e795-d368-4ceb-be9d-b44281703827/0cb1277e-1c4d-42cc-acd1-9630497e4f9d.jpeg
                    file_type: IMG
                  - asset_url: https://sample-lab-report.s3.ap-south-1.amazonaws.com/161494290947153/2df9e795-d368-4ceb-be9d-b44281703827/0cb1277e-1c4d-42cc-acd1-9630497e4f9d.pdf
                    file_type: PDF
        "5XX":
          description: Unexpected error.
        "404":
          description: No such document.
      security:
        - auth: []

  /health/api/v1/fhir/retrieve:
    get:
      summary: Retrieve health records
      description: Retrieve a health record based on the given identifier, hip_id, and health_id in nrces FHIR json format.
      parameters:
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
        - name: identifier
          in: query
          required: true
          description: The unique identifier for the health record is care_context_id.
          schema:
            type: string
        - name: hip_id
          in: query
          required: true
          description: The HIP (Health Information Provider) ID.
          schema:
            type: string
        - name: health_id
          in: query
          required: true
          description: The health ID associated with the record.
          schema:
            type: string
      responses:
        "200":
          description: Successful retrieval of health records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  resourceType:
                    type: string
                    example: Bundle
                  type:
                    type: string
                    example: document
                  link:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                        relation:
                          type: string
                  entry:
                    type: array
                    items:
                      type: object
                      properties:
                        resource:
                          type: object
                          properties:
                            author:
                              type: array
                              items:
                                type: object
                                properties:
                                  reference:
                                    type: string
                            date:
                              type: string
                              format: date-time
                            extension:
                              type: array
                              items:
                                type: object
                                properties:
                                  url:
                                    type: string
                                  valueString:
                                    type: string
                            id:
                              type: string
                            identifier:
                              type: object
                              properties:
                                system:
                                  type: string
                                value:
                                  type: string
                            meta:
                              type: object
                              properties:
                                lastUpdated:
                                  type: string
                                  format: date-time
                            resourceType:
                              type: string
                            section:
                              type: array
                              items:
                                type: object
                                properties:
                                  entry:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        reference:
                                          type: string
                                  title:
                                    type: string
                            status:
                              type: string
                            subject:
                              type: object
                              properties:
                                reference:
                                  type: string
                            title:
                              type: string
                            type:
                              type: object
                              properties:
                                text:
                                  type: string
                  id:
                    type: string
                  meta:
                    type: object
                    properties:
                      versionId:
                        type: string
                      lastUpdated:
                        type: string
                        format: date-time
                      profile:
                        type: array
                        items:
                          type: string
                      security:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                            display:
                              type: string
                            system:
                              type: string
                  identifier:
                    type: object
                    properties:
                      system:
                        type: string
                      value:
                        type: string
                  timestamp:
                    type: string
                    format: date-time
        "404":
          description: when request identifier, hip_id, health_id has no data
          content:
            application/json:
              schema:
                type: object
                properties:
                  resourceType:
                    type: string
                    example: Bundle
                  type:
                    type: string
                    example: document
                  meta:
                    type: object
                    properties:
                      lastUpdated:
                        type: string
                        format: date-time
        "401":
          description: Unauthorized. Invalid or missing authentication.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - auth: []

  /mr/api/v2/docs:
    post:
      operationId: uploadDocument
      tags:
        - Records
      summary: "Upload Record"
      description: Upload the image or PDF file
      parameters:
        - in: query
          name: dt
          required: true
          schema:
            $ref: "#/components/schemas/DocumentTypeQueryParamV2"
        - in: query
          name: task
          required: true
          schema:
            $ref: "#/components/schemas/UploadTaskQueryParam"
        - in: query
          name: batch
          description: if you are upload document in batch the pass this information as true
          schema:
            type: boolean
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: base64
                  title: file
                  description: The file to be uploaded.
              required:
                - file
      responses:
        "200":
          description: File uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_id:
                    type: string
                    format: uuid
                    description: The unique identifier for the uploaded document.
                    example: "8570e23d-ee57-4948-95a7-370f0f113db8"
        "400":
          description: Bad request, typically due to missing or invalid fields.
          content:
            text/plain:
              schema:
                type: string
                example: Invalid form data.
        "403":
          description: Forbidden Access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden"
        "500":
          description: Internal Server Error. No response body is expected.
        "502":
          description: Bad Gateway. No response body is expected.
        "503":
          description: Service Unavailable. No response body is expected.
        "504":
          description: Gateway Timeout. No response body is expected.
      security:
        - auth: []

  /mr/api/v1/docs/{document_id}/result:
    get:
      operationId: getResult
      tags:
        - Records
      description: This API is check the parsing status of the uploaded document
      parameters:
        - in: path
          name: document_id
          required: true
          description: Document ID to update the document details.
          schema:
            type: string
            example: 2df9e795-d368-4ceb-be9d-b44281703827
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
      
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileProcessingResponse'
        '400':
          description: Bad request
        '500':
          description: Internal server error
      
      security:
        - auth: []

  /health/api/v2/fhir/retrieve:
    get:
      summary: Retrieve health records
      description: Retrieve a health record based on the given identifier, hip_id, and health_id in nrces FHIR json format.
      parameters:
        - name: identifier
          in: query
          required: true
          description: The unique identifier for the health record is care_context_id.
          schema:
            type: string
        - name: X-Pt-Id
          in: header
          required: true
          schema:
            type: string
          description: eka user id (Oid)
      responses:
        "200":
          description: Successful retrieval of health records.
          content:
            application/json:
              schema:
                type: object
                description: Please refer to FHIR bundle response https://hl7.org/fhir/R4/bundle.html
                
        "404":
          description: when request identifier, hip_id, health_id has no data
          content:
            application/json:
              schema:
                type: object
                description: Please refer to FHIR bundle response https://hl7.org/fhir/R4/bundle.html
        "401":
          description: Unauthorized. Invalid or missing authentication.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - auth: []

  /mr/webhook/smart-report:
    post:
      tags:
        - Webhooks
      summary: Smart Report
      description: >-
        When the records get uploaded, a webhook event is sent to register to get the smart report of the record upload. If there are multiple records upload in upload docs API we need to register web hook for all the document id recevied in the reponse. Use the below request payload to register to webhook. You can find [here](https://ekacare.notion.site/726b13df13ea4409b0cd30c6f3a80315?v=dcd10c722d3149d880ae889b06f4820a) list of parsing capablities we have as of now.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_type:
                  type: string
                  example: "smart-report"
                timestamp:
                  type: string
                  example: "2023-07-30T18:07:24.000Z"
                data:
                  type: object
                  properties:
                    document_id:
                      type: string
                      description: This is document_id which you have recevied Obtain a Presigned URL for Document Upload response
                    webook_url:
                      type: string
                      description: This url we will use to send the payload upon successful parsing of the record

      responses:
        "200":
          description: Event registered successfully
        "204":
          description: Event created successfully
        "400":
          description: Bad request
        "403":
          description: Forbidden - Access Denied
        "500":
          description: Something went wrong
      security:
        - auth: []

  /mr/api/v1/cases/{id}:
    delete:
      tags:
        - Cases
      summary: Delete Case
      description: >-
        This endpoint allows deleting a case using the case ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique case ID
        - in: header
          name: X-Pt-Id
          required: true
          schema:
            type: string
          description: Patient ID
      responses:
        "204":
          description: Case deleted successfully (no content)

        "401":
          description: Unauthorized – Invalid or missing authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access. Please provide a valid token."
                  code:
                    type: string
                    example: "UNAUTHORIZED"

        "404":
          description: Case not found – The specified case ID does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No case found with the given ID."
                  code:
                    type: string
                    example: "NOT_FOUND"

        "500":
          description: Internal server error – Unexpected failure during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unexpected error occurred while deleting the case."
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
      security:
        - auth: [ ]

    get:
      tags:
        - Cases
      summary: Describe Case
      description: >-
        This endpoint retrieves a FHIR-compliant bundle of a specific case.
        It returns `304 Not Modified` if the case has not changed since the `ETag` provided.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique case ID
        - in: header
          name: X-Pt-Id
          required: true
          schema:
            type: string
          description: Patient ID
        - in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          description: ETag to check for updates
      responses:
        "200":
          description: FHIR Bundle of the case
          content:
            application/json:
              schema:
                type: object
                description: Refer [FHIR R4 Profiles](https://www.nrces.in/ndhm/fhir/r4/profiles.html)

        "304":
          description: Not Modified – The case has not changed since the provided ETag

        "401":
          description: Unauthorized – Invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access. Please provide a valid token."
                  code:
                    type: string
                    example: "UNAUTHORIZED"

        "404":
          description: Case not found – Invalid or non-existent case ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No case found with the given ID."
                  code:
                    type: string
                    example: "NOT_FOUND"

        "500":
          description: Internal server error – Unexpected failure during processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unexpected server error while retrieving the case."
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
      security:
        - auth: [ ]

    patch:
      tags:
        - Cases
      summary: Update Case
      description: >-
        This endpoint allows updating details of an existing medical case using the case ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique case ID
        - in: header
          name: X-Pt-Id
          required: true
          schema:
            type: string
          description: Patient ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                  description: Human-readable name for the case
                  example: "Leg Injury"
                type:
                  type: string
                  enum: [ OPConsultation, Prescription, DischargeSummary, DiagnosticReport, ImmunizationRecord, HealthDocumentRecord, WellnessRecord]
                  description: >
                    Type of case
                  example: "OPConsultation"
              required:
      responses:
        "204":
          description: Case updated successfully (no content)
        "400":
          description: Bad request (missing/invalid fields)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing required field: type"
                  code:
                    type: string
                    example: "BAD_REQUEST"

        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid or expired token"
                  code:
                    type: string
                    example: "UNAUTHORIZED"

        "404":
          description: Case not found – the specified case ID does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Case not found for the given ID"
                  code:
                    type: string
                    example: "CASE_NOT_FOUND"

        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Something went wrong while processing the request"
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"

      security:
        - auth: [ ]

  /mr/api/v1/cases:
    get:
      tags:
        - Cases
      summary: List Cases
      description: >-
        This endpoint returns a list of all cases.
        Results are always ordered by ascending value of `updated_at`.


        **Note**: Use the `offset` param (i.e. `next_token`) for pagination and `u_at__gt` for incremental sync.
      parameters:
        - in: header
          name: X-Pt-Id
          required: true
          schema:
            type: string
          description: Patient ID associated with the case
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Token to fetch the next page of results
        - in: query
          name: u_at__gt
          schema:
            type: string
            nullable: true
            example: 1614556800
          required: false
          description: >
            Return only records with `updated_at` greater than this value (used for incremental sync)

      responses:
        "200":
          description: List of cases
          content:
            application/json:
              schema:
                type: object
                properties:
                  cases:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "case_id_1"
                        status:
                          type: string
                          example: "A"
                          description: Possible enums — A (Active), D (Deleted)
                        updated_at:
                          type: integer
                          example: 1753958070
                        item:
                          type: object
                          nullable: true
                          description: Will be missing in case of deleted case
                          properties:
                            display_name:
                              type: string
                              example: "Leg Injury"
                            type:
                              type: string
                              enum: [ OPConsultation, Prescription, DischargeSummary, DiagnosticReport, ImmunizationRecord, HealthDocumentRecord, WellnessRecord ]
                              description: >
                                Type of case
                              example: "OPConsultation"
                            created_at:
                              type: integer
                              example: 1753958060
                  next_token:
                    type: string
                    nullable: true
                    example: "i_m_next_page_token"
                    description: Token for fetching the next page, if available
        "401":
          description: Unauthorized - Invalid token
        "500":
          description: Internal server error

      security:
        - auth: [ ]

    post:
      tags:
        - Cases
      summary: Create Case
      description: >-
        This endpoint creates a new medical case.

      parameters:
        - in: header
          name: X-Pt-Id
          required: true
          schema:
            type: string
          description: Patient ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: >
                    Unique identifier for the case.
                  example: "CASE_ID"
                display_name:
                  type: string
                  description: Human-readable name for the case
                  example: "Leg Injury"
                type:
                  type: string
                  enum: [ OPConsultation, Prescription, DischargeSummary, DiagnosticReport, ImmunizationRecord, HealthDocumentRecord, WellnessRecord ]
                  description: >
                    Type of case
                  example: "OPConsultation"
              required:
                - display_name
                - type
      responses:
        "200":
          description: Case created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the newly created case
                    example: "case_12345"
        "409":
          description: Case already Exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Case Already Exist"
        "400":
          description: Bad request – missing or invalid fields in the request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing required field: type"
                  code:
                    type: string
                    example: "BAD_REQUEST"
        "401":
          description: Unauthorized – invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access. Invalid token."
                  code:
                    type: string
                    example: "UNAUTHORIZED"
        "500":
          description: Internal server error – unexpected issue while processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred while creating the case."
                  code:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"

      security:
        - auth: [ ]



  /voice-record/api/status/{session_id}:
      get:
        summary: Retrieve voice records result
        description: Retrieve a voice record result using the Session ID (also referred to as Transaction ID).
        deprecated: true
        parameters:
          - name: session_id
            in: path
            required: true
            description: The unique identifier for the voice record is Session ID (also referred to as Transaction ID).
            schema:
              type: string
        responses:
          "200":
            description: Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - queued
                        - inprogress
                        - completed
                        - deleted
                        - error
                        - partial_completed
                      example: "partial_completed"
                    error:
                      type: object
                      example: [{
                        "code": "partial_output_transcription",
                        "message": "Partial Output Transcription"
                      }]
                    warning:
                      type: object
                      example: [{
                        "code": "",
                        "message": ""
                      }]
                    data:
                      type: object
                      properties:
                        output:
                          type: object
                          properties:
                            fhir:
                              type: string
                              example: "eyJlbnRyeSI6W3sicmVxdWVzdCI6eyJtZXRob2QiOiJQVVQiLCJ1cmwiOiJDb25kaXRpb24vMjMxZWIwMGQtNzNkNC01MmM2LTg1OTgtZTMxYjU5YzVmOTRiIn0sInJlc291cmNlIjp7ImlkIjoiMjMxZWIwMGQtNzNkNC01MmM2LTg1OTgtZTMxYjU5YzVmOTRiIiwiZXh0ZW5zaW9uIjpbeyJ1cmwiOiJodHRwczovL2VrYS5jYXJlL2NhcmVfY29udGV4dF9pZCIsInZhbHVlU3RyaW5nIjoiMzBFNzE2RjQtQTlFMS00OUU5LUI2REYtM0FGN0QyN0EwMUU5In1dLCJhc3NlcnRlciI6eyJkaXNwbGF5IjoiZHVtbXkgZG9jdG9yIiwicmVmZXJlbmNlIjoiUHJhY3RpdGlvbmVyLzE2MTQ5MjU4NjY1MzI4NyJ9LCJjYXRlZ29yeSI6W3siY29kaW5nIjpbeyJjb2RlIjoicHJvYmxlbS1saXN0LWl0ZW0iLCJkaXNwbGF5IjoiUHJvYmxlbSBMaXN0IEl0ZW0iLCJzeXN0ZW0iOiJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbmRpdGlvbi1jYXRlZ29yeSJ9XX1dLCJjbGluaWNhbFN0YXR1cyI6eyJjb2RpbmciOlt7ImNvZGUiOiJhY3RpdmUiLCJkaXNwbGF5IjoiYWN0aXZlIiwic3lzdGVtIjoiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb25kaXRpb24tY2xpbmljYWwifV19LCJjb2RlIjp7ImNvZGluZyI6W3siY29kZSI6ImxvY2FsZS0zOGE3OTQ1NjU0M2U1YjhiMmExYmI3NzNkM2I1NDllNCIsImRpc3BsYXkiOiJoeXBlcnRlbnNpb24iLCJzeXN0ZW0iOiJodHRwczovL3BhcmNoaS5la2EuY2FyZSJ9XX0sImVuY291bnRlciI6eyJyZWZlcmVuY2UiOiJFbmNvdW50ZXIvMDFhMzNjMmYtMDNiMC01NzI3LWEwNmYtNjYwYjUzYjllYjliIn0sImV2aWRlbmNlIjpbeyJjb2RlIjpbeyJjb2RpbmciOlt7ImNvZGUiOiIzMEU3MTZGNC1BOUUxLTQ5RTktQjZERi0zQUY3RDI3QTAxRTkiLCJzeXN0ZW0iOiJodHRwOi8vZWthLmNhcmUvcHJlc2NyaXB0aW9ucyJ9XX1dfV0sImlkZW50aWZpZXIiOlt7InN5c3RlbSI6Imh0dHBzOi8vcGFyY2hpLmVrYS5jYXJlIiwidmFsdWUiOiIzMEU3MTZGNC1BOUUxLTQ5RTktQjZERi0zQUY3RDI3QTAxRTkjbG9jYWxlLTM4YTc5NDU2NTQzZTViOGIyYTFiYjc3M2QzYjU0OWU0In1dLCJvbnNldERhdGVUaW1lIjoiMjAxOS0wMi0yMlQwNTo0MTozNi4wODgwMDArMDA6MDAiLCJyZWNvcmRlZERhdGUiOiIyMDI1LTAyLTIyVDA1OjQxOjM2LjA4ODAwMCswMDowMCIsInN1YmplY3QiOnsiZGlzcGxheSI6ImR1bW15X3BhdGllbnQiLCJyZWZlcmVuY2UiOiJQYXRpZW50L2R1bW15X3BhdGllbnRfb2lkIn0sInZlcmlmaWNhdGlvblN0YXR1cyI6eyJjb2RpbmciOlt7ImNvZGUiOiJjb25maXJtZWQiLCJkaXNwbGF5IjoiY29uZmlybWVkIiwic3lzdGVtIjoiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb25kaXRpb24tY2xpbmljYWwifV19LCJyZXNvdXJjZVR5cGUiOiJDb25kaXRpb24ifX0seyJyZXF1ZXN0Ijp7Im1ldGhvZCI6IlBVVCIsInVybCI6Ik9ic2VydmF0aW9uLzQ5N2MyOTY3LThiNWUtNThjYS05ZTBkLTM5YTZiNGIxZGI4YSJ9LCJyZXNvdXJjZSI6eyJpZCI6IjQ5N2MyOTY3LThiNWUtNThjYS05ZTBkLTM5YTZiNGIxZGI4YSIsImV4dGVuc2lvbiI6W3sidXJsIjoiaHR0cHM6Ly9la2EuY2FyZS9jYXJlX2NvbnRleHRfaWQiLCJ2YWx1ZVN0cmluZyI6IjMwRTcxNkY0LUE5RTEtNDlFOS1CNkRGLTNBRjdEMjdBMDFFOSJ9XSwiY2F0ZWdvcnkiOlt7ImNvZGluZyI6W3siY29kZSI6InN5bXB0b20iLCJkaXNwbGF5Ijoic3ltcHRvbSIsInN5c3RlbSI6Imh0dHA6Ly9tZGIuZWthLmNhcmUifV19XSwiY29kZSI6eyJjb2RpbmciOlt7ImNvZGUiOiJsb2NhbGUtMWQ2ZTc2YmZlZmNkYmQ1NTg0ZWM1MmZiYjAwNDEwZTYiLCJkaXNwbGF5Ijoic3RvbWFjaCBwYWluIiwic3lzdGVtIjoiaHR0cHM6Ly9wYXJjaGkuZWthLmNhcmUifV19LCJlbmNvdW50ZXIiOnsicmVmZXJlbmNlIjoiRW5jb3VudGVyLzAxYTMzYzJmLTAzYjAtNTcyNy1hMDZmLTY2MGI1M2I5ZWI5YiJ9LCJpZGVudGlmaWVyIjpbeyJzeXN0ZW0iOiJodHRwczovL3BhcmNoaS5la2EuY2FyZSIsInZhbHVlIjoiMzBFNzE2RjQtQTlFMS00OUU5LUI2REYtM0FGN0QyN0EwMUU5I2xvY2FsZS0xZDZlNzZiZmVmY2RiZDU1ODRlYzUyZmJiMDA0MTBlNiJ9XSwicGVyZm9ybWVyIjpbeyJkaXNwbGF5IjoiZHVtbXkgZG9jdG9yIiwicmVmZXJlbmNlIjoiUHJhY3RpdGlvbmVyLzE2MTQ5MjU4NjY1MzI4NyJ9XSwic3RhdHVzIjoicHJlbGltaW5hcnkiLCJzdWJqZWN0Ijp7ImRpc3BsYXkiOiJkdW1teV9wYXRpZW50IiwicmVmZXJlbmNlIjoiUGF0aWVudC9kdW1teV9wYXRpZW50X29pZCJ9LCJyZXNvdXJjZVR5cGUiOiJPYnNlcnZhdGlvbiJ9fSx7InJlcXVlc3QiOnsibWV0aG9kIjoiUFVUIiwidXJsIjoiT2JzZXJ2YXRpb24vYzdkZmU5MzQtOTlmMy01ZjlkLTg0YmUtMjU5ZGI0MTFmYzMxIn0sInJlc291cmNlIjp7ImlkIjoiYzdkZmU5MzQtOTlmMy01ZjlkLTg0YmUtMjU5ZGI0MTFmYzMxIiwiZXh0ZW5zaW9uIjpbeyJ1cmwiOiJodHRwczovL2VrYS5jYXJlL2NhcmVfY29udGV4dF9pZCIsInZhbHVlU3RyaW5nIjoiMzBFNzE2RjQtQTlFMS00OUU5LUI2REYtM0FGN0QyN0EwMUU5In1dLCJjYXRlZ29yeSI6W3siY29kaW5nIjpbeyJjb2RlIjoic3ltcHRvbSIsImRpc3BsYXkiOiJzeW1wdG9tIiwic3lzdGVtIjoiaHR0cDovL21kYi5la2EuY2FyZSJ9XX1dLCJjb2RlIjp7ImNvZGluZyI6W3siY29kZSI6ImxvY2FsZS03ZmU4NDViMmU2MmNmYTkwNzUwOTg4ZGNkM2JjNGNjYiIsImRpc3BsYXkiOiJuYXVzZWEiLCJzeXN0ZW0iOiJodHRwczovL3BhcmNoaS5la2EuY2FyZSJ9XX0sImVuY291bnRlciI6eyJyZWZlcmVuY2UiOiJFbmNvdW50ZXIvMDFhMzNjMmYtMDNiMC01NzI3LWEwNmYtNjYwYjUzYjllYjliIn0sImlkZW50aWZpZXIiOlt7InN5c3RlbSI6Imh0dHBzOi8vcGFyY2hpLmVrYS5jYXJlIiwidmFsdWUiOiIzMEU3MTZGNC1BOUUxLTQ5RTktQjZERi0zQUY3RDI3QTAxRTkjbG9jYWxlLTdmZTg0NWIyZTYyY2ZhOTA3NTA5ODhkY2QzYmM0Y2NiIn1dLCJwZXJmb3JtZXIiOlt7ImRpc3BsYXkiOiJkdW1teSBkb2N0b3IiLCJyZWZlcmVuY2UiOiJQcmFjdGl0aW9uZXIvMTYxNDkyNTg2NjUzMjg3In1dLCJzdGF0dXMiOiJwcmVsaW1pbmFyeSIsInN1YmplY3QiOnsiZGlzcGxheSI6ImR1bW15X3BhdGllbnQiLCJyZWZlcmVuY2UiOiJQYXRpZW50L2R1bW15X3BhdGllbnRfb2lkIn0sInJlc291cmNlVHlwZSI6Ik9ic2VydmF0aW9uIn19LHsicmVxdWVzdCI6eyJtZXRob2QiOiJQVVQiLCJ1cmwiOiJNZWRpY2F0aW9uUmVxdWVzdC81YTA3ZjM3MS1iOGNhLTViNmEtOWExOC1mMmMzYTZlN2Y1NDMifSwicmVzb3VyY2UiOnsiaWQiOiI1YTA3ZjM3MS1iOGNhLTViNmEtOWExOC1mMmMzYTZlN2Y1NDMiLCJleHRlbnNpb24iOlt7InVybCI6Imh0dHBzOi8vZWthLmNhcmUvY2FyZV9jb250ZXh0X2lkIiwidmFsdWVTdHJpbmciOiIzMEU3MTZGNC1BOUUxLTQ5RTktQjZERi0zQUY3RDI3QTAxRTkifV0sImF1dGhvcmVkT24iOiIyMDI1LTAyLTIyVDA1OjQxOjM2LjA4ODAwMCswMDowMCIsImRvc2FnZUluc3RydWN0aW9uIjpbeyJhZGRpdGlvbmFsSW5zdHJ1Y3Rpb24iOlt7ImNvZGluZyI6W3siZGlzcGxheSI6IjYtMC0wIiwic3lzdGVtIjoiaHR0cHM6Ly9wYXJjaGkuZWthLmNhcmUvIn1dfV0sImRvc2VBbmRSYXRlIjpbeyJ0eXBlIjp7ImNvZGluZyI6W3siY29kZSI6Im9yZGVyZWQiLCJkaXNwbGF5IjoiT3JkZXJlZCIsInN5c3RlbSI6Imh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZG9zZS1yYXRlLXR5cGUifV19fV0sInRleHQiOiJyZWZyYWluIGZyb20gZWF0aW5nIG9pbHkgZm9vZHMiLCJ0aW1pbmciOnsiY29kZSI6eyJjb2RpbmciOlt7InN5c3RlbSI6Imh0dHBzOi8vcGFyY2hpLmVrYS5jYXJlLyJ9XX0sInJlcGVhdCI6eyJmcmVxdWVuY3kiOjMsInBlcmlvZCI6MSwicGVyaW9kVW5pdCI6ImQiLCJ3aGVuIjpbIk1PUk4iXX19fV0sImVuY291bnRlciI6eyJyZWZlcmVuY2UiOiJFbmNvdW50ZXIvMDFhMzNjMmYtMDNiMC01NzI3LWEwNmYtNjYwYjUzYjllYjliIn0sImlkZW50aWZpZXIiOlt7InN5c3RlbSI6Imh0dHBzOi8vcGFyY2hpLmVrYS5jYXJlIiwidXNlIjoib2ZmaWNpYWwiLCJ2YWx1ZSI6IjMwRTcxNkY0LUE5RTEtNDlFOS1CNkRGLTNBRjdEMjdBMDFFOSNsb2NhbGUtODc0MzU1YmFlY2EyN2JjNGZmMTc3MTNlZTg4ZTgzZDMifV0sImludGVudCI6Im9yZGVyIiwibWVkaWNhdGlvbkNvZGVhYmxlQ29uY2VwdCI6eyJjb2RpbmciOlt7ImNvZGUiOiJsb2NhbGUtODc0MzU1YmFlY2EyN2JjNGZmMTc3MTNlZTg4ZTgzZDMiLCJkaXNwbGF5Ijoibm9yZmxveCA0MG1nIHRhYmxldCIsInN5c3RlbSI6Imh0dHA6Ly9la2EuY2FyZS9tZGIifV19LCJyZXF1ZXN0ZXIiOnsiZGlzcGxheSI6ImR1bW15IGRvY3RvciIsInJlZmVyZW5jZSI6IlByYWN0aXRpb25lci8xNjE0OTI1ODY2NTMyODcifSwic3RhdHVzIjoiYWN0aXZlIiwic3ViamVjdCI6eyJkaXNwbGF5IjoiZHVtbXlfcGF0aWVudCIsInJlZmVyZW5jZSI6IlBhdGllbnQvZHVtbXlfcGF0aWVudF9vaWQifSwicmVzb3VyY2VUeXBlIjoiTWVkaWNhdGlvblJlcXVlc3QifX0seyJyZXF1ZXN0Ijp7Im1ldGhvZCI6IlBPU1QiLCJ1cmwiOiJDb21wb3NpdGlvbiJ9LCJyZXNvdXJjZSI6eyJleHRlbnNpb24iOlt7InVybCI6Imh0dHBzOi8vZWthLmNhcmUvY2FyZV9jb250ZXh0X2lkIiwidmFsdWVTdHJpbmciOiIzMEU3MTZGNC1BOUUxLTQ5RTktQjZERi0zQUY3RDI3QTAxRTkifV0sImF1dGhvciI6W3siZGlzcGxheSI6ImR1bW15IGRvY3RvciIsInJlZmVyZW5jZSI6IlByYWN0aXRpb25lci8xNjE0OTI1ODY2NTMyODcifV0sImRhdGUiOiIyMDI1LTAyLTIyVDA1OjQxOjM2LjA4ODAwMCswMDowMCIsImlkZW50aWZpZXIiOnsic3lzdGVtIjoiaHR0cHM6Ly9wYXJjaGkuZWthLmNhcmUiLCJ2YWx1ZSI6IjMwRTcxNkY0LUE5RTEtNDlFOS1CNkRGLTNBRjdEMjdBMDFFOSJ9LCJzZWN0aW9uIjpbeyJlbnRyeSI6W3sicmVmZXJlbmNlIjoiQ29uZGl0aW9uLzIzMWViMDBkLTczZDQtNTJjNi04NTk4LWUzMWI1OWM1Zjk0YiJ9XSwidGl0bGUiOiJDb25kaXRpb24ifSx7ImVudHJ5IjpbeyJyZWZlcmVuY2UiOiJPYnNlcnZhdGlvbi80OTdjMjk2Ny04YjVlLTU4Y2EtOWUwZC0zOWE2YjRiMWRiOGEifSx7InJlZmVyZW5jZSI6Ik9ic2VydmF0aW9uL2M3ZGZlOTM0LTk5ZjMtNWY5ZC04NGJlLTI1OWRiNDExZmMzMSJ9XSwidGl0bGUiOiJPYnNlcnZhdGlvbiJ9LHsiZW50cnkiOlt7InJlZmVyZW5jZSI6Ik1lZGljYXRpb25SZXF1ZXN0LzVhMDdmMzcxLWI4Y2EtNWI2YS05YTE4LWYyYzNhNmU3ZjU0MyJ9XSwidGl0bGUiOiJNZWRpY2F0aW9uUmVxdWVzdCJ9XSwic3RhdHVzIjoicHJlbGltaW5hcnkiLCJzdWJqZWN0Ijp7ImRpc3BsYXkiOiJkdW1teV9wYXRpZW50IiwicmVmZXJlbmNlIjoiUGF0aWVudC9kdW1teV9wYXRpZW50X29pZCJ9LCJ0aXRsZSI6IlByZXNjcmlwdGlvbiIsInR5cGUiOnsiY29kaW5nIjpbeyJjb2RlIjoiNDQwNTQ1MDA2IiwiZGlzcGxheSI6IlByZXNjcmlwdGlvbiByZWNvcmQiLCJzeXN0ZW0iOiJodHRwOi8vc25vbWVkLmluZm8vc2N0In1dfSwicmVzb3VyY2VUeXBlIjoiQ29tcG9zaXRpb24ifX1dLCJ0eXBlIjoiYmF0Y2giLCJyZXNvdXJjZVR5cGUiOiJCdW5kbGUifQ=="
          "400":
            description: Bad Request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                example:
                  error:
                    code: INVALID_REQUEST_PARAMETERS
                    message: The request contains invalid parameters
          "403":
            description: Forbidden
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                example:
                  error:
                    code: ACCESS_DENIED
                    message: "Access denied. You do not have permission to view this upload result." 
          "404":
            description: when requested session id has no data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Not Found
          "401":
            description: Unauthorized. Invalid or missing authentication.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Unauthorized
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                example:
                  error:
                    code: SERVER_ERROR
                    message: An unexpected error occurred while processing your request. Please try again later.

        security:
          - auth: []

components:
  schemas:
    DocumentTypeQueryParamV2:
      type: string
      description: |
        Specifies the type of document being uploaded. 
        The following values are allowed:
        - `lr`: Lab Report
      enum:
        - lr
    DocumentTypeQueryParam:
      type: string
      description: |
        Specifies the type of document being uploaded. 
        The following values are allowed:
        - `ps`: Prescription
        - `lr`: Lab Report
        - `ot`: Other
        - `ds`: Discharge Summary
        - `vc`: Vaccine Certificate
        - `in`: Insurance
        - `iv`: Invoice
        - `sc`: Scan
      enum:
        - ps
        - lr
        - ot
        - ds
        - vc
        - in
        - iv
        - sc

    UploadTaskQueryParam:
      type: string
      description: |
        Specifies the type of document being uploaded. 
        The following values are allowed:
        - `smart`: Parse the document to smart report
        - `pii`: Parse Personal Identification Information from the document
      enum:
        - smart
        - pii
      

    FileUploadRequest:
      type: object
      properties:
        contentType:
          type: string
          description: The MIME type of the file (e.g., image/jpeg, application/pdf).
        file_size:
          type: integer
          format: int64
          description: Unit of file size should be bytes
      required:
        - contentType
        - file_size

    UpdateDocumentV3Request:
      type: object
      properties:
        dt:
          $ref: "#/components/schemas/DocumentTypeQueryParam"
        dd_e:
          type: integer
          format: int64
          description: Format should be in epoch seconds.
        tg:
          type: array
          description: The tag array can contain a maximum of **10 tags**.
            If more than 10 tags are provided in the request, only the **first 10 tags** will be considered.
          items:
            type: string
            description: Each tag must be between **2 to 20 characters** in length.

        files:
          type: array
          description: A list of files to be uploaded, each with a specified content type and size.
          items:
            $ref: "#/components/schemas/FileUploadRequest"
        title:
          type: string
          description: Title of the document. Max length of 256 characters.
          nullable: true
      required:
        - files
    UploadResponse:
      type: object
      properties:
        error:
          type: boolean
          example: false
        message:
          type: string
          example: ""
        batch_response:
          type: array
          items:
            $ref: "#/components/schemas/UploadResponseBody"

    ErrorUploadResponse:
      type: object
      properties:
        error:
          type: boolean
          example: true
        message:
          type: string
          description: Description of the error encountered
        batch_response:
          type: array
          items:
            $ref: "#/components/schemas/UploadResponseBody"
        token:
          type: string
          format: date-time

    UploadResponseBody:
      type: object
      properties:
        document_id:
          type: string
        forms:
          type: array
          items:
            $ref: "#/components/schemas/UploadResponseBodyForms"
    UploadResponseBodyForms:
      type: object
      properties:
        url:
          type: string
        fields:
          type: object
          additionalProperties:
            type: string
    FileProcessingResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["queued", "inprogress", "completed", "deleted", "error"]
          description: The current status of the request.
        error:
          type: array
          items:
            type: object
            properties:
              code:
                type: integer
                description: Error code.
              message:
                type: string
                description: Error message.
        data:
          type: object
          properties:
            fhir:
              type: string
              format: byte
              description: Base64 encoded FHIR data.
            output:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      test_name:
                        type: string
                        description: Name of the test.
                      data:
                        type: object
                        properties:
                          value:
                            type: number
                            description: Measured value of the test.
                          unit:
                            type: string
                            description: Original unit.
                          unit_processed:
                            type: string
                            description: Processed unit.
                          normal_range_report:
                            type: string
                            description: JSON string of normal range as reported.
                          normal_range_eka:
                            type: string
                            description: JSON string of normal range for Eka.
                          unit_eka_id:
                            type: string
                            description: Eka ID for the unit.
                          display_range:
                            type: string
                            description: Displayed range.
                      normalised_data:
                        type: object
                        properties:
                          value:
                            type: number
                            description: Normalized value.
                          unit:
                            type: string
                            description: Normalized unit.
                          normal_range_report:
                            type: string
                            description: JSON string of normalized range as reported.
                          normal_range_eka:
                            type: string
                            description: JSON string of normalized range for Eka.
                          unit_eka_id:
                            type: string
                            description: Eka ID for the normalized unit.
                      confidence:
                        type: number
                        description: Confidence level in the test data.
                      test_eka_id:
                        type: string
                        description: Eka ID for the test.
                      loinc_id:
                        type: string
                        description: LOINC ID of the test.
                pii:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: object
                      properties:
                        PageNum:
                          type: integer
                          description: Page number in the document.
                        DocumentDate:
                          type: integer
                          format: int64
                          description: Epoch timestamp of the document date.
                        Patient:
                          type: object
                          properties:
                            Age:
                              type: object
                              properties:
                                Years:
                                  type: integer
                                  description: Age in years.
                                Months:
                                  type: integer
                                  description: Age in months.
                                Days:
                                  type: integer
                                  description: Age in days.
                            Gender:
                              type: string
                              description: Gender of the patient.
                            Name:
                              type: string
                              description: Name of the patient.
                        Report:
                          type: object
                          properties:
                            SampleCollectionDate:
                              type: string
                              format: date-time
                              description: Date and time of sample collection.
                            SampleReceivedDate:
                              type: string
                              format: date-time
                              description: Date and time the sample was received.
                            GeneratedDate:
                              type: string
                              format: date-time
                              description: Date and time the report was generated.
                            Doctor:
                              type: string
                              description: Name of the doctor associated with the report.
                            Facility:
                              type: string
                              description: Name of the facility generating the report.
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
