openapi: 3.1.0
info:
  title: Document Upload API
  description: API to pre-sign the URL for uploading documents.
  version: 1.0.0
  license:
    name: Proprietary License
    url: https://developer.eka.care/license

servers:
  - url: https://api.eka.care
    description: Production server
  - url: https://api.dev.eka.care
    description: Development server
tags:
  - name: Records
    description: API related to records document management.
paths:
  /mr/api/v3/docs:
    post:
      operationId: getAuthorization
      tags:
        - Records
      summary: Obtain a Presigned URL for Document Upload
      description: Generate a presigned URL that allows you to securely upload a document to the server. This URL can be used to upload the document directly without needing additional authentication or authorization steps.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                batch_request:
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateDocumentV3Request'
            example:
              batch_request:
                -
                  dt: "ps"
                  sh: false
                  dd: "2021-03-01"
                  tg: ["tag1", "tag2"]
                  files:
                    -
                      contentType: "image/jpeg"
                      file_size: 110000
      responses:
        '200':
          description: Presigned URL successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUploadResponse'
              examples:
                ErrorUploadResponse:
                  summary: Example of an error response with an empty batch_request
                  value:
                    error: true
                    message: "Invalid document type."
                    batch_response: []  # Empty array for batch_request
                    upload_time: null
        '500':
          description: Internal Server Error. No response body is expected.
        '502':
          description: Bad Gateway. No response body is expected.
        '503':
          description: Service Unavailable. No response body is expected.
        '504':
          description: Gateway Timeout. No response body is expected.
      security:
        - auth: []

  /upload:
    post:
      summary: Upload Records
      description: Upload a records using the signed URL for each document requested in obtain authorization API
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              additionalProperties:
                type: string
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload.
              required:
                - file
      responses:
        '204':
          description: No Content - Successful Upload with No Response Body
        '403':
          description: Forbidden - Access Denied
          content:
            application/xml:
              schema:
                type: object
                properties:
                  Error:
                    type: object
                    properties:
                      Code:
                        type: string
                        description: Error code.
                      Message:
                        type: string
                        description: Error message.
                      RequestId:
                        type: string
                        description: Request ID.
                      HostId:
                        type: string
                        description: Host ID.
                example:
                  Error:
                    Code: "AccessDenied"
                    Message: "Invalid according to Policy: Extra input fields: content-type"
                    RequestId: "JGD23XY93Z00Z2DB"
                    HostId: "NjZf6f4Yo3LwikPHTwtyS02TEftaoWWvS8BmfRlQmA5pwllX6FHyMuO4hNVT0AIBOwKHFoEFkk8="
        '500':
          description: Internal Server Error

  /mr/api/v4/docs:
    get:
      summary: Fetch documents based on filters
      description: To get the list of all the records for an given patient oid
      operationId: getDocuments
      parameters:
        - name: oid
          in: query
          required: true
          schema:
            type: string
          description: Object ID to filter documents.
        - name: sort
          in: query
          required: true
          schema:
            type: string
          description: Sort order of the documents.
        - name: flavour
          in: query
          required: true
          schema:
            type: string
          description: Flavour to specify the type of documents to fetch.

      responses:
        '200':
          description: A list of documents matching the query.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            record:
                              type: object
                              properties:
                                item:
                                  type: object
                                  properties:
                                    documentId:
                                      type: string
                                      description: Unique ID of the document.
                                      example: df04c7e6-577b-4990-948c-5a31820c6a67
                                    uploadDate:
                                      type: string
                                      format: date-time
                                      description: Date when the document was uploaded.
                                      example: 2024-08-06T07:39:35Z
                                    documentType:
                                      type: string
                                      description: Type of the document.
                                      example: TYPE_LAB_REPORT
                                    metadata:
                                      type: object
                                      properties:
                                        thumbnail:
                                          type: string
                                          format: uri
                                          description: URL of the document's thumbnail.
                                          example: https://vault-cdn.dev.eka.care/fac0704e-a0e3-4c93-a972-e6c1f188592d/df04c7e6-577b-4990-948c-5a31820c6a67/5dbc4b75-df1a-412d-82a3-77d54671398c.jpeg
                                        documentDate:
                                          type: string
                                          format: date-time
                                          description: Date of the document.
                                          example: 2021-09-08T18:30:00Z
                                        tags:
                                          type: array
                                          items:
                                            type: string
                                            description: Tags associated with the document.
                                            example: TYPE_TAG_SMART
                                        cta:
                                          type: object
                                          properties:
                                            pid:
                                              type: string
                                              description: PID for CTA.
                                              example: deepthought_page
                                            params:
                                              type: object
                                              properties:
                                                context:
                                                  type: string
                                                  description: Context parameter for the CTA.
                                                  example: '{"prescription_id":"P-PP-68F9D6EC-536B-4BC2-8366-EBEA8C42E35E"}'
                                                page_type:
                                                  type: string
                                                  description: Page type for the CTA.
                                                  example: smart_prescription
                                            ctaParamsProto:
                                              type: string
                                              description: CTA parameters in proto format.
                                              example: '{"context":"{\"prescription_id\":\"P-PP-68F9D6EC-536B-4BC2-8366-EBEA8C42E35E\"}","page_type":"smart_prescription"}'
                                    patientOid:
                                      type: string
                                      description: Patient OID associated with the document.
                                      example: 161494290947153
                                hash:
                                  type: string
                                  description: Hash of the document.
                                  example: b81bc27bc1e7608a93dcf675ecc21125aaf9351c88bdbde55f0a3b01ccc6c234
        '400':
          description: Bad Request. Invalid or missing parameters.
        '401':
          description: Unauthorized. Invalid JWT token or client ID.
        '500':
          description: Internal Server Error.
      security:
        - auth: []

  /health/api/v1/fhir/retrieve:
    get:
      summary: Retrieve health records
      description: Retrieve a health record based on the given identifier, hip_id, and health_id in nrces FHIR json format.
      parameters:
        - name: identifier
          in: query
          required: true
          description: The unique identifier for the health record.
          schema:
            type: string
        - name: hip_id
          in: query
          required: true
          description: The HIP (Health Information Provider) ID.
          schema:
            type: string
        - name: health_id
          in: query
          required: true
          description: The health ID associated with the record.
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of health records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  resourceType:
                    type: string
                    example: Bundle
                  type:
                    type: string
                    example: document
                  link:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                        relation:
                          type: string
                  entry:
                    type: array
                    items:
                      type: object
                      properties:
                        resource:
                          type: object
                          properties:
                            author:
                              type: array
                              items:
                                type: object
                                properties:
                                  reference:
                                    type: string
                            date:
                              type: string
                              format: date-time
                            extension:
                              type: array
                              items:
                                type: object
                                properties:
                                  url:
                                    type: string
                                  valueString:
                                    type: string
                            id:
                              type: string
                            identifier:
                              type: object
                              properties:
                                system:
                                  type: string
                                value:
                                  type: string
                            meta:
                              type: object
                              properties:
                                lastUpdated:
                                  type: string
                                  format: date-time
                            resourceType:
                              type: string
                            section:
                              type: array
                              items:
                                type: object
                                properties:
                                  entry:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        reference:
                                          type: string
                                  title:
                                    type: string
                            status:
                              type: string
                            subject:
                              type: object
                              properties:
                                reference:
                                  type: string
                            title:
                              type: string
                            type:
                              type: object
                              properties:
                                text:
                                  type: string
                  id:
                    type: string
                  meta:
                    type: object
                    properties:
                      versionId:
                        type: string
                      lastUpdated:
                        type: string
                        format: date-time
                      profile:
                        type: array
                        items:
                          type: string
                      security:
                        type: array
                        items:
                          type: object
                          properties:
                            code:
                              type: string
                            display:
                              type: string
                            system:
                              type: string
                  identifier:
                    type: object
                    properties:
                      system:
                        type: string
                      value:
                        type: string
                  timestamp:
                    type: string
                    format: date-time
        '404':
          description: when request identifier, hip_id, health_id has no data
          content:
            application/json:
              schema:
                type: object
                properties:
                  resourceType:
                    type: string
                    example: Bundle
                  type:
                    type: string
                    example: document
                  meta:
                    type: object
                    properties:
                      lastUpdated:
                        type: string
                        format: date-time
        '401':
          description: Unauthorized. Invalid or missing authentication.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
      security:
        - auth: []
  /mr/webhook/smart-report:
    post:
      summary: Smart Report Events
      description: When records get uploaded, a webhook event is sent to register to get the smart report of the record upload. If there are multiple records upload in upload docs API we need to register web hook for all the document id recevied in the reponse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_type:
                  type: string
                  example: "smart-report"
                timestamp:
                  type: string
                  example: "2023-07-30T18:07:24.000Z"
                data:
                  type: array
                  items:
                    type: string
                  example: ["09779b1b-4b2a-453b-8854-2fc0af2f1d93"]
      responses:
        '200':
          description: Forbidden - Access Denied
        '204':
          description: Forbidden - Access Denied
        '400':
          description: Forbidden - Access Denied
        '403':
          description: Forbidden - Access Denied
        '500':
          description: Forbidden - Access Denied
      security:
        - auth: []

components:
  schemas:
    DocumentTypeQueryParam:
      type: string
      description: |
        Specifies the type of document being uploaded. 
        The following values are allowed:
        - `ps`: Prescription
        - `lr`: Lab Report
        - `ot`: Other
        - `ds`: Discharge Summary
        - `vc`: Vaccine Certificate
        - `in`: Insurance
        - `iv`: Invoice
        - `sc`: Scan
      enum:
        - ps
        - lr
        - ot
        - ds
        - vc
        - in
        - iv
        - sc

    FileUploadRequest:
      type: object
      properties:
        contentType:
          type: string
        file_size:
          type: integer
          format: int64
          description: Unit of file size should be bytes

    UpdateDocumentV3Request:
      type: object
      properties:
        dt:
          $ref: '#/components/schemas/DocumentTypeQueryParam'
        dd:
          type: string
          format: date-time
          description: Format should "YYYY-MM-DD"
        sh:
          type: boolean
        tg:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileUploadRequest'

    UploadResponse:
      type: object
      properties:
        error:
          type: boolean
          example: false
        message:
          type: string
          example: ""
        batch_response:
          type: array
          items:
            $ref: '#/components/schemas/UploadResponseBody'
        token:
          type: string
          format: date-time

    ErrorUploadResponse:
      type: object
      properties:
        error:
          type: boolean
          example: true
        message:
          type: string
          description: Description of the error encountered
        batch_response:
          type: array
          items:
            $ref: '#/components/schemas/UploadResponseBody'
        token:
          type: string
          format: date-time

    UploadResponseBody:
      type: object
      properties:
        document_id:
          type: string
        forms:
          type: array
          items:
            $ref: '#/components/schemas/UploadResponseBodyForms'

    UploadResponseBodyForms:
      type: object
      properties:
        url:
          type: string
        fields:
          $ref: '#/components/schemas/Fields'

    Fields:
      type: object
      properties:
        Content-Type:
          type: string
        Policy:
          type: string
        X-Amz-Algorithm:
          type: string
        X-Amz-Credential:
          type: string
        X-Amz-Date:
          type: string
        X-Amz-Security-Token:
          type: string
        X-Amz-Signature:
          type: string
        key:
          type: string

  securitySchemes:
    auth:
      type: apiKey
      in: header
      name: auth
      description: |
        The API requires the following auth in headers for authentication.
