openapi: 3.1.0
info:
  title: Webhook Service for the Connect Clients
  description: |
    The Webhook Service allows clients to register webhooks that are triggered based on specific events. Each webhook is associated with a business_id, connect_id, url, and a scope. The scope defines the type of events that will trigger the webhook.
  version: 1.0.0
servers:
  - url: https://api.eka.care
components:
  securitySchemes:
    auth:
      type: apiKey
      in: header
      name: auth
      description: |
        The API requires the following auth in headers for authentication.
  schemas:
    RegisterWebhookRequest:
      type: object
      properties:
        scope:
          type: string
          description: Enum - all, appointment, sa
          example: "appointment"
        endpoint:
          type: string
          description: The URL where the webhook will send POST requests.
          example: "https://example.com/webhook"
        signing_key:
          type: string
          description: A secret key for securing the webhook.
          example: "supersecretkey"
        connect_id:
          type: string
          description: connect_id will only come here in hub.eka.care caller case
          example: "connect_12345"
        protocol:
          type: string
          description: Enum - http, https, SQS endpoint, Lambda function
          example: "https"
      required:
        - endpoint

    WebhookResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the webhook.
          example: "7"
        scope:
          type: string
          description: The scope of events that will trigger the webhook.
          example: "appointment"
        endpoint:
          type: string
          description: The URL where the webhook will send POST requests.
          example: "https://example.com/webhook"
        signing_key:
          type: string
          description: A secret key for securing the webhook.
          nullable: true
          example: "supersecretkey"
        connect_id:
          type: string
          description: The connect identifier associated with the webhook.
          example: "testing"
        protocol:
          type: string
          description: The protocol used for the webhook.
          example: "https"
        created_at:
          type: string
          format: date-time
          description: The timestamp when the webhook was created.
          example: "2024-10-07T13:53:52Z"
        updated_at:
          type: string
          format: date-time
          description: The timestamp when the webhook was last updated.
          example: "2024-10-07T13:53:52Z"
        created_by:
          type: string
          description: The user who created the webhook.
          example: "testing"
        updated_by:
          type: string
          description: The user who last updated the webhook.
          example: "testing"

    WebhookResponseList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookResponse'
        msg:
          type: string
          description: The message indicating the status of the response.
          example: "success"

    UpdateWebhookRequest:
      type: object
      properties:
        signing_key:
          type: string
          description: A new signing key for securing the webhook.
          example: "newsecretkey"
        endpoint:
          type: string
          description: A new URL where the webhook will send POST requests.
          example: "https://newexample.com/webhook"

paths:
  /notification/v1/connect/webhook/subscriptions:
    post:
      tags:
        - Webhooks
      summary: Register Webhook
      description: Registers a new webhook.
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWebhookRequest'
      responses:
        '201':
          description: Webhook registered successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebhookResponse'
                  msg:
                    type: string
                    example: "success"
        '400':
          description: endpoint is missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "endpoint is missing"
                  code:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Internal Server Error"
                  code:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
    get:
      tags:
        - Webhooks
      summary: Get Webhooks
      description: Retrieves all registered webhooks.
      security:
        - auth: []
      responses:
        '200':
          description: List of webhooks.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebhookResponse'
                  msg:
                    type: string
                    example: "success"
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Invalid request"
                  code:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
        500:
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Internal Server Error"
                  code:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"

  /notification/v1/connect/webhook/subscriptions/{id}:
    patch:
      tags:
        - Webhooks
      summary: Update Webhook
      description: Updates an existing webhook's URL or event type based on its ID.
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
      responses:
        '200':
          description: Webhook updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "webhook updated successfully"
                  msg:
                    type: string
                    example: "success"
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Invalid request"
                  code:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
        '404':
          description: Webhook not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Webhook not found"
                  code:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Internal Server Error"
                  code:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
    delete:
      tags:
        - Webhooks
      summary: Delete a Webhook
      description: Deletes an existing webhook based on its ID.
      security:
        - auth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhook updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "webhook updated successfully"
                  msg:
                    type: string
                    example: "success"
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Invalid request"
                  code:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
        '404':
          description: Webhook not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Webhook not found"
                  code:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Internal Server Error"
                  code:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
