openapi: 3.0.0
info:
  title: Ekacare API & Webhook Documentation
  contact: { }
  version: '1.0'
servers:
  - description: Production
    url: https://api.eka.care
  - description: Stage/Sandbox
    url: https://api.dev.eka.care
paths:
  /dr/v1/patient:
    post:
      tags:
        - Patient Registration API
      summary: Add Patient to Directory
      description: >-
        This functionality enables the addition of new patient records to a
        business' directory. Users can provide necessary details such as personal
        information, contact details, and medical history to create a new
        patient profile.


        > _In case the patient is already registered with Eka care, then
        passing the patient eka id will be enough_

      operationId: AddPatienttoDirectory
      parameters:
        - name: auth
          in: header
          required: True
          description: >-
            The auth token of business_id. It is used to authenticate the business. The token can be fetched from the auth api.
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJiX2lkIjoiMTIzNDU2IiwiY2xpZW50X2lkIjoiNzg5MCIsImV4dHJhX2ZpZWxkIjoiZXh0cmFfZmllbGRfZGF0YSJ9.q9KzBI6f4l3OyM_EkB5Quq0l9EEMFh5JS-fx3F_PHUM
      requestBody:
        description: 'Request body for adding a patient to the directory'
        content:
          application/json:
            schema:
              type: object
              required: ["first_name", "mobile", "gender"]
              properties:
                designation:
                  type: string
                  enum:
                    - "Mr."
                    - "Ms."
                    - "Mrs."
                    - "Miss."
                    - "Kumar."
                    - "Shri."
                    - "Smt."
                    - "Dr."
                    - "Master."
                    - "Baby."
                    - "Mohd."
                    - "B/O"
                  example: "Mr."
                  description: "Title or designation of the patient"
                first_name:
                  type: string
                  example: "Test"
                  description: "First name of the patient"
                partner_patient_id:
                  type: string
                  example: "6742984"
                  description: "Identifier for the partnerâ€™s patient."
                middle_name:
                  type: string
                  example: ""
                  description: "Middle name of the patient (if any)"
                last_name:
                  type: string
                  example: "Patient"
                  description: "Last name of the patient"
                mobile:
                  type: string
                  example: "+919999999999"
                  description: "Mobile number of the patient, including country code"
                gender:
                  type: string
                  example: "M"
                  description: "Gender of the patient (e.g., 'M' for male, 'F' for female, 'O' for others)"
                  enum:
                    - "M"
                    - "F"
                    - "O"
                address:
                  type: object
                  properties:
                    city:
                      type: string
                      example: "Bangalore"
                    line1:
                      type: string
                      example: "ABC"
                    line2:
                      type: string
                      example: "XYZ"
                    pincode:
                      type: integer
                      example: 560049
                    state:
                      type: string
                      example: "Karnataka"
                    country:
                      type: string
                      example: "India"
                  description: "Address details of the patient"
                partner_meta:
                  type: object
                  properties:
                    key1:
                      type: string
                      example: "value1"
              oneOf:
                - title: DOB
                  properties:
                    dob:
                      type: string
                      format: date
                      example: "1987-01-06"
                      description: "Date of birth of the patient (YYYY-MM-DD)"
                  required:
                    - dob
                - title: AGE
                  properties:
                    age:
                      type: integer
                      example: 24
                      description: "Age in years"
                  required:
                    - age

      responses:
        '201':
          description: OK
          headers:
            Date:
              schema:
                type: string
                example: Tue, 24 Mar 2020 06:26:06 GMT
            Content-Length:
              schema:
                type: string
                example: '380'
            Connection:
              schema:
                type: string
                example: keep-alive
            Server:
              schema:
                type: string
                example: nginx/1.10.3 (Ubuntu)
            Vary:
              schema:
                type: string
                example: Cookie, Accept-Encoding
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=15768000
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: string
                    example: "123456789"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
                  status_code:
                    type: integer
                  success:
                    type: boolean
              example:
                error:
                  code: "PATIENT_ALREADY_EXISTS"
                  message: "Patient already exists with the same partner_patient_id: abc"

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenFinal'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500InternalServerFinal'
      deprecated: false
  /dr/v1/patient/{patient_id}:
    get:
      tags:
        - Patient Registration API
      summary: Get patient details by profile id
      description: >
        This API provides functionality to get details of a patient by their Eka
        profile id, from a business' directory.

        The patient should have been previously added to the business directory for this API to return the patient's details.


      operationId: Getpatientdetailsbyid
      parameters:
        - name: auth
          in: header
          required: true
          description: >
            The auth token of the business. It is used to authenticate the client. This should be fetched from auth API.
          schema:
            type: string
          example: >
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJiX2lkIjoiMTIzNDU2IiwiY2xpZW50X2lkIjoiNzg5MCIsImV4dHJhX2ZpZWxkIjoiZXh0cmFfZmllbGRfZGF0YSJ9.q9KzBI6f4l3OyM_EkB5Quq0l9EEMFh5JS-fx3F_PHUM
        - name: patient_id
          in: path
          required: true
          description: Patient's Eka profile id
          schema:
            type: string

      responses:
        '200':
          description: OK
          headers:
            Date:
              schema:
                type: string
              example: Tue, 24 Mar 2020 06:26:06 GMT
            Content-Length:
              schema:
                type: string
              example: '380'
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx/1.10.3 (Ubuntu)
            Vary:
              schema:
                type: string
              example: Cookie, Accept-Encoding
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Strict-Transport-Security:
              schema:
                type: string
              example: max-age=15768000
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: string
                    example: '189673451298376'
                  partner_patient_id:
                    type: string
                    example: 'MO1298376'
                  first_name:
                    type: string
                    example: Raj
                  middle_name:
                    type: string
                    example: ''
                  last_name:
                    type: string
                    example: Sharma
                  gender:
                    type: string
                    enum:
                      - M
                      - F
                      - O
                    example: M
                  dob:
                    type: string
                    format: date
                    example: '1988-11-30'
                  email:
                    type: string
                    example: raj.sharma@example.com
                  mobile:
                    type: string
                    example: '+919876543210'
                  address:
                    type: object
                    properties:
                      line1:
                        type: string
                        example: 'B504, Seabreeze Heights,'
                      city:
                        type: string
                        example: Mumbai
                      pincode:
                        type: string
                        example: '400001'
                  tag:
                    type: string
                    example: "tag#1"
                  partner_meta:
                    type: object
                    additionalProperties: true
                    example:
                      key1: value1
                  created_at:
                    type: integer
                    example: 1732607432
                  relations:
                    type: array
                    items:
                      type: object
                      properties:
                        relation:
                          type: string
                          enum:
                            - Husband
                            - Wife
                            - Father
                            - Mother
                            - Son
                            - Daughter
                            - Brother
                            - Sister
                            - Grandfather
                            - Grandmother
                            - Spouse
                            - Father & Mother
                            - Cousin Brother
                            - Cousin Sister
                            - Paternal Uncle
                            - Paternal Aunt
                            - Maternal Uncle
                            - Maternal Aunt
                            - Paternal Grandfather
                            - Paternal Grandmother
                            - Maternal Grandfather
                            - Maternal Grandmother
                            - Great grandfather
                            - Great grandmother
                            - Niece
                            - Nephew
                          example: Husband
                        pid:
                          type: string
                          example: '144051779835569'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "PATIENTS_NOT_FOUND"
                      message:
                        type: string
                        example: "No patients found with the provided id belonging to this business"
                  status_code:
                    type: integer
                    example: 404
                  success:
                    type: boolean
                    example: false
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: {}
                  status_code:
                    type: integer
                    example: 403
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "UNAUTHORIZED_ACCESS"
                      message:
                        type: string
                        example: "You do not have permission to get details for this patient"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    example: {}
                  status_code:
                    type: integer
                    example: 500
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "SERVER_ERROR"
                      message:
                        type: string
                        example: "An unexpected error occurred on the server"
      deprecated: false
    patch:
      tags:
        - Update Patient Details API
      summary: Update Patient Details
      
      description: >-
        Thi API provides functionality to update patient details for the
        registered patients.

      operationId: UpdatePatientDetailsAPI
      parameters:
        - name: auth
          in: header
          required: True
          description: >-
            The auth token of business_id. It is used to authenticate the business. The token can be fetched from the auth api.
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJiX2lkIjoiMTIzNDU2IiwiY2xpZW50X2lkIjoiNzg5MCIsImV4dHJhX2ZpZWxkIjoiZXh0cmFfZmllbGRfZGF0YSJ9.q9KzBI6f4l3OyM_EkB5Quq0l9EEMFh5JS-fx3F_PHUM
        - name: patient_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      requestBody:
        description: 'Request body for updating a patient to the directory'
        content:
          application/json:
            schema:
              type: object
              properties:
                designation:
                  type: string
                  enum:
                    - "Mr."
                    - "Ms."
                    - "Mrs."
                    - "Miss."
                    - "Kumar."
                    - "Shri."
                    - "Smt."
                    - "Dr."
                    - "Master."
                    - "Baby."
                    - "Mohd."
                    - "B/O"
                  example: "Mr."
                  description: "Title or designation of the patient"
                first_name:
                  type: string
                  example: "Test"
                  description: "First name of the patient"
                middle_name:
                  type: string
                  example: ""
                  description: "Middle name of the patient (if any)"
                last_name:
                  type: string
                  example: "Patient"
                  description: "Last name of the patient"
                gender:
                  type: string
                  example: "M"
                  description: "Gender of the patient (e.g., 'M' for male, 'F' for female, 'O' for others)"
                  enum:
                    - "M"
                    - "F"
                    - "O"
                address:
                  type: object
                  properties:
                    city:
                      type: string
                      example: "Bangalore"
                    line1:
                      type: string
                      example: "ABC"
                    line2:
                      type: string
                      example: "XYZ"
                    pincode:
                      type: integer
                      example: 560049
                    state:
                      type: string
                      example: "Karnataka"
                    country:
                      type: string
                      example: "India"
                  description: "Address details of the patient"
                partner_meta:
                  type: object
                  properties:
                    key1:
                      type: string
                      example: "value1"
              oneOf:
                - title: DOB
                  properties:
                    dob:
                      type: string
                      format: date
                      example: "1987-01-06"
                      description: "Date of birth of the patient (YYYY-MM-DD)"
                - title: AGE
                  properties:
                    age:
                      type: integer
                      example: 24
                      description: "Age in years"
                  
      responses:
        '201':
          description: OK
          headers:
            Date:
              schema:
                type: string
                example: Tue, 24 Mar 2020 06:26:06 GMT
            Content-Length:
              schema:
                type: string
                example: '380'
            Connection:
              schema:
                type: string
                example: keep-alive
            Server:
              schema:
                type: string
                example: nginx/1.10.3 (Ubuntu)
            Vary:
              schema:
                type: string
                example: Cookie, Accept-Encoding
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=15768000
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient_id:
                    type: string
                    example: "123456789"

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenFinal'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500InternalServerFinal'
      deprecated: false
  
  /dr/v1/business/patients/search:
    get:
      tags:
        - Patient Registration API
      summary: Search Patient profiles by mobile number
      description: >-
        This API provides functionality to get all profiles of patient by their mobile
        number in business' directory. 
        
        
        <Note> This API only works on 10 digit mobile number and cannot be used for searching partial phone numbers.
        The patient with given mobile number should already be registered with business account for results to show up. </Note>
        
        
        
        ### Request Parameter


        | Parameter | Type | Expected Values | Description |
        Required/Optional/Not Required |

        | --- | --- | --- | --- | --- |

        | mobile | string | 10 digit phone number | Patient's mobile number | Required |


        ### **Response parameter**


        | Parameter                           | Type      | Expected Values                           | Description                                               |
        
        | ----------------------------------- | --------- | ----------------------------------------- | --------------------------------------------------------- |
        
        | data                                | object    |                                           | Response data object                                      |
        
        | data.profiles                       | array     |                                           | List of patient profiles                                  |
        
        | data.profiles[].name                | string    | "Amit Kumar"                              | Patient's full name                                       |
        
        | data.profiles[].patient_id          | string  | "123456789012345"                        | Unique identifier for the patient (can be null)           |
        
        | data.profiles[].patient_profile     | object    |                                           | Detailed patient profile information                      |
        
        | data.profiles[].patient_profile.created_at | string    | "2024-08-13T07:31:53.750Z"               | Timestamp of profile creation                             |
        
        | data.profiles[].patient_profile.dob | string    | "1990-05-15"                              | Patient's date of birth                                   |
        
        | data.profiles[].patient_profile.first_name | string    | "Amit"                                  | Patient's first name                                      |
        
        | data.profiles[].patient_profile.middle_name | string    | ""                                       | Patient's middle name (can be empty)                      |
        
        | data.profiles[].patient_profile.last_name | string    | "Kumar"                                 | Patient's last name                                       |
        
        | data.profiles[].patient_profile.gender | string    | "M" / "F" / "O"                                  | Patient's gender                                          |
        
        | data.profiles[].patient_profile.mobile | string    | "+919876543210"                           | Patient's mobile number                                   |
        
        | data.profiles[].patient_profile.patient_id | string \| null | "123456789012345"                     | Unique identifier for the patient (can be null)           |
        
        | status_code                         | integer   | 200                                       | HTTP status code of the response                          |
        
        | success                             | boolean   | true                                      | Indicates if the request was successful                   |
        
        
        **Status Codes**


        â€¢ 200: Success


        â€¢ 403: Patient/Business data missing


        â€¢ 500: Wrong API URL/Wrong JSON request/ Something went wrong
      operationId: SearchPatientbymobile
      parameters:
        - name: mobile
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: <mobile_no>
        - name: auth
          in: header
          required: True
          description: >-
            The auth token of the user. It is used to authenticate the user.
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJiX2lkIjoiMTIzNDU2IiwiY2xpZW50X2lkIjoiNzg5MCIsImV4dHJhX2ZpZWxkIjoiZXh0cmFfZmllbGRfZGF0YSJ9.q9KzBI6f4l3OyM_EkB5Quq0l9EEMFh5JS-fx3F_PHUM
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 24 Mar 2020 06:26:06 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '380'
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Cookie, Accept-Encoding
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/200OK2'
                  - example:
                      data:
                        profiles:
                          - name: Amit Kumar
                            patient_id: '987654321098722'
                            patient_profile:
                              patient_id: '987654321098722'
                              first_name: Amit
                              middle_name: ''
                              last_name: Kumar
                              dob: '1990-05-15'
                              gender: 'M'
                              mobile: '+919876543210'
                              created_at: '2024-08-13T07:31:53.750Z'
                          - name: Priya Sharma
                            patient_id: '98765432109222'
                            patient_profile:
                              patient_id: '987654321098722'
                              first_name: Priya
                              middle_name: ''
                              last_name: Sharma
                              dob: '1985-09-20'
                              gender: 'F'
                              mobile: '+918765432109'
                              created_at: '2023-10-26T06:20:36.758Z'
                          - name: Rahul Gupta
                            patient_id: '987654321098765'
                            patient_profile:
                              patient_id: '987654321098765'
                              first_name: Rahul
                              middle_name: ''
                              last_name: Gupta
                              dob: '1978-11-30'
                              gender: 'M'
                              mobile: '+917654321098'
                              created_at: '2024-08-14T09:01:14.806Z'
                      status_code: 200
                      success: true
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
                  status_code:
                    type: integer
                  success:
                    type: boolean
              example:
                error:
                  code: "PATIENTS_NOT_FOUND"
                  message: "No patients found with the provided mobile number"
                status_code: 404
                success: false
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  status_code:
                    type: integer
                  success:
                    type: boolean
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                data: { }
                status_code: 403
                success: false
                error:
                  code: "UNAUTHORIZED_ACCESS"
                  message: "You do not have permission to search for patients"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  status_code:
                    type: integer
                  success:
                    type: boolean
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                data: { }
                status_code: 500
                success: false
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false
  /dr/v1/business/entities:
    get:
      tags:
        - Doctor and clinic API
      summary: Get Clinic and Doctor details
      description: >-
        
        ### Overview
        
        The Get Clinic and Doctor Details API provides a comprehensive list of clinics and doctors associated with those clinics for a business. This API is designed to retrieve detailed information about clinics, the doctors working at each clinic, and the overarching business entity.
        
        ### Endpoint
        
        **URL:** `{{HOST}}/dr/v1/business/entities`
        
        
        **Method:** GET
        
        ### Request Parameters
        
        This endpoint does not require any parameters. The auth header contains business-id information which will be used to fetch the details.
        
        ### Response Parameters
        
        | Parameter | Type | Description |
        
        | --- | --- | --- |
        
        | status | integer | HTTP status code of the response |
        
        | data | object | Response data object |
        
        | data.clinics | array | List of clinic objects |
        
        | data.clinics[].clinic_id | string | Unique identifier of the clinic |
        
        | data.clinics[].name | string | Name of the clinic |
        
        | data.clinics[].doctors | array | List of doctor IDs associated with the clinic |
        
        | data.doctors | array | List of doctor objects |
        
        | data.doctors[].name | string | Name of the doctor |
        
        | data.doctors[].doctor_id | string | Unique identifier of the doctor |
        
        | data.business | object | Details of the business entity |
        
        | data.business.business_id | string | Unique identifier of the business |
        
        | data.business.name | string | Name of the business |

      operationId: GetClinicandDoctordetails
      parameters:
        - name: auth
          in: header
          description: >-
            The auth token of the business. It is used to authenticate the client. This should be fetched from auth api.
          required: true
          style: simple
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJiX2lkIjoiMTIzNDU2IiwiY2xpZW50X2lkIjoiNzg5MCIsImV4dHJhX2ZpZWxkIjoiZXh0cmFfZmllbGRfZGF0YSJ9.q9KzBI6f4l3OyM_EkB5Quq0l9EEMFh5JS-fx3F_PHUM
      responses:
        '200':
          description: OK
          headers: { }
          content:
            application/json:
              schema:
                type: string
                example:
                  status_code: 200
                  success: true
                  data:
                    clinics:
                      - clinic_id: "{{clinic_id1}}"
                        name: "Skin clinic derma 1"
                        doctors:
                          - "12345678901234"
                          - "11987654321765"
                      - clinic_id: "{{clinic_id2}}"
                        name: "family clinic 2"
                        doctors:
                          - "87198101903i101"
                    doctors:
                      - name: "Dr. GP Physician"
                        doctor_id: "12345678901234"
                        pic: "https://abc.eka.care/doctor-avatar/123456789"
                      - name: "Dr. ABC XYZ"
                        doctor_id: "11987654321765"
                        pic: "https://abc.eka.care/doctor-avatar/123456789"
                      - name: "Dr. Ortho Doctor"
                        doctor_id: "87198101903i101"
                        pic: "https://abc.eka.care/doctor-avatar/123456789"
                    business:
                      business_id: "{{business_id}}"
                      name: "{{business_name}}"
        '403':
          description: Forbidden
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 403
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Access denied. Insufficient permissions to retrieve business data."
              example:
                data: { }
                status_code: 403
                success: false
                error:
                  code: "UNAUTHORIZED_ACCESS"
                  message: "Access denied. Insufficient permissions to retrieve business data."
        '404':
          description: Not Found
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 404
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Business not found with the provided business_id."
              example:
                data: { }
                status_code: 404
                success: false
                error:
                  code: "BUSINESS_NOT_FOUND"
                  message: "Business not found with the provided business_id."
        '500':
          description: Internal Server Error
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 500
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An unexpected error occurred while processing your request."
              example:
                data: { }
                status_code: 500
                success: false
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false
  /dr/v1/business/clinic/{clinic_id}:
    get:
      tags:
        - Doctor and clinic API
      summary: Get Clinic details
      description: >-
        ### Overview

        This API endpoint retrieves detailed information about a specific clinic using its unique identifier.

        ### Endpoint

        **URL:** `{{HOST}}/dr/v1/business/clinic/{{clinic_id}}`

        **Method:** GET

        ### Request Parameters

        | Parameter | Type | Description | Required |
        
        | --- | --- | --- | --- |
        
        | clinic_id | string | Unique identifier for the clinic | Yes |

        ### Response Parameters

        | Parameter | Type | Description |
        
        | --- | --- | --- |
        
        | success | boolean | Indicates if the request was successful |
        
        | data | object | Response data object |
        
        | data.clinic | object | Clinic details |
        
        | data.clinic.clinic_id | string | Unique identifier of the clinic |
        
        | data.clinic.name | string | Name of the clinic |
        
        | data.clinic.address | object | Address details of the clinic |
        
        | data.clinic.address.city | string | City of the clinic |
        
        | data.clinic.address.country | string | Country of the clinic |
        
        | data.clinic.address.lat | string | Latitude of the clinic |
        
        | data.clinic.address.line1 | string | Address line 1 |
        
        | data.clinic.address.lon | string | Longitude of the clinic |
        
        | data.clinic.address.pincode | string | Pincode of the clinic |
        
        | data.clinic.address.state | string | State of the clinic |

      operationId: GetClinicDetails
      parameters:
        - name: auth
          in: header
          description: >-
            The auth token of the business. It is used to authenticate the client. This should be fetched from auth API.
          required: true
          style: simple
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJiX2lkIjoiMTIzNDU2IiwiY2xpZW50X2lkIjoiNzg5MCIsImV4dHJhX2ZpZWxkIjoiZXh0cmFfZmllbGRfZGF0YSJ9.q9KzBI6f4l3OyM_EkB5Quq0l9EEMFh5JS-fx3F_PHUM
        - name: clinic_id
          in: path
          description: Unique identifier for the clinic
          required: true
          style: simple
          schema:
            type: string
            example: 62e7929ea968a6001e80e833
      responses:
        '200':
          description: OK
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      clinic:
                        type: object
                        properties:
                          clinic_id:
                            type: string
                            example: 62e7929ab123a6001e80e833
                          name:
                            type: string
                            example: DIABETES AND ENDOCRINE CLINIC
                          address:
                            type: object
                            properties:
                              city:
                                type: string
                                example: Bangalore
                              country:
                                type: string
                                example: India
                              lat:
                                type: string
                                example: 20.1777602
                              line1:
                                type: string
                                example: 302, 3rd floor, RK
                              lon:
                                type: string
                                example: 71.8255817
                              pincode:
                                type: string
                                example: 560048
                              state:
                                type: string
                                example: Karnataka
        '404':
          description: Not Found
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: CLINIC_NOT_FOUND
                  message:
                    type: string
                    example: The specified clinic_id does not exist
        '500':
          description: Internal Server Error
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: SERVER_ERROR
                  message:
                    type: string
                    example: An unexpected error occurred on the server
  /dr/v1/doctor/{doctor_id}:
    get:
      tags:
        - Doctor and clinic API
      summary: Get Doctor profile
      description: >-
        
        ### Overview
        
        This API endpoint is used to retrieve detailed information about a specific doctor using their unique identifier. The response includes comprehensive information about the doctor, such as personal details, specializations, and associated clinics.
        
        ### Request Parameters
        
        
        | Parameter | Type | Description | Required |
        
        | --- | --- | --- | --- |
        
        | doctor_id | string | Unique identifier for the doctor | Yes |
        
        
        ### Response Parameters


        | Parameter | Type | Description |

        | --- | --- | --- |

        | id | string | Unique identifier for the doctor in Eka |

        | created_at | datetime | Timestamp when the doctor profile was created
        |

        | profile | object | Doctor's profile details |

        | profile.personal | object | Personal details of the doctor |

        | profile.personal.designation | string | Designation (e.g., Dr.) |

        | profile.personal.first_name | string | First name of the doctor |

        | profile.personal.middle_name | string | Middle name of the doctor |

        | profile.personal.last_name | string | Last name of the doctor |

        | profile.personal.email | string | Email address of the doctor |

        | profile.personal.gender | string | Gender of the doctor |

        | profile.personal.dob | date | Date of birth of the doctor |

        | profile.professional | object | Professional details of the doctor |

        | profile.professional.username | string | Username of the Doctor|

        | profile.professional.active | boolean | Flag indicating if the profile
        is active |

        | profile.professional.about | string | About section describing the
        doctor |

        | profile.professional.language | array | Languages spoken by the doctor
        |

        | profile.professional.language\[\].language | string | Language name
        (e.g., English) |

        | profile.professional.clinics | array | Clinics associated with the
        doctor |

        | profile.professional.clinics\[\] | object | Clinic details |

        | profile.professional.clinics\[\]..id | string | Unique identifier for
        the clinic |

        | profile.professional.clinics\[\].city_name | string | City name where
        the clinic is located |

        | profile.professional.clinics\[\].name | string | Name of the clinic |

        | profile.professional.clinics\[\].email | string | Email address of the
        clinic |

        | profile.professional.clinics\[\].about | string | About section of the
        clinic |

        | profile.professional.clinics\[\].speciality | array | Specialities
        offered at the clinic |

        | profile.professional.clinics\[\].number | array | Contact numbers for
        the clinic |

        | profile.professional.clinics\[\].number\[\].name | string | Type of
        contact number (e.g., Phone, Mobile) |

        | profile.professional.clinics\[\].number\[\].n | string | Contact
        number |

        | profile.professional.clinics\[\].address | object | Address details of
        the clinic |

        | profile.professional.clinics\[\].address.line1 | string | Address line
        1 |

        | profile.professional.clinics\[\].address.line2 | string | Address line
        2 |

        | profile.professional.clinics\[\].address.city | string | City of the
        clinic |

        | profile.professional.clinics\[\].address.state | string | State of the
        clinic |

        | profile.professional.clinics\[\].address.country | string | Country of
        the clinic |

        | profile.professional.clinics\[\].address.pincode | string | Pincode of
        the clinic |

        | profile.professional.clinics\[\].location | array | Location
        coordinates of the clinic |

        | profile.professional.default_clinic | string | Default clinic ID |

        | profile.professional.all_registrations | array | Registrations of the
        doctor |

        | profile.professional.all_registrations\[\].id | number | Registration
        ID |

        | profile.professional.all_registrations\[\].council | string | Medical
        council name |

        | profile.professional.all_registrations\[\].medical_id | string |
        Medical ID number |

        | profile.professional.all_registrations\[\].year | string | Year of
        registration |

        | profile.professional.all_registrations\[\].default | boolean | Flag
        indicating if it is the default registration |

        | profile.professional.degree | array | Degrees earned by the doctor |

        | profile.professional.degree\[\].id | number | Degree ID |

        | profile.professional.degree\[\].name | string | Name of the degree |

        | profile.professional.degree\[\].branch_name | string | Branch name |

        | profile.professional.degree\[\].college_name | string | College name |

        | profile.professional.degree\[\].display_status | string | Display
        status of the degree |

        | profile.professional.degree\[\].start_year | string | Start year of
        the degree |

        | profile.professional.degree\[\].end_year | string | End year of the
        degree |

        | profile.professional.major_speciality | object | Major speciality of
        the doctor |

        | profile.professional.major_speciality.name | string | Name of the
        major speciality |

        | profile.professional.speciality | array | Specialities of the doctor |

        | profile.professional.speciality\[\].name | string | Name of the
        speciality |

        | **Status Codes** |  |  |


        â€¢ 200: Success


        â€¢ 403: Doctor data missing


        â€¢ 500: Wrong API URL/Token mismatched/Wrong JSON request.
      operationId: GetDoctorprofile
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: doctor_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 24 Mar 2020 06:26:06 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '380'
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Cookie, Accept-Encoding
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/200OK4'
                  - example:
                      id: '1234567890'
                      profile:
                        personal:
                          first_name: Rahul
                          middle_name: ''
                          last_name: Kumar
                          dob: '1970-01-01'
                          gender: M
                          pic: "https://a.eka.care/doctor-avatar/170062845263102"
                        professional:
                          active: true
                          username: 'dr-rahul-kumar-cardiologist'
                          about: >-
                            Dr. Rahul Kumar is a Cardiologist with 43 years of
                            experience.
                          language:
                            - code: en
                              language: English
                          degree:
                            - name: "MBBS,MD"
                              branch_name: ''
                              college_name: ''
                              start_year: ''
                              end_year: ''
                          major_speciality:
                            name: Cardiologist
                            code: CA
                          speciality:
                            - name: General Physician
                            - name: Diabetologist
                            - name: Allergy Specialist
                          clinics:
                            - id: '1234567899876'
                              name: Vagus Hospital & Health Services
                              contacts:
                                - name: Phone
                                  number: '+91999999999'
                              address:
                                line1: >-
                                  H No -122/a,, Pocket 2 back side of Yamaha 2
                                  wheeler showroom., Pocket 2, Gate No :-2,
                                  nearest to Homeopathy clinic.
                                city: Delhi
                                country: India
                                state: Delhi
                                pin: '110085'
                          default_clinic: '1234567899876'
        '403':
          description: Forbidden
          headers: { }
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/403ForbiddenBusinessPatientDetailsMissing1
                  - example:
                      data: { }
                      error:
                        code: UNAUTHORIZED_ENTITY
                        message: >-
                          You are not authorized to view requisted resource
                          Doctor
              example:
                data: { }
                error:
                  code: UNAUTHORIZED_ENTITY
                  message: You are not authorized to view requisted resource Doctor
        '500':
          description: Internal Server Error
          headers: { }
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/500WrongAPIURLTokenmismatchedWrongJSONrequest.1
                  - example:
                      data: { }
                      error:
                        code: INVALID_DATA
                        message: Doctor id entered is incorrect
              example:
                data: { }
                error:
                  code: INVALID_DATA
                  message: Doctor id entered is incorrect
      deprecated: false
  /v1/doctor/clinics/{doctor_id}:
    get:
      tags:
        - Doctor and clinic API
      summary: Get Clinics for doctor [WIP]
      description: >-
        This API provides functionality to search a patient by their mobile
        number in doctor's directory


        ### Request Parameter


        | Parameter | Type | Expected Values | Description |
        Required/Optional/Not Required |

        | --- | --- | --- | --- | --- |

        | doctor_id | string |  | Unique identifier for the doctor | Required |


        ### **Response parameter**


        **Status Codes**


        â€¢ 200: Success


        â€¢ 403: Patient/Organization data missing


        â€¢ 500: Wrong API URL/Token mismatched/Wrong JSON request.
      operationId: GetClinicsfordoctor[WIP]
      parameters:
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            enum:
              - application/json
            type: string
            example: application/json
        - name: doctor_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 24 Mar 2020 06:26:06 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '380'
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Cookie, Accept-Encoding
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
          content: { }
        '403':
          description: Forbidden
          headers: { }
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/403ForbiddenBusinessPatientDetailsMissing11
                  - example:
                      data: { }
                      err:
                        code: DOCTOR_DATA_INVALID
                        message: Please enter valid doctor data
              example:
                data: { }
                err:
                  code: DOCTOR_DATA_INVALID
                  message: Please enter valid doctor data
        '500':
          description: Internal Server Error
          headers: { }
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/500WrongAPIURLTokenmismatchedWrongJSONrequest.11
                  - example:
                      data: { }
                      err:
                        code: INVALID_DATA
                        message: Data entered in incorrect
              example:
                data: { }
                err:
                  code: INVALID_DATA
                  message: Data entered in incorrect
      deprecated: false
  /dr/v1/doctor/{doctor_id}/clinic/{clinic_id}/appointment/slot:
    get:
      tags:
        - Appointment API
      summary: Get Appointment Slots
      description: >-
        This API is the first step in booking appointment slot for a patient at
        a doctor's clinic
        
      operationId: GetAppointmentSlots
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: start_date
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '{{start_date}}'
        - name: end_date
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '{{end_date}}'
        - name: doctor_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: clinic_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sun, 12 Apr 2020 11:09:57 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '377'
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Cookie, Accept-Encoding
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      schedule:
                        type: object
                        additionalProperties:
                          type: object
                          additionalProperties:
                            type: array
                            items:
                              type: object
                              properties:
                                available:
                                  type: boolean
                                conf_id:
                                  type: string
                                e:
                                  type: string
                                  format: date-time
                                s:
                                  type: string
                                  format: date-time
                                slots_booked:
                                  type: integer
                                  nullable: true
                      services:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            allow_patient_booking:
                              type: boolean
                            appointment_type:
                              type: string
                            c_at:
                              type: string
                              format: date-time
                            conf_id:
                              type: string
                            mode:
                              type: array
                              items:
                                type: string
                            owner_id:
                              type: string
                            post_pay:
                              type: boolean
                            pre_pay:
                              type: boolean
                            price:
                              type: number
                              nullable: true
                            service_name:
                              type: string
              example:
                data:
                  schedule:
                    '60532c7dcb46901ba3a3e462':
                      - service_type: consultation
                        slots:
                          - available: false
                            conf_id: 30daff8bf9df0abd81ad041003b4690a436db2ad26016814bca037ce0ba22e3b
                            e: '2024-09-05T09:30:00+05:30'
                            s: '2024-09-05T09:15:00+05:30'
                          - available: true
                            conf_id: 30daff8bf9df0abd81ad041003b4690a436db2ad26016814bca037ce0ba22e3b
                            e: '2024-09-05T09:45:00+05:30'
                            s: '2024-09-05T09:30:00+05:30'
                          - available: false
                            conf_id: 30daff8bf9df0abd81ad041003b4690a436db2ad26016814bca037ce0ba22e3b
                            e: '2024-09-05T10:00:00+05:30'
                            s: '2024-09-05T09:45:00+05:30'
                          - available: true
                            conf_id: 30daff8bf9df0abd81ad041003b4690a436db2ad26016814bca037ce0ba22e3b
                            e: '2024-09-05T10:15:00+05:30'
                            s: '2024-09-05T10:00:00+05:30'
                          - available: true
                            conf_id: 30daff8bf9df0abd81ad041003b4690a436db2ad26016814bca037ce0ba22e3b
                            e: '2024-09-05T10:30:00+05:30'
                            s: '2024-09-05T10:15:00+05:30'
                  services:
                    '30daff8bf9df0abd81ad041003b4690a436db2ad26016814bca037ce0ba22e3b':
                      allow_patient_booking: true
                      appointment_type: REGULAR
                      conf_id: 30daff8bf9df0abd81ad041003b4690a436db2ad26016814bca037ce0ba22e3b
                      conv_fee: 0
                      currency: INR
                      discount: 0
                      mode:
                        - in-clinic
                      owner_id: '161419272566611'
                      post_pay: false
                      pre_pay: true
                      price: 500
                      service_id: 1
                      service_name: "consultation"
                success: 'true'
                status_code: 200
        '400':
          description: Bad Request
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sun, 12 Apr 2024 11:10:57 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '152'
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  status_code:
                    type: integer
                  message:
                    type: string
              example:
                success: 'false'
                status_code: 400
                message: "Invalid request parameters. Please check your input and try again."

        '403':
          description: Forbidden
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sun, 12 Apr 2024 11:11:57 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '145'
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  status_code:
                    type: integer
                  message:
                    type: string
              example:
                success: 'false'
                status_code: 403
                message: "Access denied. You do not have permission to view this doctor's schedule."

        '404':
          description: Not Found
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sun, 12 Apr 2024 11:12:57 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '126'
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  status_code:
                    type: integer
                  message:
                    type: string
              example:
                success: 'false'
                status_code: 404
                message: "Doctor not found. Please check the provided doctor ID."

        '500':
          description: Internal Server Error
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Sun, 12 Apr 2024 11:13:57 GMT
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '158'
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  status_code:
                    type: integer
                  message:
                    type: string
              example:
                success: 'false'
                status_code: 500
                message: "An unexpected error occurred while processing your request. Please try again later."
      deprecated: false
  /dr/v1/appointment:
    post:
      tags:
        - Appointment API
      summary: Book Appointment Slot
      description: >-
        This API is used to book an appointment slot for a patient based on the
        available slots retrieved from the `get appointment slots` API.

      operationId: BookAppointmentSlot
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: >-
                The request body should contain either partner-specific fields or non-partner-specific fields for clinic and doctor identification.

              properties:
                partner_appointment_id:
                  type: string
                appointment_details:
                  type: object
                  properties:
                    mode:
                      type: string
                      enum: [ INCLINIC, PHONE, VIDEO ]
                    start_time:
                      type: integer
                      description: 'Start time of the appointment in epoch'
                    end_time:
                      type: integer
                      description: 'End time of the appointment in epoch'
                    custom_attributes:
                      type: object
                      description: '`Custom attributes` and `value` for each custom attribute are a fixed set of enum defined by our partner at the time of onboarding. `Labels` and `Tags` are `special type` of custom attributes which exist by default for every partner and are visible in appointment queue. key-value pair within labels and tags can be defined by each repective partner. Position of other custom attributes in appointment queue need to configured by partner.'
                    video_connect:
                      type: object
                      description: 'Configuration of video connect. To be used only when mode is `VIDEO`'
                      properties:
                        vendor:
                          type: string
                          enum: [ 100ms ]
                        url:
                          type: string
                  required:
                    - start_time
                patient_details:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: "Test"
                      description: "First name of the patient"
                    middle_name:
                      type: string
                      example: ""
                      description: "Middle name of the patient (if any)"
                    last_name:
                      type: string
                      example: "Patient"
                      description: "Last name of the patient"
                    mobile:
                      type: string
                      example: "+919999999999"
                      description: "Mobile number of the patient, including country code"
                    gender:
                      type: string
                      example: "M"
                      description: "Gender of the patient (e.g., 'M' for male, 'F' for female, 'O' for others)"
                      enum:
                        - "M"
                        - "F"
                        - "O"
                    address:
                      type: object
                      properties:
                        city:
                          type: string
                          example: "Bangalore"
                        line1:
                          type: string
                          example: "ABC"
                        line2:
                          type: string
                          example: "XYZ"
                        pincode:
                          type: integer
                          example: 560049
                        state:
                          type: string
                          example: "Karnataka"
                        country:
                          type: string
                          example: "India"
                      description: "Address details of the patient"
                    partner_meta:
                      type: object
                      properties:
                        key1:
                          type: string
                          example: "value1"
                  oneOf:
                    - title: DOB
                      properties:
                        dob:
                          type: string
                          format: date
                          example: "1987-01-06"
                          description: "Date of birth of the patient (YYYY-MM-DD)"
                      required:
                        - dob
                    - title: AGE
                      properties:
                        age:
                          type: integer
                          example: 24
                          description: "Age in months"
                      required:
                        - age
                partner_meta:
                  type: object
                  description: This field is a set of `key-value pair` very specific to our partner and not visible in appointment queue. These key-value pairs are just stored at our end and echoed back in appointment related apis. We dont use it for any computation.

              oneOf:
                - title: PartnerIds
                  properties:
                    partner_clinic_id:
                      type: string
                      description: 'Identifier for the partnerâ€™s clinic. Please ensure the clinic is registered on the hub'
                    partner_doctor_id:
                      type: string
                      description: 'Identifier for the partnerâ€™s doctor. Please ensure the doctor is registered on the hub'
                    partner_patient_id:
                      type: string
                      description: 'Identifier for the partnerâ€™s patient. Please ensure the patient is registered beforehand using the "Add Patient" API.'
                  required:
                    - partner_clinic_id
                    - partner_doctor_id
                    - partner_patient_id

                - title: EkaIds
                  properties:
                    clinic_id:
                      type: string
                      description: 'Identifier for the clinic in Eka.'
                    doctor_id:
                      type: string
                      description: 'Identifier for the doctor in Eka.'
                    patient_id:
                      type: string
                      description: 'Identifier for the patient in Eka.'
                  required:
                    - clinic_id
                    - doctor_id
                    - patient_id

              required:
                - appointment_details
                
            example:
              partner_appointment_id: "098765434567890"
              partner_clinic_id: "642783"
              partner_doctor_id: "8423994"
              partner_patient_id: "6742984"
              appointment_details:
                start_time: 1730189586
                end_time: 1730189586
                mode: "INCLINIC"
                custom_attributes:
                  label: ["vitals_submitted"]
                  tags: ["paid", "in_consult"]
                video_connect:
                  vendor: "other"
                  url: "https://xyz.com"
              patient_details:
                first_name: "Test"
                mobile: "+919999999999"
                gender: "M"
                dob : "1987-01-16"
              partner_meta:
                encounter_id: "123"
      responses:
        '201':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointment_id:
                    type: string
              example:
                appointment_id: "{{appointment_id}}"
                  
        '400':
          description: Bad Request
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/400BadRequest1'
                  - example:
                      data: { }
                      error:
                        code: INVALID_REQUEST_PARAMETERS
                        message: The request contains invalid parameters
              example:
                error:
                  code: INVALID_REQUEST_PARAMETERS
                  message: The request contains invalid parameters
      deprecated: false
  /dr/v1/appointment/slots/reserve:
    post:
      tags:
        - Appointment API
      summary: Reserve appointment for business [Special Case- Do NOT use]
      description: >-
        This API is used to book an appointment slot for a patient which
        reserves an appointment in a dummy way, that can be rescheduled and
        checked in once patient is available.


        In this API, slots avaiability is not checked and a dumy reservation is
        made.


        Slots will **not** be `reserved` in this case but only an appointment
        will be assigned to a slot. Staff can then reschedule the appointment
        and assign to a particular doctor and a proper visit date and time.


        - if no `visit_start_date` is passed, next available slot of current
        date will be booked.
        
        - The dummy reservation **archives/deleted** once the date of
        reservation crosses.
        
        - To keep the reservation alive, one can pass a future date (say 3
        months) while calling this API so that booking is valid till then.
        
        - Staff can search for the patient name, go to the appointment, and
        reschedule to correct doctor+datetime
        
        
        **Method:** POST


        ### Request Parameters

        | Parameter | Type | Expected Values | Description | Required/Optional/Not Required |
        
        | --- | --- | --- | --- | --- |

        | first_name | string | Patient | Patient's first name | Required |

        | middle_name | string | | Patient's middle name | Optional |

        | last_name | string | Test | Patient's last name | Required |

        | dob | string | 1987-01-06 | Patient's date of birth | Required |

        | mobile | string | +919999999999 | Patient's mobile number | Required |

        | gender | string | M/F/O | Patient's gender | Required |

        | doctor_id | string | default | Doctor's ID | Required |

        | clinic_id | string | {{clinic_id}} | Clinic's ID | Required |

        | visit_start_time | string | 2024-06-26T11:28:45.000Z | Start time of the appointment slot | Optional |

        | client_meta.client_visit_id | string | RNI1234567 | Client visit ID | Optional |

        | client_meta.patient_id | string | P123456 | Patient ID | Optional |


        ### Response Parameters

        | Parameter | Type | Expected Values | Description | Required/Optional/Not Required |
        
        | --- | --- | --- | --- | --- |

        | appointment_id | string | apt-12345-123456 | Appointment's ID | Required |

        | doctor_id | string | 1234567890 | Doctor's ID | Required |

        | patient_id | string | 1234567890 | Patient's ID | Required |

        | clinic_id | string | 019319i10i01a3e462 | Clinic's ID | Required |

        | channel | string | Walkin | Channel of appointment | Required |

        | status | string | BK | Status of appointment | Required |

        | start_time | string | 2024-06-26T11:28:45.000Z | Start time of the appointment | Required |

        | end_time | string | 2024-06-26T11:28:45.000Z | End time of the appointment | Required |

        | message | string | Appointment has been confirmed | Confirmation message | Required |


        **Status Codes**  

        â€¢ 200: Success


        â€¢ 400: Bad Request


        â€¢ 403: Forbidden
      operationId: Reserveappointmentforbusiness[SpecialCase-DoNOTuse]
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: x-api-key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: '{{x-api-key}}'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                patient:
                  type: object
                  properties:
                    designation:
                      type: string
                    first_name:
                      type: string
                    middle_name:
                      type: string
                    last_name:
                      type: string
                    dob:
                      type: string
                      format: date
                    mobile:
                      type: string
                    gender:
                      type: string
                      enum: [ M, F, O ]
                visit_start_time:
                  type: string
                  format: date-time
                doctor_id:
                  type: string
                clinic_id:
                  type: string
                client_meta:
                  type: object
                  properties:
                    client_visit_id:
                      type: string
                    patient_id:
                      type: string
                    payment_details:
                      type: object
                      properties:
                        payment_id:
                          type: string
                        amount_paid:
                          type: string
            example:
              patient:
                designation: "Mr."
                first_name: "Test"
                middle_name: ""
                last_name: "Patient"
                dob: "1987-01-06"
                mobile: "+919999999999"
                gender: "M"
              visit_start_time: "2024-06-26T11:28:45.000Z"
              doctor_id: "{{doctor_id}}"
              clinic_id: "{{clinic_id}}"
              client_meta:
                # information from client registration system
                client_visit_id: "RNI1234567"
                patient_id: "P123456"
                payment_details:
                  payment_id: "txn_123"
                  amount_paid: "1010.50"
        required: true
      responses:
        '200':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  data:
                    type: object
                    properties:
                      appointment_id:
                        type: string
                      doctor_id:
                        type: string
                      patient_id:
                        type: string
                      clinic_id:
                        type: string
                      channel:
                        type: string
                      status:
                        type: string
                      start_time:
                        type: string
                        format: date-time
                      end_time:
                        type: string
                        format: date-time
                      message:
                        type: string
                      created_at:
                        type: string
                        format: date-time
              example:
                status: 200
                status_code: 200
                success: "true"
                data:
                  appointment_id: "{{appointment_id}}"
                  doctor_id: "{{doctor_id}}"
                  patient_id: "{{patient_id}}"
                  clinic_id: "{{clinic_id}}"
                  channel: "Walkin"
                  status: "BK"
                  start_time: "2024-06-26T11:28:45.000Z"
                  end_time: "2024-06-26T11:28:45.000Z"
                  message: "Appointment has been confirmed"
                  created_at: "2024-06-26T11:28:45.000Z"
        '400':
          description: Bad Request
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/400BadRequest3'
                  - example:
                      status: 400
                      data: { }
                      error:
                        code: INVALID_REQUEST_PARAMETERS
                        message: The request contains invalid parameters
              example:
                status: 400
                data: { }
                error:
                  code: INVALID_REQUEST_PARAMETERS
                  message: The request contains invalid parameters
        '403':
          description: Forbidden
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/403Forbidden3'
                  - example:
                      status: 403
                      data: { }
                      error:
                        code: UNAUTHORIZED_ENTITY
                        message: >-
                          Unauthorized access. Booking appointments for business
                          entities or doctors is not allowed
              example:
                status: 403
                data: { }
                error:
                  code: UNAUTHORIZED_ENTITY
                  message: >-
                    Unauthorized access. Booking appointments for business
                    entities or doctors is not allowed
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/422-UnprocessableEntity1'
                  - example:
                      status: 422
                      data: { }
                      error:
                        code: APPOINTMENT_BOOKING_FAILED
                        message: Unable to book appointment due to unavailable slots
                        details:
                          reason: NO_AVAILABLE_SLOTS
                          doctorId: '12345'
              example:
                status: 422
                data: { }
                error:
                  code: APPOINTMENT_BOOKING_FAILED
                  message: Unable to book appointment due to unavailable slots
                  details:
                    reason: NO_AVAILABLE_SLOTS
                    doctorId: '12345'
      deprecated: false
      security: [ ]
  /dr/v1/appointment/{appointment_id}:
    get:
      tags:
        - Appointment API
      summary: Get Appointment Details
      description: >-
        
        
        ### Overview

        This API endpoint is used to retrieve the details of an appointment
        using its unique identifier. The response includes comprehensive
        information about the appointment, including patient and doctor details,
        appointment status, and related services.
        
        
        Appointment_statuses:
          - BK    : Booked
          - OG    : Ongoing
          - CM	  : Completed with Prescription
          - CMNP  : Completed without a Prescription
          - CN    : Cancelled
          - CND   : Cancelled by Doctor
          - CNS   : Cancelled by Staff

      operationId: GetappointmentDetails
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: appointment_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      responses:
        '200':
          description: OK
          headers:
            Date:
              schema:
                type: string
              example: Sun, 12 Apr 2020 11:09:57 GMT
            Content-Length:
              schema:
                type: string
              example: '377'
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx/1.10.3 (Ubuntu)
            Vary:
              schema:
                type: string
              example: Cookie, Accept-Encoding
            Content-Encoding:
              schema:
                type: string
              example: gzip
            Strict-Transport-Security:
              schema:
                type: string
              example: max-age=15768000
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointment_id:
                    type: string
                  created_at:
                    type: integer
                  doctor_id:
                    type: string
                  patient_id:
                    type: string
                  clinic_id:
                    type: string
                  channel:
                    type: string
                  status:
                    type: string
                    example: "BK"
                    enum:
                      - "BK"
                      - "OG"
                      - "CM"
                      - "CMNP"
                      - "CN"
                      - "CND"
                      - "CNS"
                  mode:
                    type: string
                    example: "in_clinic"
                    enum:
                      - "tele"
                      - "in_clinic"
                  start_time:
                    type: integer
                  end_time:
                    type: integer
                  payment:
                    type: object
                    properties:
                      payment_id:
                        type: string
                        nullable: true
                      payment_status:
                        type: string
                        nullable: true
                      amount:
                        type: number
                        nullable: true
                  prescription_id:
                    type: string
                  service:
                    type: object
                    properties:
                      created_at:
                        type: integer
                      mode:
                        type: array
                        items:
                          type: string
                      price:
                        type: number
                        nullable: true
                      post_pay:
                        type: boolean
                      service_name:
                        type: string
                      book_ahead_days:
                        type: integer
                      appointment_type:
                        type: string
                      allow_patient_booking:
                        type: boolean
                  # New properties added
                  prescription_url:
                    type: string
                  custom_attributes:
                    type: object  
                  partner_meta:
                    type: object
                example:
                  appointment_id: "{{eka_appointment_id}}"
                  partner_appointment_id: "{{partner_appointment_id}}"
                  created_at: 1730189586
                  doctor_id: "{{doctor_id}}"
                  clinic_id: "{{clinic_id}}"
                  patient_id: "{{patient_id}}"
                  partner_doctor_id: "{{partner_doctor_id}}"
                  partner_clinic_id: "{{partner_clinic_id}}"
                  partner_patient_id: "{{partner_patient_id}}"
                  status: CM
                  mode: in_clinic
                  start_time: 1730189586
                  end_time: 1730189586
                  payment:
                    payment_id: null
                    payment_status: null
                    amount: null
                  prescription_id: "{{prescription_id}}"
                  service:
                    created_at: 1730189586
                    mode:
                      - INCLINIC
                    price: null
                    post_pay: false
                    service_name: consultation
                    appointment_type: REGULAR
                    allow_patient_booking: true
                  prescription_url: "https://prescription-store-s3.eka.care/P-DW-1234.pdf"
                  custom_attributes:
                    label: ["vitals_submitted"]
                  partner_meta:
                    key1: "value1"
        '400':
          description: Bad Request
          headers:
            Date:
              schema:
                type: string
              example: Sun, 12 Apr 2024 11:10:57 GMT
            Content-Length:
              schema:
                type: string
              example: '152'
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx/1.10.3 (Ubuntu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: INVALID_REQUEST_PARAMETERS
                  message: The request contains invalid parameters
        '403':
          description: Forbidden
          headers:
            Date:
              schema:
                type: string
              example: Sun, 12 Apr 2024 11:11:57 GMT
            Content-Length:
              schema:
                type: string
              example: '145'
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx/1.10.3 (Ubuntu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: ACCESS_DENIED
                  message: "Access denied. You do not have permission to view this appointment." 
        '404':
          description: Not Found
          headers:
            Date:
              schema:
                type: string
              example: Sun, 12 Apr 2024 11:12:57 GMT
            Content-Length:
              schema:
                type: string
              example: '126'
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx/1.10.3 (Ubuntu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: NOT_FOUND
                  message: "Appointment not found. Please check the provided appointment ID."
        '500':
          description: Internal Server Error
          headers:
            Date:
              schema:
                type: string
              example: Sun, 12 Apr 2024 11:13:57 GMT
            Content-Length:
              schema:
                type: string
              example: '158'
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx/1.10.3 (Ubuntu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: SERVER_ERROR
                  message: An unexpected error occurred while processing your request. Please try again later.
      deprecated: false
 
    patch:
      tags:
        - Appointment API
      summary: Update Appointment
      description: >-

        ### Overview


        This API endpoint is used to update an existing appointment.

      operationId: UpdateAppointment
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: appointment_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                custom_attributes:
                  type: object
                partner_meta:
                  type: object
                  description: "This field is a set of key-value pair very specific to our partner and not visible in appointment queue. These key-value pairs are just stored at our end and echoed back in appointment related apis. We dont use it for any computation. In case of update it will be completely overridden."
                start_time:
                  type: integer
                  description: 'Start time of new appointment in epoch. To be used in order to reschedule appointment.'
                end_time:
                  type: integer
                  description: 'End time of new appointment in epoch. To be used in order to reschedule appointment.'
                video_connect:
                  type: object
                  properties:
                    vendor:
                      type: string
                      example: "100ms"
                      description: "Vendor identifier"
                    url:
                      type: string
                      example: "https://xyz.com/landing"
                      description: "url for connceting online"
                    pt_joined:
                      type: integer
                      example: 145367
                      description: "Epoch time"
                patient_details:
                  type: object
                  properties:
                    partner_patient_id:
                      type: string
                      example: "145367"
                      description: "Patient id of the partner"
                    first_name:
                      type: string
                      example: "Test"
                      description: "First name of the patient"
                    middle_name:
                      type: string
                      example: ""
                      description: "Middle name of the patient (if any)"
                    last_name:
                      type: string
                      example: "Patient"
                      description: "Last name of the patient"
                    mobile:
                      type: string
                      example: "+919999999999"
                      description: "Mobile number of the patient, including country code"
                    gender:
                      type: string
                      example: "M"
                      description: "Gender of the patient (e.g., 'M' for male, 'F' for female, 'O' for others)"
                      enum:
                        - "M"
                        - "F"
                        - "O"
                    address:
                      type: object
                      properties:
                        city:
                          type: string
                          example: "Bangalore"
                        line1:
                          type: string
                          example: "ABC"
                        line2:
                          type: string
                          example: "XYZ"
                        pincode:
                          type: integer
                          example: 560049
                        state:
                          type: string
                          example: "Karnataka"
                        country:
                          type: string
                          example: "India"
                      description: "Address details of the patient"
                    partner_meta:
                      type: object
                      properties:
                        key1:
                          type: string
                          example: "value1"
                  oneOf:
                    - title: DOB
                      properties:
                        dob:
                          type: string
                          format: date
                          example: "1987-01-06"
                          description: "Date of birth of the patient (YYYY-MM-DD)"
                      required:
                        - dob
                    - title: AGE
                      properties:
                        age:
                          type: integer
                          example: 24
                          description: "Age in months"
                      required:
                        - age
                
            example:
              custom_attributes:
                label: ["vital_submitted"]
                tags: ["in_consult", "paid"]
              partner_meta: {}
              patient_details:
                first_name: "updated_name"
              video_connect:
                  vendor: 100ms
                  url: "https://xyz.live/meeting/nfo-necy-cwg"
                  pt_joined: 1747311346
              
      responses:
        '204':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "APPOINTMENT_NOT_FOUND"
                  message: "The specified appointment ID does not exist"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "INVALID_REQUEST"
                  message: "The request is invalid or missing required parameters"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false
  /dr/v2/appointment/{appointment_id}:
    patch:
      tags:
        - Appointment API
      summary: Update Appointment V2
      description: >-

        ### Overview


        This API endpoint is used to update an existing appointment.

      operationId: UpdateAppointment
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: appointment_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_details:
                  type: object
                  properties:
                    mode:
                      type: string
                      enum: [ INCLINIC, PHONE, VIDEO ]
                      example: "VIDEO"
                    custom_attributes:
                      type: object
                      description: '`Custom attributes` and `value` for each custom attribute are a fixed set of enum defined by our partner at the time of onboarding. `Labels` and `Tags` are `special type` of custom attributes which exist by default for every partner and are visible in appointment queue. key-value pair within labels and tags can be defined by each repective partner. Position of other custom attributes in appointment queue need to configured by partner.'
                    video_connect:
                      type: object
                      description: 'Configuration of video connect. To be used only when mode is `VIDEO`'
                      properties:
                        vendor:
                          type: string
                          enum: [ other ]
                        url:
                          type: string
                          example: "https://meet.google.com/landing"
                partner_meta:
                  type: object
                  description: "This field is a set of key-value pair very specific to our partner and not visible in appointment queue. These key-value pairs are just stored at our end and echoed back in appointment related apis. We dont use it for any computation. In case of update it will be completely overridden."
                  properties:
                    key1:
                      type: string
                      example: "value1"
                  
                patient_details:
                  type: object
                  properties:
                    partner_patient_id:
                      type: string
                      example: "145367"
                      description: "Patient id of the partner"
                    first_name:
                      type: string
                      example: "Test"
                      description: "First name of the patient"
                    middle_name:
                      type: string
                      example: ""
                      description: "Middle name of the patient (if any)"
                    last_name:
                      type: string
                      example: "Patient"
                      description: "Last name of the patient"
                    mobile:
                      type: string
                      example: "+919999999999"
                      description: "Mobile number of the patient, including country code"
                    gender:
                      type: string
                      example: "M"
                      description: "Gender of the patient (e.g., 'M' for male, 'F' for female, 'O' for others)"
                      enum:
                        - "M"
                        - "F"
                        - "O"
                  oneOf:
                    - title: DOB
                      properties:
                        dob:
                          type: string
                          format: date
                          example: "1987-01-06"
                          description: "Date of birth of the patient (YYYY-MM-DD)"
                      required:
                        - dob
                    - title: AGE
                      properties:
                        age:
                          type: integer
                          example: 24
                          description: "Age in months"
                      required:
                        - age
      responses:
        '204':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "APPOINTMENT_NOT_FOUND"
                  message: "The specified appointment ID does not exist"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "INVALID_REQUEST"
                  message: "The request is invalid or missing required parameters"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false
  /dr/v1/appointment/{appointment_id}/custom_attribute:
    patch:
      tags:
        - Appointment API
      summary: Update Appointment Custom Attribute
      description: >-

        ### Overview


        This API endpoint is used to update custom attribute of an existing appointment.

      operationId: UpdateAppointmentCustomAttribute
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: appointment_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            example:
              payment_status: ["paid"]
      responses:
        '204':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "APPOINTMENT_NOT_FOUND"
                  message: "The specified appointment ID does not exist"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "INVALID_REQUEST"
                  message: "The request is invalid or missing required parameters"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false      
  /dr/v1/appointment/{appointment_id}/complete:
    post:
      tags:
        - Appointment API
      summary: Complete Appointment
      description: >-

        ### Overview


        This API endpoint is used to complete an existing appointment.


      operationId: CompleteAppointment
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: appointment_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      responses:
        '204':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "APPOINTMENT_NOT_FOUND"
                  message: "The specified appointment ID does not exist"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "COMPLETE_NOT_ALLOWED"
                  message: "You do not have permission to cancel this appointment"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "INVALID_REQUEST"
                  message: "The request is invalid or missing required parameters"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false
  /dr/v1/appointment/{appointment_id}/parked:
    post:
      tags:
        - Appointment API
      summary: Parked Appointment
      description: >-

        ### Overview


        This API endpoint is used to update an existing appointment to parked state.


      operationId: ParkAppointment
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: appointment_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      responses:
        '204':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "APPOINTMENT_NOT_FOUND"
                  message: "The specified appointment ID does not exist"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "COMPLETE_NOT_ALLOWED"
                  message: "You do not have permission to cancel this appointment"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "INVALID_REQUEST"
                  message: "The request is invalid or missing required parameters"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false
  /dr/v1/appointment/{appointment_id}/cancel:
    put:
      tags:
        - Appointment API
      summary: Cancel Appointment
      description: >-

        ### Overview


        This API endpoint is used to cancel an existing appointment.


      operationId: CancelAppointment
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: appointment_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      responses:
        '204':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "APPOINTMENT_NOT_FOUND"
                  message: "The specified appointment ID does not exist"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "CANCEL_NOT_ALLOWED"
                  message: "You do not have permission to cancel this appointment"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "INVALID_REQUEST"
                  message: "The request is invalid or missing required parameters"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false
  /dr/v1/appointment/{appointment_id}/reschedule:
    put:
      tags:
        - Appointment API
      summary: Reschedule Appointment
      description: >-

        ### Overview


        This API endpoint is used to reschedule an existing appointment.

      operationId: RescheduleAppointment
      parameters:
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
        - name: appointment_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: partner_id
          in: query
          description: 'If set to 1 then appointment_id in path parameter should be partner_appointment_id else eka apppointment_id'
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '1'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                start_time:
                  type: integer
                end_time:
                  type: integer
              oneOf:
                - title: PartnerIds
                  properties:
                    partner_clinic_id:
                      type: string
                      description: 'Identifier for the partnerâ€™s clinic.'
                    partner_doctor_id:
                      type: string
                      description: 'Identifier for the partnerâ€™s doctor.'
                
                - title: EkaIds
                  properties:
                    clinic_id:
                      type: string
                      description: 'Identifier for the clinic in Eka.'
                    doc_id:
                      type: string
                      description: 'Identifier for the doctor in Eka.'
            example:
              start_time: 1730189586
              end_time: 1730189586
              partner_clinic_id: "54672347823"
              partner_doctor_id: "58hjbfiugfqw8778"
      responses:
        '204':
          description: OK
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Thu, 16 Apr 2020 08:47:12 GMT
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.10.3 (Ubuntu)
            Vary:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Accept-Encoding
            Strict-Transport-Security:
              content:
                text/plain:
                  schema:
                    type: string
                  example: max-age=15768000
            Content-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: gzip
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "APPOINTMENT_NOT_FOUND"
                  message: "The specified appointment ID does not exist"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "RESCHEDULE_NOT_ALLOWED"
                  message: "You do not have permission to reschedule this appointment"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "INVALID_REQUEST"
                  message: "The request is invalid or missing required parameters"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
              example:
                error:
                  code: "SERVER_ERROR"
                  message: "An unexpected error occurred on the server"
      deprecated: false
  /dr/v1/appointment/patient/{patient_id}:
    get:
      tags:
        - Appointment API
      summary: Get all appointments for profile
      operationId: Getallappointmentsforprofile
      parameters:
        - name: x-api-key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: '{{x-api-key}}'
        - name: patient_id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: auth
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'auth'
      responses:
        default:
          description: ''
          headers: { }
          content:
            application/json:
              schema:
                type: string
                example: |-
                  {
                      "success": true,
                      "data": [
                          {
                          "appointment_id": {{appointment_id}},
                          "created_at": "2023-07-30T18:07:24.000Z",
                          "doctor_id": {{doctor_id}},
                          "patient_id": {{patient_id}},
                          "clinic_id": {{clinic_id}},
                          "channel": "Offline",
                          "status": "CM",
                          "start_time": "2023-07-24T15:41:41.000Z",
                          "end_time": "2023-07-24T15:46:41.000Z",
                          "visit_checkin": "2023-07-30T12:37:24.000Z",
                          "visit_start": "2023-07-24T15:41:41.000Z",
                          "visit_end": "2023-07-24T15:46:41.000Z",
                          "stage": "COMPLETED",
                          "visit-type": "WALKIN",
                          "payment": {
                              "payment_id": null,
                              "payment_status": null,
                              "amount": null
                          },
                          "prescription_id": {{rx_id}},
                          "service": [{
                              "created_at": "2022-01-01T00:00:00.000Z",
                              "mode": [
                                  "in-clinic"
                              ],
                              "price": null,
                              "post_pay": false,
                              "service_name": "consultation",
                              "book_ahead_days": 21,
                              "appointment_type": "REGULAR",
                              "allow_patient_booking": true
                          }]
                      },
                      {
                          "appointment_id": {{appointment_id}},
                          "created_at": "2023-07-30T18:07:24.000Z",
                          "doctor_id": {{doctor_id}},
                          "patient_id": {{patient_id}},
                          "clinic_id": {{clinic_id}},
                          "channel": "Offline",
                          "status": "CM",
                          "start_time": "2023-07-24T15:41:41.000Z",
                          "end_time": "2023-07-24T15:46:41.000Z",
                          "visit_checkin": "2023-07-30T12:37:24.000Z",
                          "visit_start": "2023-07-24T15:41:41.000Z",
                          "visit_end": "2023-07-24T15:46:41.000Z",
                          "stage": "COMPLETED",
                          "visit-type": "WALKIN",
                          "payment": {
                              "payment_id": null,
                              "payment_status": null,
                              "amount": null
                          },
                          "prescription_id": {{rx_id}},
                          "service": [{
                              "created_at": "2022-01-01T00:00:00.000Z",
                              "mode": [
                                  "in-clinic"
                              ],
                              "price": null,
                              "post_pay": false,
                              "service_name": "consultation",
                              "book_ahead_days": 21,
                              "appointment_type": "REGULAR",
                              "allow_patient_booking": true
                          }]
                      }
                      ]
                  }
              example: |-
                {
                    "success": true,
                    "data": [
                        {
                        "appointment_id": {{appointment_id}},
                        "created_at": "2023-07-30T18:07:24.000Z",
                        "doctor_id": {{doctor_id}},
                        "patient_id": {{patient_id}},
                        "clinic_id": {{clinic_id}},
                        "channel": "Offline",
                        "status": "CM",
                        "start_time": "2023-07-24T15:41:41.000Z",
                        "end_time": "2023-07-24T15:46:41.000Z",
                        "visit_checkin": "2023-07-30T12:37:24.000Z",
                        "visit_start": "2023-07-24T15:41:41.000Z",
                        "visit_end": "2023-07-24T15:46:41.000Z",
                        "stage": "COMPLETED",
                        "visit-type": "WALKIN",
                        "payment": {
                            "payment_id": null,
                            "payment_status": null,
                            "amount": null
                        },
                        "prescription_id": {{rx_id}},
                        "service": [{
                            "created_at": "2022-01-01T00:00:00.000Z",
                            "mode": [
                                "in-clinic"
                            ],
                            "price": null,
                            "post_pay": false,
                            "service_name": "consultation",
                            "book_ahead_days": 21,
                            "appointment_type": "REGULAR",
                            "allow_patient_booking": true
                        }]
                    },
                    {
                        "appointment_id": {{appointment_id}},
                        "created_at": "2023-07-30T18:07:24.000Z",
                        "doctor_id": {{doctor_id}},
                        "patient_id": {{patient_id}},
                        "clinic_id": {{clinic_id}},
                        "channel": "Offline",
                        "status": "CM",
                        "start_time": "2023-07-24T15:41:41.000Z",
                        "end_time": "2023-07-24T15:46:41.000Z",
                        "visit_checkin": "2023-07-30T12:37:24.000Z",
                        "visit_start": "2023-07-24T15:41:41.000Z",
                        "visit_end": "2023-07-24T15:46:41.000Z",
                        "stage": "COMPLETED",
                        "visit-type": "WALKIN",
                        "payment": {
                            "payment_id": null,
                            "payment_status": null,
                            "amount": null
                        },
                        "prescription_id": {{rx_id}},
                        "service": [{
                            "created_at": "2022-01-01T00:00:00.000Z",
                            "mode": [
                                "in-clinic"
                            ],
                            "price": null,
                            "post_pay": false,
                            "service_name": "consultation",
                            "appointment_type": "REGULAR"
                        }]
                    }
                    ]
                }
      deprecated: false
  /dr/v1/prescription/{prescription_id}:
    get:
      tags:
        - Prescription API
      summary: Get Prescription details
      description: >-
        This API retrieves comprehensive details of a prescription created by a doctor. It provides a rich set of data encompassing patient history, diagnosis, medications, lab tests, and various other clinical elements. The response includes:

      operationId: GetPrescriptionDetails
      parameters:
        - name: auth
          in: header
          description: 'Authentication token'
          required: true
          style: simple
          schema:
            type: string
          example: '{{auth_token}}'
        - name: prescription_id
          in: path
          description: 'Prescription ID'
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  prescription_id:
                    type: string
                    example: "{{prescription_id}}"
                  doctor_id:
                    type: string
                    example: "171266028552522"
                  partner_doctor_id:
                    type: string
                    example: "1712660285igfewifwe"
                  doctor_name:
                    type: string
                    example: "Sanjana"
                  patient_name:
                    type: string
                    example: "Sanjana"
                  patient_id:
                    type: string
                    example: "161435344380774"
                  partner_patient_id:
                    type: string
                    example: "ghjkf9e"
                  appointment_id:
                    type: string
                    example: "V-DW-1730717340935-171266028552522-8JR9"
                  partner_appointment_id:
                    type: string
                    example: "guyfwe8f34ni34o"
                  clinic_id:
                    type: string
                    example: "6615195c289dd3001d3c0b31"
                  partner_clinic_id:
                    type: string
                    example: "07528934jferiugh"
                  prescription_details:
                    type: array
                    items:
                      anyOf:
                        - title: Appointment Details
                          properties:
                            resource_type:
                              type: string
                              enum: ["appointment"]
                              title: "Appointment Details"
                            follow_up:
                              type: string
                              example: "2024-11-10T18:30:00+00:00"
                            note:
                              type: array
                              items:
                                type: string
                              example: []
                        - title: Condition History
                          properties:
                            resource_type:
                              type: string
                              enum: ["condition_history"]
                              title: "Condition History"
                            condition:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "38341003"
                                display:
                                  type: string
                                  example: "High blood pressure"
                            severity:
                              type: string
                              example: "active"
                            onset:
                              type: string
                              example: null
                            clinical_status:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "active"
                                display:
                                  type: string
                                  example: "active"
                            verification_status:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "confirmed"
                                display:
                                  type: string
                                  example: "confirmed"
                        - title: Condition
                          properties:
                            resource_type:
                              type: string
                              enum: ["condition"]
                              title: "Condition"
                            condition:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "194828000"
                                display:
                                  type: string
                                  example: "Angina"
                            severity:
                              type: string
                              example: null
                            onset:
                              type: string
                              example: null
                            clinical_status:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "active"
                                display:
                                  type: string
                                  example: "active"
                            verification_status:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "confirmed"
                                display:
                                  type: string
                                  example: "confirmed"
                        - title: Advices
                          properties:
                            resource_type:
                              type: string
                              enum: ["advices"]
                              title: "Advices"
                            advices:
                              type: string
                              example: "Need to consider further treatment of AS > TAVR or Surgical AVR"
                            status:
                              type: string
                              example: "active"
                            intent:
                              type: string
                              example: "plan"
                        - title: Admission Advised
                          properties:
                            resource_type:
                              type: string
                              enum: ["admission_advised"]
                              title: "Admission Advised"
                            reason:
                              type: string
                              example: "Surgery"
                            note:
                              type: string
                              example: "Bone facture"
                        - title: Custom Section
                          properties:
                            resource_type:
                              type: string
                              enum: ["custom_section"]
                            title:
                              type: string
                              example: ""
                            note:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: ""
                                  value:
                                    type: string
                                    example: ""
                              example:
                                - name: ""
                                  value: ""
                        - title: Service Request
                          properties:
                            resource_type:
                              type: string
                              enum: ["servicerequest"]
                              title: "Service Request"
                            lab_id:
                              type: string
                              example: "medanta2958577545"
                            status:
                              type: string
                              example: "active"
                            lab_name:
                              type: string
                              example: "ECG"
                            note:
                              type: array
                              items:
                                type: string
                              example: []
                        - title: Observation
                          properties:
                            resource_type:
                              type: string
                              enum: ["observation"]
                              title: "Observation"
                            status:
                              type: string
                              example: "final"
                            observation:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "29857009"
                                display:
                                  type: string
                                  example: "chest pain"
                            severity:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: ""
                                display:
                                  type: string
                                  example: ""
                            category:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "symptom"
                                display:
                                  type: string
                                  example: "symptom"
                            note:
                              type: array
                              items:
                                type: string
                              example: []
                        - title: Vitals
                          properties:
                            resource_type:
                              type: string
                              enum: ["vitals"]
                              title: "Vitals"
                            status:
                              type: string
                              example: "final"
                            observation:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "lb-1201285132"
                                display:
                                  type: string
                                  example: "Pulse rate"
                            since:
                              type: object
                              properties:
                                type:
                                  type: string
                                  example: "datetime"
                                start:
                                  type: string
                                  example: "2024-11-04T10:49:00.936000+00:00"
                            severity:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: ""
                                display:
                                  type: string
                                  example: ""
                            category:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "vital-signs"
                                display:
                                  type: string
                                  example: "Vital Signs"
                            valueQuantity:
                              type: object
                              properties:
                                system:
                                  type: string
                                  example: "http://eka.care/mdb/technical"
                                unit:
                                  type: string
                                  example: "/min"
                                value:
                                  type: number
                                  example: 45.0
                            component:
                              type: array
                              items:
                                type: object
                              example: []
                        - title: Lifestyle
                          properties:
                            resource_type:
                              type: string
                              enum: ["lifestyle"]
                              title: "Lifestyle"
                            status:
                              type: string
                              example: "Active"
                            observation:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "3"
                                display:
                                  type: string
                                  example: "Alcohol"
                            severity:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "status"
                                display:
                                  type: string
                                  example: "Active"
                            category:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: "social-history"
                                display:
                                  type: string
                                  example: "Social History"
                            note:
                              type: array
                              items:
                                type: string
                              example: []
                        - title: Medication Request
                          properties:
                            resource_type:
                              type: string
                              enum: ["medicationrequest"]
                              title: "Medication Request"
                            drug_id:
                              type: string
                              example: "medanta3806727491"
                            drug_status:
                              type: string
                              example: "active"
                            med_name:
                              type: string
                              example: "Olmezest 40 Tablet"
                            dose:
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: "du-5550260779"
                                value:
                                  type: number
                                  example: 1.0
                                unit:
                                  type: string
                                  example: "tablet"
                                custom:
                                  type: string
                                  example: "1.0 tablet"
                            additional_instructions:
                              type: array
                              items:
                                type: object
                                properties:
                                  custom:
                                    type: string
                                    example: null
                                  type:
                                    type: string
                                    example: "timing"
                            duration:
                              type: object
                              properties:
                                unit:
                                  type: string
                                  example: null
                                value:
                                  type: string
                                  example: null
                                custom:
                                  type: string
                                  example: null
                            dosage_instruction:
                              type: object
                              properties:
                                custom:
                                  type: string
                                  example: "1-0-0"
                                when:
                                  type: string
                                  example: null
                                period:
                                  type: string
                                  example: null
                                period_unit:
                                  type: string
                                  example: null
                                frequency:
                                  type: string
                                  example: null
                            note:
                              type: string
                              example: null
                    example:
                      - resource_type: "appointment"
                        follow_up: "2024-11-10T18:30:00+00:00"
                        note: []
                      - resource_type: "condition_history"
                        condition:
                          code: "38341003"
                          display: "High blood pressure"
                        note: []
                        severity: null
                        onset: null
                        clinical_status:
                          code: "active"
                          display: "active"
                        verification_status:
                          code: "confirmed"
                          display: "confirmed"
                      - resource_type: "condition"
                        condition:
                          code: "194828000"
                          display: "Angina"
                        note: []
                        severity: null
                        onset: null
                        clinical_status:
                          code: "active"
                          display: "active"
                        verification_status:
                          code: "confirmed"
                          display: "confirmed"
                      - resource_type: "advices"
                        advices: "Need to consider further treatment of AS > TAVR or Surgical AVR"
                        status: "active"
                        intent: "plan"
                      - resource_type: "inpatient_encounter"
                        status: "planned"
                        notes: "Bone facture"
                      - resource_type: "custom_section"
                        title: "{custom_title}"
                        note:
                          - name: "{custom_name}"
                            value: "{custom_value}"
                      - resource_type: "servicerequest"
                        lab_id: "medanta2958577545"
                        status: "active"
                        lab_name: "ECG"
                        note: []
                      - resource_type: "observation"
                        status: "final"
                        observation:
                          code: "29857009"
                          display: "chest pain"
                        since: {}
                        severity:
                          code: ""
                          display: ""
                        category:
                          code: "symptom"
                          display: "symptom"
                        note: []
                      - resource_type: "vitals"
                        status: "final"
                        observation:
                          code: "lb-1201285132"
                          display: "Pulse rate"
                        since:
                          type: "datetime"
                          start: "2024-11-04T10:49:00.936000+00:00"
                        severity:
                          code: ""
                          display: ""
                        category:
                          code: "vital-signs"
                          display: "Vital Signs"
                        note: []
                        valueQuantity:
                          system: "http://eka.care/mdb/technical"
                          unit: "/min"
                          value: 45.0
                        component: []
                      - resource_type: "lifestyle"
                        status: "Active"
                        observation:
                          code: "3"
                          display: "Alcohol"
                        since: {}
                        severity:
                          code: "status"
                          display: "Active"
                        category:
                          code: "social-history"
                          display: "Social History"
                        note: []
                      - resource_type: "medicationrequest"
                        drug_id: "medanta3806727491"
                        drug_status: "active"
                        med_name: "Olmezest 40 Tablet"
                        dose:
                          id: "du-5550260779"
                          value: 1.0
                          unit: "tablet"
                          custom: "1.0 tablet"
                        additional_instructions:
                          - custom: null
                            type: "timing"
                        duration:
                          unit: null
                          value: null
                          custom: null
                        dosage_instruction:
                          custom: "1-0-0"
                          when: null
                          period: null
                          period_unit: null
                          frequency: null
                        note: null

        '403':
          description: Forbidden
        '404':
          description: Rx id/Business data missing
        '500':
          description: Wrong API URL/Wrong JSON request/ Something went wrong
  
components:
  schemas:
    AuthLoginRequest:
      title: AuthLoginRequest
      required:
        - client_id
        - client_secret
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
      example:
        client_id: testing
        client_secret: 4440ffe2-07e4-3364-a162-887f7652ae5d
    AuthLogin:
      title: AuthLogin
      required:
        - access_token
      type: object
      properties:
        access_token:
          type: string
      example:
        access_token: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI010101.eyJleHAiOjE3MjMxMTE3MDYsImlhdCI6MTcyMzEwOTkwNiwiYy1pZCI6InRlc3RpbmcifQ.RqiPmu983VyW8jm1RFW-UrW3m14ZezKqXfBzkKl80
    200Success:
      title: 200Success
      required:
        - access_token
      type: object
      properties:
        access_token:
          type: string
      example:
        access_token: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjMxMTE3MDYsImlhdCI6MTcyMzEwOTkwNiwiYy1pZCI6InRlc3RpbmcifQ.RqiPmu983VyW8jm1RFW-UrW3m14ZezKqXfBTkElsoPG
    200OK:
      title: 200OK
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data'
      example:
        data:
          patient_id: '123456789'
          profile:
            id: '123456789'
            created_at: '2024-06-12T21:55:51.593Z'
            updated_at: '2024-06-17T09:52:55.257Z'
    Data:
      title: Data
      required:
        - patient_id
        - profile
      type: object
      properties:
        patient_id:
          type: string
        profile:
          $ref: '#/components/schemas/Profile'
      example:
        patient_id: '123456789'
        profile:
          id: '123456789'
          created_at: '2024-06-12T21:55:51.593Z'
          updated_at: '2024-06-17T09:52:55.257Z'
    Profile:
      title: Profile
      required:
        - id
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      example:
        id: '123456789'
        created_at: '2024-06-12T21:55:51.593Z'
        updated_at: '2024-06-17T09:52:55.257Z'
    Error:
      title: Error
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      example:
        code: NOT_ALLOWED
        message: You are not allowed to add resource
    403ForbiddenBusinessPatientDetailsMissing1:
      title: 403ForbiddenBusinessPatientDetailsMissing1
      required:
        - data
        - error
      type: object
      properties:
        data:
          type: object
        error:
          $ref: '#/components/schemas/Error'
      example:
        data: { }
        error:
          code: NOT_ALLOWED
          message: You are not allowed to add resource
    500WrongAPIURLTokenmismatchedWrongJSONrequest.1:
      title: 500WrongAPIURLTokenmismatchedWrongJSONrequest.1
      required:
        - data
        - error
      type: object
      properties:
        data:
          type: object
        error:
          $ref: '#/components/schemas/Error'
      example:
        data: { }
        error:
          code: INVALID_DATA
          message: Data entered in incorrect
    200OK1:
      title: 200OK1
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data1'
      example:
        patient_id: '123456789'
        partner_patient_id: '123456789'
        first_name: Test
        middle_name: ''
        last_name: Patient
        dob: '1984-11-11'
        email: ekademo@gmail.com
        mobile: '+919999999999'
        created_at: '2021-03-19T13:15:26.318Z'
        address:
          city: Bangalore
          line1: ABC
          line2: XYZ
          pincode: 560049
          state: Karnataka
          country: India
          district: Bangalore Urban
        partner_meta:
          key1: value1
    Data1:
      title: Data1
      required:
        - patient_id
        - name
        - clinic_id
        - patient_profile
      type: object
      properties:
        patient_id:
          type: string
        name:
          type: string
        clinic_id:
          type: string
        patient_profile:
          $ref: '#/components/schemas/PatientProfile'
      example:
        patient_id: '123456789'
        name: Test Patient
        clinic_id: '12345678'
        patient_profile:
          patient_id: '123456789'
          first_name: Test
          middle_name: ''
          last_name: Patient
          dob: '1984-11-11'
          email: ekademo@gmail.com
          gen: M
          mobile: '+919999999999'
          created_at: '2021-03-19T13:15:26.318Z'
          address:
            city: Bangalore
            line1: ABC
            line2: XYZ
            pincode: 560049
            state: Karnataka
            country: India
            district: Bangalore Urban
          metadata:
            blood_group: AB+
            aadhar_number: '12345'
            notes: Has a history of HTN
            father_name: Test Father
    PatientProfile:
      title: PatientProfile
      required:
        - patient_id
        - first_name
        - middle_name
        - last_name
        - dob
        - email
        - gen
        - mobile
        - created_at
        - address
        - metadata
      type: object
      properties:
        patient_id:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
        email:
          type: string
        gen:
          type: string
        mobile:
          type: string
        created_at:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        metadata:
          $ref: '#/components/schemas/Metadata'
      example:
        patient_id: '123456789'
        first_name: Test
        middle_name: ''
        last_name: Patient
        dob: '1984-11-11'
        email: ekademo@gmail.com
        gen: M
        mobile: '+919999999999'
        created_at: '2021-03-19T13:15:26.318Z'
        address:
          city: Bangalore
          line1: ABC
          line2: XYZ
          pincode: 560049
          state: Karnataka
          country: India
          district: Bangalore Urban
        metadata:
          blood_group: AB+
          aadhar_number: '12345'
          notes: Has a history of HTN
          father_name: Test Father
    Address:
      title: Address
      required:
        - city
        - line1
        - line2
        - pincode
        - state
        - country
        - district
      type: object
      properties:
        city:
          type: string
        line1:
          type: string
        line2:
          type: string
        pincode:
          type: integer
          format: int32
        state:
          type: string
        country:
          type: string
        district:
          type: string
      example:
        city: Bangalore
        line1: ABC
        line2: XYZ
        pincode: 560049
        state: Karnataka
        country: India
        district: Bangalore Urban
    Metadata:
      title: Metadata
      required:
        - blood_group
        - aadhar_number
        - notes
        - father_name
      type: object
      properties:
        blood_group:
          type: string
        aadhar_number:
          type: string
        notes:
          type: string
        father_name:
          type: string
      example:
        blood_group: AB+
        aadhar_number: '12345'
        notes: Has a history of HTN
        father_name: Test Father
    200OK2:
      title: 200OK2
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data2'
      example:
        data:
          patients:
            - patient_id: '123456789'
              name: Test Patient
              clinic_id: '12345678'
              patient_profile:
                patient_id: '123456789'
                first_name: Test
                middle_name: ''
                last_name: Patient
                dob: '1984-11-11'
                email: ekademo@gmail.com
                gen: M
                mobile: '+919999999999'
                created_at: '2021-03-19T13:15:26.318Z'
            - patient_id: '234567890'
              name: Test PT 2
              is_recent: false
              clinic_id: null
              patient_profile:
                first_name: Test
                middle_name: PT
                last_name: '2'
                patient_id: '234567890'
                email: demo_test@eka.care
                gen: M
                mobile: '+91999999999'
                dob: '1991-11-11'
                created_at: 2021-03-19T13:15:26318Z
    Data2:
      title: Data2
      required:
        - patients
      type: object
      properties:
        patients:
          type: array
          items:
            $ref: '#/components/schemas/Patient'
          description: ''
      example:
        patients:
          - patient_id: '123456789'
            name: Test Patient
            clinic_id: '12345678'
            patient_profile:
              patient_id: '123456789'
              first_name: Test
              middle_name: ''
              last_name: Patient
              dob: '1984-11-11'
              email: ekademo@gmail.com
              gen: M
              mobile: '+919999999999'
              created_at: '2021-03-19T13:15:26.318Z'
          - patient_id: '234567890'
            name: Test PT 2
            is_recent: false
            clinic_id: null
            patient_profile:
              first_name: Test
              middle_name: PT
              last_name: '2'
              patient_id: '234567890'
              email: demo_test@eka.care
              gen: M
              mobile: '+91999999999'
              dob: '1991-11-11'
              created_at: 2021-03-19T13:15:26318Z
    Patient:
      title: Patient
      required:
        - patient_id
        - name
        - clinic_id
        - patient_profile
      type: object
      properties:
        patient_id:
          type: string
        name:
          type: string
        clinic_id:
          type: string
          nullable: true
        patient_profile:
          $ref: '#/components/schemas/PatientProfile1'
        is_recent:
          type: boolean
      example:
        patient_id: '123456789'
        name: Test Patient
        clinic_id: '12345678'
        patient_profile:
          patient_id: '123456789'
          first_name: Test
          middle_name: ''
          last_name: Patient
          dob: '1984-11-11'
          email: ekademo@gmail.com
          gen: M
          mobile: '+919999999999'
          created_at: '2021-03-19T13:15:26.318Z'
    PatientProfile1:
      title: PatientProfile1
      required:
        - patient_id
        - first_name
        - middle_name
        - last_name
        - dob
        - email
        - gen
        - mobile
        - created_at
      type: object
      properties:
        patient_id:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
        email:
          type: string
        gen:
          type: string
        mobile:
          type: string
        created_at:
          type: string
      example:
        patient_id: '123456789'
        first_name: Test
        middle_name: ''
        last_name: Patient
        dob: '1984-11-11'
        email: ekademo@gmail.com
        gen: M
        mobile: '+919999999999'
        created_at: '2021-03-19T13:15:26.318Z'
    200OK3:
      title: 200OK3
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data3'
      example:
        data:
          patients:
            - oid: '123456789'
              name: Test Patient
              clinic_id: '12345678'
              patient_profile:
                oid: '123456789'
                first_name: Test
                middle_name: ''
                last_name: Patient
                dob: '1984-11-11'
                email: ekademo@gmail.com
                gen: M
                mobile: '+919999999999'
                created_at: '2021-03-19T13:15:26.318Z'
            - oid: '234567890'
              name: Test PT 2
              is_recent: false
              clinic_id: null
              patient_profile:
                first_name: Test
                middle_name: PT
                last_name: '2'
                oid: '234567890'
                email: demo_test@eka.care
                gen: M
                mobile: '+91999999999'
                dob: '1991-11-11'
                created_at: 2021-03-19T13:15:26318Z
    Data3:
      title: Data3
      required:
        - patients
      type: object
      properties:
        patients:
          type: array
          items:
            $ref: '#/components/schemas/Patient1'
          description: ''
      example:
        patients:
          - oid: '123456789'
            name: Test Patient
            clinic_id: '12345678'
            patient_profile:
              oid: '123456789'
              first_name: Test
              middle_name: ''
              last_name: Patient
              dob: '1984-11-11'
              email: ekademo@gmail.com
              gen: M
              mobile: '+919999999999'
              created_at: '2021-03-19T13:15:26.318Z'
          - oid: '234567890'
            name: Test PT 2
            is_recent: false
            clinic_id: null
            patient_profile:
              first_name: Test
              middle_name: PT
              last_name: '2'
              oid: '234567890'
              email: demo_test@eka.care
              gen: M
              mobile: '+91999999999'
              dob: '1991-11-11'
              created_at: 2021-03-19T13:15:26318Z
    Patient1:
      title: Patient1
      required:
        - oid
        - name
        - clinic_id
        - patient_profile
      type: object
      properties:
        oid:
          type: string
        name:
          type: string
        clinic_id:
          type: string
          nullable: true
        patient_profile:
          $ref: '#/components/schemas/PatientProfile2'
        is_recent:
          type: boolean
      example:
        oid: '123456789'
        name: Test Patient
        clinic_id: '12345678'
        patient_profile:
          oid: '123456789'
          first_name: Test
          middle_name: ''
          last_name: Patient
          dob: '1984-11-11'
          email: ekademo@gmail.com
          gen: M
          mobile: '+919999999999'
          created_at: '2021-03-19T13:15:26.318Z'
    PatientProfile2:
      title: PatientProfile2
      required:
        - oid
        - first_name
        - middle_name
        - last_name
        - dob
        - email
        - gen
        - mobile
        - created_at
      type: object
      properties:
        oid:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
        email:
          type: string
        gen:
          type: string
        mobile:
          type: string
        created_at:
          type: string
      example:
        oid: '123456789'
        first_name: Test
        middle_name: ''
        last_name: Patient
        dob: '1984-11-11'
        email: ekademo@gmail.com
        gen: M
        mobile: '+919999999999'
        created_at: '2021-03-19T13:15:26.318Z'
    UpdatePatientDetailsAPIRequest:
      title: UpdatePatientDetailsAPIRequest
      required:
        - firstName
        - middleName
        - lastName
        - mobile
        - email
        - address
        - metadata
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        mobile:
          type: string
        email:
          type: string
        partner_patient_id:
          type: string
        address:
          $ref: '#/components/schemas/Address1'
        partner_meta:
          $ref: '#/components/schemas/Metadata1'
      example:
        firstName: John
        middleName: Doe
        lastName: NewLastName
        mobile: '+91999999999'
        email: john.doe@example.com
        address:
          city: Bangalore
          line1: ABC
          line2: XYZ
          pincode: 560049
          state: Karnataka
          country: India
        metadata:
          blood_group: AB+
          aadhar_number: '12345'
    Address1:
      title: Address1
      required:
        - city
        - line1
        - line2
        - pincode
        - state
        - country
      type: object
      properties:
        city:
          type: string
        line1:
          type: string
        line2:
          type: string
        pincode:
          type: integer
          format: int32
        state:
          type: string
        country:
          type: string
      example:
        city: Bangalore
        line1: ABC
        line2: XYZ
        pincode: 560049
        state: Karnataka
        country: India
    Metadata1:
      title: Metadata1
      required:
        - blood_group
        - aadhar_number
      type: object
      properties:
        blood_group:
          type: string
        aadhar_number:
          type: string
      example:
        blood_group: AB+
        aadhar_number: '12345'
    200-Success1:
      title: 200-Success1
      required:
        - patientId
      type: object
      properties:
        patientId:
          type: string
      example:
        patientId: '1234567890'
    500patientIdlabPatientIdismissing:
      title: 500patientIdlabPatientIdismissing
      required:
        - message
        - code
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
      example:
        message: Please check data.
        code: 500
    200OK4:
      title: 200OK4
      required:
        - id
        - profile
      type: object
      properties:
        id:
          type: string
        profile:
          $ref: '#/components/schemas/Profile1'
      example:
        id: '1234567890'
        profile:
          personal:
            first_name: doctor
            middle_name: ''
            last_name: doctor
            dob: ''
            gender: M
          professional:
            active: true
            about: doctor doctor is a Cardiologist with 43 years of experience.
            language:
              - code: en
                language: English
            degree:
              - name: MD
                branch_name: ''
                college_name: ''
                start_year: ''
                end_year: ''
            major_speciality:
              name: Cardiologist
              code: CA
            speciality:
              - name: General Physician
              - name: Diabetologist
              - name: Allergy Specialist
            clinics:
              - id: '1234567899876'
                name: Vagus Hospital & Health Services
                contacts:
                  - name: Phone
                    number: '+91999999999'
                address:
                  line1: >-
                    H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler
                    showroom., Pocket 2, Gate No :-2, nearest to Homeopathy
                    clinic.
                  city: Delhi
                  country: India
                  state: Delhi
                  pin: '110085'
            default_clinic: '1234567899876'
    Profile1:
      title: Profile1
      required:
        - personal
        - professional
      type: object
      properties:
        personal:
          $ref: '#/components/schemas/Personal'
        professional:
          $ref: '#/components/schemas/Professional'
      example:
        personal:
          first_name: doctor
          middle_name: ''
          last_name: doctor
          dob: ''
          gender: M
        professional:
          active: true
          about: doctor doctor is a Cardiologist with 43 years of experience.
          language:
            - code: en
              language: English
          degree:
            - name: MD
              branch_name: ''
              college_name: ''
              start_year: ''
              end_year: ''
          major_speciality:
            name: Cardiologist
            code: CA
          speciality:
            - name: General Physician
            - name: Diabetologist
            - name: Allergy Specialist
          clinics:
            - id: '1234567899876'
              name: Vagus Hospital & Health Services
              contacts:
                - name: Phone
                  number: '+91999999999'
              address:
                line1: >-
                  H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler
                  showroom., Pocket 2, Gate No :-2, nearest to Homeopathy
                  clinic.
                city: Delhi
                country: India
                state: Delhi
                pin: '110085'
          default_clinic: '1234567899876'
    Personal:
      title: Personal
      required:
        - first_name
        - middle_name
        - last_name
        - dob
        - gender
      type: object
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
        gender:
          type: string
      example:
        first_name: doctor
        middle_name: ''
        last_name: doctor
        dob: ''
        gender: M
    Professional:
      title: Professional
      required:
        - active
        - about
        - language
        - degree
        - major_speciality
        - speciality
        - clinics
        - default_clinic
      type: object
      properties:
        active:
          type: boolean
        about:
          type: string
        language:
          type: array
          items:
            $ref: '#/components/schemas/Language'
          description: ''
        degree:
          type: array
          items:
            $ref: '#/components/schemas/Degree'
          description: ''
        major_speciality:
          $ref: '#/components/schemas/MajorSpeciality'
        speciality:
          type: array
          items:
            $ref: '#/components/schemas/Speciality'
          description: ''
        clinics:
          type: array
          items:
            $ref: '#/components/schemas/Clinic'
          description: ''
        default_clinic:
          type: string
      example:
        active: true
        about: doctor doctor is a Cardiologist with 43 years of experience.
        language:
          - code: en
            language: English
        degree:
          - name: MD
            branch_name: ''
            college_name: ''
            start_year: ''
            end_year: ''
        major_speciality:
          name: Cardiologist
          code: CA
        speciality:
          - name: General Physician
          - name: Diabetologist
          - name: Allergy Specialist
        clinics:
          - id: '1234567899876'
            name: Vagus Hospital & Health Services
            contacts:
              - name: Phone
                number: '+91999999999'
            address:
              line1: >-
                H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom.,
                Pocket 2, Gate No :-2, nearest to Homeopathy clinic.
              city: Delhi
              country: India
              state: Delhi
              pin: '110085'
        default_clinic: '1234567899876'
    Language:
      title: Language
      required:
        - code
        - language
      type: object
      properties:
        code:
          type: string
        language:
          type: string
      example:
        code: en
        language: English
    Degree:
      title: Degree
      required:
        - name
        - branch_name
        - college_name
        - start_year
        - end_year
      type: object
      properties:
        name:
          type: string
        branch_name:
          type: string
        college_name:
          type: string
        start_year:
          type: string
        end_year:
          type: string
      example:
        name: MD
        branch_name: ''
        college_name: ''
        start_year: ''
        end_year: ''
    MajorSpeciality:
      title: MajorSpeciality
      required:
        - name
        - code
      type: object
      properties:
        name:
          type: string
        code:
          type: string
      example:
        name: Cardiologist
        code: CA
    Speciality:
      title: Speciality
      required:
        - name
      type: object
      properties:
        name:
          type: string
      example:
        name: General Physician
    Clinic:
      title: Clinic
      required:
        - id
        - name
        - contacts
        - address
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: ''
        address:
          $ref: '#/components/schemas/Address2'
      example:
        id: '1234567899876'
        name: Vagus Hospital & Health Services
        contacts:
          - name: Phone
            number: '+91999999999'
        address:
          line1: >-
            H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom.,
            Pocket 2, Gate No :-2, nearest to Homeopathy clinic.
          city: Delhi
          country: India
          state: Delhi
          pin: '110085'
    Contact:
      title: Contact
      required:
        - name
        - number
      type: object
      properties:
        name:
          type: string
        number:
          type: string
      example:
        name: Phone
        number: '+91999999999'
    Address2:
      title: Address2
      required:
        - line1
        - city
        - country
        - state
        - pin
      type: object
      properties:
        line1:
          type: string
        city:
          type: string
        country:
          type: string
        state:
          type: string
        pin:
          type: string
      example:
        line1: >-
          H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom., Pocket
          2, Gate No :-2, nearest to Homeopathy clinic.
        city: Delhi
        country: India
        state: Delhi
        pin: '110085'
    Err:
      title: Err
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      example:
        code: DOCTOR_DATA_INVALID
        message: Please enter valid doctor data
    403ForbiddenBusinessPatientDetailsMissing11:
      title: 403ForbiddenBusinessPatientDetailsMissing11
      required:
        - data
        - err
      type: object
      properties:
        data:
          type: object
        err:
          $ref: '#/components/schemas/Err'
      example:
        data: { }
        err:
          code: DOCTOR_DATA_INVALID
          message: Please enter valid doctor data
    500WrongAPIURLTokenmismatchedWrongJSONrequest.11:
      title: 500WrongAPIURLTokenmismatchedWrongJSONrequest.11
      required:
        - data
        - err
      type: object
      properties:
        data:
          type: object
        err:
          $ref: '#/components/schemas/Err'
      example:
        data: { }
        err:
          code: INVALID_DATA
          message: Data entered in incorrect
    400BadRequest1:
      title: 400BadRequest1
      required:
        - data
        - error
      type: object
      properties:
        data:
          type: object
        error:
          $ref: '#/components/schemas/Error'
      example:
        data: { }
        error:
          code: INVALID_REQUEST_PARAMETERS
          message: The request contains invalid parameters
    403Forbidden1:
      title: 403Forbidden1
      required:
        - data
        - error
      type: object
      properties:
        data:
          type: object
        error:
          $ref: '#/components/schemas/Error'
      example:
        data: { }
        error:
          code: UNAUTHORIZED_ENTITY
          message: >-
            Unauthorized access. Booking appointments for business entities or
            doctors is not allowed
    Error24:
      title: Error24
      required:
        - code
        - message
        - details
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          $ref: '#/components/schemas/Details'
      example:
        code: APPOINTMENT_BOOKING_FAILED
        message: Unable to book appointment due to unavailable slots
        details:
          reason: NO_AVAILABLE_SLOTS
          doctorId: '12345'
    Details:
      title: Details
      required:
        - reason
        - doctorId
      type: object
      properties:
        reason:
          type: string
        doctorId:
          type: string
      example:
        reason: NO_AVAILABLE_SLOTS
        doctorId: '12345'
    422-UnprocessableEntity1:
      title: 422-UnprocessableEntity1
      required:
        - status
        - data
        - error
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          type: object
        error:
          $ref: '#/components/schemas/Error24'
      example:
        status: 422
        data: { }
        error:
          code: APPOINTMENT_BOOKING_FAILED
          message: Unable to book appointment due to unavailable slots
          details:
            reason: NO_AVAILABLE_SLOTS
            doctorId: '12345'
    400BadRequest3:
      title: 400BadRequest3
      required:
        - status
        - data
        - error
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          type: object
        error:
          $ref: '#/components/schemas/Error'
      example:
        status: 400
        data: { }
        error:
          code: INVALID_REQUEST_PARAMETERS
          message: The request contains invalid parameters
    403Forbidden3:
      title: 403Forbidden3
      required:
        - status
        - data
        - error
      type: object
      properties:
        status:
          type: integer
          format: int32
        data:
          type: object
        error:
          $ref: '#/components/schemas/Error'
      example:
        status: 403
        data: { }
        error:
          code: UNAUTHORIZED_ENTITY
          message: >-
            Unauthorized access. Booking appointments for business entities or
            doctors is not allowed
    PatientInformationUpdatedRequest:
      title: PatientInformationUpdatedRequest
      required:
        - nationalIdentityNumber
        - patient_merge
        - Patient middleName
        - optionCode
        - Patient Name
        - country code
        - wardNo
        - ethnicity
        - Patient Contact
        - Patient City
        - Patient Designation
        - labId
        - zipcode
        - Patient email
        - Patient Alternate Contact
        - ssnNumber
        - race
        - referral_id
        - Patient Address
        - Patient Dob
        - status
        - Mobile Number
        - Patient firstName
        - Insurance Details
        - Patient gender
        - workerCode
        - Patient Type
        - Patient lastName
        - state
        - Patient Age
        - Patient Id
        - nationality
        - insuranceNo
        - Patient Area
        - old_patient_id
        - old_user_det_id
        - Guarantor Details
        - org_id
        - mrn
        - passportNumber
        - Patient MRN
        - landmark
        - areaOfResidance
        - webhookId
      type: object
      properties:
        nationalIdentityNumber:
          type: string
        patient_merge:
          type: integer
          format: int32
        Patient middleName:
          type: string
        optionCode:
          type: string
        Patient Name:
          type: string
        country code:
          type: string
        wardNo:
          type: string
        ethnicity:
          type: string
        Patient Contact:
          type: string
        Patient City:
          type: string
        Patient Designation:
          type: string
        labId:
          type: integer
          format: int32
        zipcode:
          type: string
        Patient email:
          type: string
        Patient Alternate Contact:
          type: string
        ssnNumber:
          type: string
        race:
          type: string
        referral_id:
          type: string
        Patient Address:
          type: string
        Patient Dob:
          type: string
        status:
          type: string
        Mobile Number:
          type: string
        Patient firstName:
          type: string
        Insurance Details:
          type: array
          items:
            type: string
          description: ''
        Patient gender:
          type: string
        workerCode:
          type: string
        Patient Type:
          type: string
        Patient lastName:
          type: string
        state:
          type: string
        Patient Age:
          type: string
        Patient Id:
          type: integer
          format: int32
        nationality:
          type: string
        insuranceNo:
          type: string
        Patient Area:
          type: string
        old_patient_id:
          type: integer
          format: int32
        old_user_det_id:
          type: integer
          format: int32
        Guarantor Details:
          type: object
        org_id:
          type: string
        mrn:
          type: string
        passportNumber:
          type: string
        Patient MRN:
          type: string
        landmark:
          type: string
        areaOfResidance:
          type: string
        webhookId:
          type: integer
          format: int32
      example:
        nationalIdentityNumber: ''
        patient_merge: 0
        Patient middleName: ''
        optionCode: ''
        Patient Name: Dummy Patient 12
        country code: '44'
        wardNo: Angola
        ethnicity: Hispanic or Latino
        Patient Contact: ''
        Patient City: Pune
        Patient Designation: Mr.
        labId: 1336
        zipcode: '123432'
        Patient email: Test@gmail.com
        Patient Alternate Contact: '1234554321'
        ssnNumber: ''
        race: ''
        referral_id: '1665687'
        Patient Address: ''
        Patient Dob: '2022-01-01'
        status: Patient Information Update
        Mobile Number: '1234554321'
        Patient firstName: Dummy
        Insurance Details: [ ]
        Patient gender: Male
        workerCode: ''
        Patient Type: I
        Patient lastName: Patient
        state: Maharashtra
        Patient Age: 2 years
        Patient Id: 18178
        nationality: Indian
        insuranceNo: ''
        Patient Area: Baner, Pune, Maharashtra, India
        old_patient_id: 0
        old_user_det_id: 0
        Guarantor Details: { }
        org_id: '179510'
        mrn: ''
        passportNumber: ''
        Patient MRN: 11234MRN
        landmark: ''
        areaOfResidance: Pune
        webhookId: 58
    OpthalProperty:
      type: object
      properties:
        custom:
          type: string
          example: "+1.00"
        id:
          type: string
          example: "locale-997800190"
        propertyId:
          type: string
          example: "ek-988162"
        propertyName:
          type: string
          example: "ADD"
        unit:
          type: string
          example: "+"
        value:
          type: string
          example: "1.00"

    OpthalPrescription:
      type: object
      properties:
        eye:
          type: string
          example: "RE"
        id:
          type: string
          example: "ek-2676755484"
        name:
          type: string
          example: "Right Eye"
        sph:
          $ref: '#/components/schemas/OpthalProperty'
        cyl:
          $ref: '#/components/schemas/OpthalProperty'
        add:
          $ref: '#/components/schemas/OpthalProperty'
        dva:
          $ref: '#/components/schemas/OpthalProperty'
    403ForbiddenFinal:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "NOT_ALLOWED"
            message:
              type: string
              example: "You are not allowed to add resource"
    500InternalServerFinal:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "INTERNAL_SERVER_ERROR"
            message:
              type: string
              example: "Internal server error"