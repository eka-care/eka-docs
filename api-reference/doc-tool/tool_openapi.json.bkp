{
  "openapi": "3.0.0",
  "info": {
    "title": "Ekacare API & Webhook Documentation",
    "description": "# Eka Care API Documentation\n\n## Overview\n\nEka care provides a set of APIs to facilitate seamless interaction with their healthcare platform. These APIs allow external businesses to access and manage doctor profiles, clinic details, patient directories, appointment slots, and webhooks for event notifications.\n\n## API Endpoints\n\n### 1\\. View Doctor Profile\n\n**Purpose:** Retrieve details of a doctor profile registered on Eka.\n\n**Endpoint:** `{{HOST}}/v1/business/doctor/{doctor_id}`  \n**Method:** GET  \n**Description:** Fetch detailed information about a specific doctor, including their professional background, specialties, and contact information.\n\n### 2\\. View Clinic Details\n\n**Purpose:** Retrieve details of clinics that a doctor is registered at.\n\n**Endpoint:** `{{HOST}}/v1/business/doctor/{doctor_id}/clinic/{clinic_id}`  \n**Method:** GET  \n**Description:** Fetch information about clinics associated with a specific doctor, including location, contact details, and services offered.\n\n### 3\\. Search a Patient in a business\n\n**Purpose:** Search for a patient in the business' directory and add them if not present.\n\n- Search by **mobile number**\n    \n\n**Endpoint:** `{{HOST}}/v1/business/patients/search?mobile=999999999`  \n**Method:** POST  \n**Description:** Search for a patient in the doctor's directory using their details. If the patient is not found, add them to the directory.\n\n- Search by **name**\n    \n\n**Endpoint:** `{{HOST}}/v1/business/patients/search?name=test`  \n**Method:** POST  \n**Description:** Search for a patient in the doctor's directory using their name. If the patient is not found, business needs to add them to the directory.\n\n### 4\\. Add a Patient to a Business\n\n**Purpose:** Add a patient with their details to a business. Currently a patient can _**only be added with a doctor's context**__\\*__._\n\n**Endpoint:** `{{HOST}}/v1/business/doctor/{doctor_id}/patient/add`  \n**Method:** POST  \n**Description:**\n\n- **doctor_id**: The unique identifier for the doctor under whose context the patient is being added.\n    \n\nThis endpoint accepts patient details in the request body and adds the patient to the specified doctor's directory within the business context.\n\n``` json\n{\n    \"patient_oid\": \"123456789\",// Optional\n    \"designation\": \"Mr.\", //Optional\n    \"first_name\": \"Test\",\n    \"middle_name\": \"\", //optional\n    \"last_name\": \"Patient\",\n    \"dob\": \"1987-01-06\",\n    \"mobile\": \"+919999999999\",\n    \"gender\": \"M\",\n    \"address\": { // optional\n        \"city\": \"Bangalore\",\n        \"line1\": \"ABC\",\n        \"line2\": \"XYZ\",\n        \"pincode\": 560049,\n        \"state\": \"Karnataka\",\n        \"country\": \"India\"\n    },\n    \"metadata\": { //optional\n        \"blood_group\": \"AB+\",\n        \"aadhar_number\": \"12345\",\n        \"notes\": \"Has a history of HTN\"\n    },\n    \"doctor_id\" : {{doctor_id}}\n}\n\n ```\n\n### 5\\. Get Appointment Slots\n\n**Purpose**\n\nSearch for available appointment slots for a doctor within a specified date range. This endpoint also allows for additional filters to be applied, such as the type of consultation (in-clinic, teleconsultation, etc.).\n\n**Endpoint:**  \n`{{HOST}}/v1/business/doctor/{{doctor_id}}/clinic/{{clinic_id}}/appointments/slots?start_date={{start_date}}&end_date={{end_date}}`  \n**Method:** GET\n\n#### Description\n\n- **doctor_id**: The unique identifier for the doctor whose appointment slots are being searched.\n    \n- **clinic_id**: The unique identifier for the clinic where the doctor practices.\n    \n- **start_date**: The start date for the search range.\n    \n- **end_date**: The end date for the search range.\n    \n- **mode**: the mode of consultation to filter on \\[in-clinic | teleconsultation\\]\n    \n\nThe query param can include additional filters to narrow down the search results, such as the `type` of consultation (e.g., in-clinic, teleconsultation).\n\n### 6\\. Book Appointment Slot\n\n**Purpose**\n\nBook a specified appointment slot for a patient, including details like appointment type, payment mode, etc.\n\n**Endpoint :** `{{HOST}}/v2/business/doctor/appointments/slots/book`  \n**Method:** POST\n\n#### Description\n\nThis API endpoint is used to book an appointment slot for a patient under a specific doctor's context within a specified clinic. The request body includes necessary details such as the patient's information, slot timing, appointment type, and channel.\n\n#### Request Body\n\nThe request body should include all necessary details to book an appointment slot.  \n`service_conf_id` is the configuration id choosen from the view slot details API response. It contains all details of the services & fees included in this appointment.  \nCheck APIs to see the response of view slot details API.\n\n**Example Request:**\n\n``` json\n{\n    \"patient\": {\n        \"designation\": \"Mr.\", //Optional\n        \"first_name\": \"Test\",\n        \"middle_name\": \"\", //Optional\n        \"last_name\": \"Patient\",\n        \"dob\": \"1987-01-06\",\n        \"mobile\": \"+919999999999\",\n        \"gender\": \"M\"\n    },\n    \"slot\": {\n        \"start_time\": \"2024-06-11T09:00:00+05:30\",\n        \"end_time\": \"2024-06-11T09:30:00+05:30\",\n        \"service_conf_id\": \"904eec0a73d9b02d9145898db44e628bcb18e7a11cd92852be5a2d6f65159a04\"\n    },\n    \"doctor_id\": {{doctor_id}}, \n    \"clinic_id\": {{clinic_id}}\n}\n\n ```\n\n### 7\\. Check-In Patient for Appointment \\[Optional\\]\n\n**Purpose**\n\nCheck-in a patient for a previously created appointment using the appointment ID. Checkin in a patient adds them to the doctor's currently visiting queue.\n\n**Endpoint :** `{{HOST}}/v2/business/appointments/{appointment_id}/check-in`  \n**Method:** PUT\n\n#### Description\n\nThis API endpoint is used to check-in a patient for a specified appointment using the appointment ID. This action typically marks the patient as having arrived for their scheduled appointment.\n\n#### Request Body\n\nThe request body can include additional information such as check-in time if required. However, if no check in time is provided, then current datetime is used to create check in\n\n``` json\n \"check_in_time\": \"2024-07-01T09:00:00+05:30\"\n\n ```\n\n### 8\\. Get Appointment Details\n\n**Purpose**\n\nRetrieve details of a specific appointment using the appointment ID.\n\n**Endpoint :** `{{HOST}}/v1/business/appointments/{appointment_id}`  \n**Method:** GET\n\n#### Description\n\nThis API endpoint is used to retrieve detailed information about a specific appointment. The response includes comprehensive details such as appointment status, patient information, doctor information, and other relevant data.\n\n#### Request Parameters\n\n- **appointment_id**: The unique identifier for the appointment.\n    \n\n**Example Request:**\n\n```\ncurl --location --request GET '{{HOST}}/v1/business/{{business_id}}/appointments/{{appointment_id}}' \\\n--header 'Content-Type: application/json'\n\n ```\n\n### 8\\. Edit and Reschedule Appointments\n\n**Purpose:** Edit and reschedule existing appointments.\n\n**Endpoint:** `{{HOST}}/v1/business/appointment/cancel/{{appointment_id}}`\n\n**Description:** Currently to reschedule an appointment, business needs to cancel existing appointment and create a new one.\n\n### 9\\. Webhooks for Event Notifications\n\n**Purpose:** Send events related to prescription creation and appointment details to registered entities.\n\n**Endpoint:** `{{HOST}}/v1/webhooks/events`  \n**Method:** POST  \n**Description:** Register webhooks to receive notifications about events such as prescription creation and appointment updates.\n\n### 10\\. Retrieve Prescription Details\n\n**Purpose:** Retrieve details of a specific prescription using the prescription ID.\n\n**Endpoint:** `{{HOST}}/v1/business/prescription/{{rx_id}}`\n\n**Method:** `GET`\n\n**Request Parameters:**\n\n- **rx_id**: The unique identifier for the prescription.\n    \n\n**Description**: The Prescription API allows a business to manage prescriptions, including retrieving details of a specific prescription.",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://example.com",
      "variables": {}
    }
  ],
  "paths": {
    "/connect-auth/v1/account/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Auth Login",
        "description": "### Auth Login API\n\nThe Auth Login API allows clients to authenticate by providing their client ID and secret. Upon successful authentication, it responds with an access token that is valid for 30 minutes. This token must be included in the `auth` header for all subsequent API requests to ensure secure access.",
        "operationId": "AuthLogin",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthLoginRequest"
                  },
                  {
                    "example": {
                      "client_id": "testing",
                      "client_secret": "4440ffe2-07e4-3364-a162-887f7652ae5d"
                    }
                  }
                ]
              },
              "example": {
                "client_id": "testing",
                "client_secret": "4440ffe2-07e4-3364-a162-887f7652ae5d"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 08 Aug 2024 09:38:26 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "170"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "apigw-requestid": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "cLvC4gT5BcwEJkg="
                  }
                }
              },
              "access-control-allow-credentials": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "true"
                  }
                }
              },
              "access-control-allow-headers": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "X-Forwarded-For, X-Forwarded-Proto, User-Agent, Content-Type, Postman-Token, Via, X-Forwarded-Port, X-Amzn-Trace-Id, Targetpod, Forwarded, Content-Length, Apikey, Accept, Accept-Encoding, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, Origin, Cache-Control, X-Requested-With, Auth, X-Token, X-Token-Exp, Flavour, Locale, Client-Id, Jwt-Payload, Res-Payload, Device-Id, Version, Accept, Resjwttoken, os-version, utm_source, utm_campaign, utm_medium"
                  }
                }
              },
              "access-control-allow-methods": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "POST, HEAD, PATCH, OPTIONS, GET, PUT, DELETE"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AuthLogin"
                    },
                    {
                      "example": {
                        "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI010101.eyJleHAiOjE3MjMxMTE3MDYsImlhdCI6MTcyMzEwOTkwNiwiYy1pZCI6InRlc3RpbmcifQ.RqiPmu983VyW8jm1RFW-UrW3m14ZezKqXfBzkKl80"
                      }
                    }
                  ]
                },
                "example": {
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI010101.eyJleHAiOjE3MjMxMTE3MDYsImlhdCI6MTcyMzEwOTkwNiwiYy1pZCI6InRlc3RpbmcifQ.RqiPmu983VyW8jm1RFW-UrW3m14ZezKqXfBzkKl80"
                }
              },
              "application/json; charset=utf-8": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/200Success"
                    },
                    {
                      "example": {
                        "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjMxMTE3MDYsImlhdCI6MTcyMzEwOTkwNiwiYy1pZCI6InRlc3RpbmcifQ.RqiPmu983VyW8jm1RFW-UrW3m14ZezKqXfBTkElsoPG"
                      }
                    }
                  ]
                },
                "example": {
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjMxMTE3MDYsImlhdCI6MTcyMzEwOTkwNiwiYy1pZCI6InRlc3RpbmcifQ.RqiPmu983VyW8jm1RFW-UrW3m14ZezKqXfBTkElsoPG"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/doctor/patient/add": {
      "post": {
        "tags": [
          "Patient Registration API"
        ],
        "summary": "Add Patient to Directory",
        "description": "This functionality enables the addition of new patient records to a doctor's directory. Users can provide necessary details such as personal information, contact details, and medical history to create a new patient profile.\n\n> _In case the patient is already registered with Eka care, then only passing the patient eka oid will be enough_ \n  \n\n### Request Parameters\n\nParameter\n\n| Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- |\n| patient_oid | string |  | In case patient oid already exists use this - no need for whole profile |\n| designation | varchar(10) | Mr./Miss/Mrs./Dr | Patient Designation |\n| first_name | varchar(100) | Test | First Name |\n| middle_name | varchar(100) |  | Middle Name |\n| lastName | varchar(100) | Patient | Last Name |\n| dob | Date | 1987-01-06 | Patient DOB |\n| age | varchar(20) | 36 | Patient Age |\n| mobile | varchar(15) | +919999999999 | Mobile Number with country code |\n| gender | varchar(10) | M/F/O | Patient Gender |\n| email | varchar(100) | [test@orbi.health](https://mailto:pp@orbi.health) | Patient Email Address |\n| UHID | varchar(20) | VP128 | Unique Health ID |\n| address | object |  | Address Object |\n| address.city | varchar(300) | Bangalore | City |\n| address.line1 | varchar(300) | ABC | Address Line 1 |\n| address.line2 | varchar(300) | XYZ | Address Line 2 |\n| address.pincode | int(11) | 560049 | Pincode |\n| address.state | varchar(100) | Karnataka | State |\n| address.country | varchar(100) | India | Country |\n| metadata | object |  | Metadata Object (Set of key-value pairs) |\n| metadata.blood_group | varchar(10) | AB+ | Blood Group |\n| metadata.aadhar_number | varchar(20) | 12345 | Aadhar Number |\n\n### Response Parameters\n\n| Parameter | Type | Expected Values | Description |\n| --- | --- | --- | --- |\n| response | object |  | Response Object |\n| response.patient_oid | string | 1234567890 | Generated Patient OID |\n| response.profile | object |  | Profile Object |\n| response.profile.id | string | 1234567890 | Profile ID |\n| response.profile.created_at | datetime | 2024-06-12T21:55:51.593Z | Profile Creation Timestamp |\n| response.profile.updated_at | datetime | 2024-06-17T09:52:55.257Z | Profile Update Timestamp |\n\n**Status Codes**\n\n• 200: Success\n\n• 403: Patient data missing\n\n• 500: Wrong API URL/Token mismatched/Wrong JSON request.",
        "operationId": "AddPatienttoDirectory",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "{\n    \"patient_oid\": \"123456789\",// Optional\n    \"designation\": \"Mr.\", //Optional\n    \"first_name\": \"Test\",\n    \"middle_name\": \"\", //optional\n    \"last_name\": \"Patient\",\n    \"dob\": \"1987-01-06\",\n    \"mobile\": \"+919999999999\",\n    \"gender\": \"M\",\n    \"address\": {\n        \"city\": \"Bangalore\",\n        \"line1\": \"ABC\",\n        \"line2\": \"XYZ\",\n        \"pincode\": 560049,\n        \"state\": \"Karnataka\",\n        \"country\": \"India\"\n    },\n    \"metadata\": {\n        \"blood_group\": \"AB+\",\n        \"aadhar_number\": \"12345\",\n        \"notes\": \"Has a history of HTN\"\n    },\n    \"doctor_id\" : {{doctor_id}}\n}"
              },
              "example": "{\n    \"patient_oid\": \"123456789\",// Optional\n    \"designation\": \"Mr.\", //Optional\n    \"first_name\": \"Test\",\n    \"middle_name\": \"\", //optional\n    \"last_name\": \"Patient\",\n    \"dob\": \"1987-01-06\",\n    \"mobile\": \"+919999999999\",\n    \"gender\": \"M\",\n    \"address\": {\n        \"city\": \"Bangalore\",\n        \"line1\": \"ABC\",\n        \"line2\": \"XYZ\",\n        \"pincode\": 560049,\n        \"state\": \"Karnataka\",\n        \"country\": \"India\"\n    },\n    \"metadata\": {\n        \"blood_group\": \"AB+\",\n        \"aadhar_number\": \"12345\",\n        \"notes\": \"Has a history of HTN\"\n    },\n    \"doctor_id\" : {{doctor_id}}\n}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 24 Mar 2020 06:26:06 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "380"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Cookie, Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/200OK"
                    },
                    {
                      "example": {
                        "data": {
                          "patient_oid": "123456789",
                          "profile": {
                            "id": "123456789",
                            "created_at": "2024-06-12T21:55:51.593Z",
                            "updated_at": "2024-06-17T09:52:55.257Z"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {
                    "patient_oid": "123456789",
                    "profile": {
                      "id": "123456789",
                      "created_at": "2024-06-12T21:55:51.593Z",
                      "updated_at": "2024-06-17T09:52:55.257Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/403ForbiddenBusinessPatientDetailsMissing1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "NOT_ALLOWED",
                          "message": "You are not allowed to add resource"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "NOT_ALLOWED",
                    "message": "You are not allowed to add resource"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/500WrongAPIURLTokenmismatchedWrongJSONrequest.1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "INVALID_DATA",
                          "message": "Data entered in incorrect"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "INVALID_DATA",
                    "message": "Data entered in incorrect"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/patients/{patient_id}": {
      "get": {
        "tags": [
          "Patient Registration API"
        ],
        "summary": "Get patient details by id",
        "description": "This API provides functionality to get details of a patient by their Eka profile id, in a business' directory\n\n### Request Parameter\n\n| Parameter | Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- | --- |\n| patient_id | string |  | Patient's eka profile id | Required |\n\n### **Response parameter**\n\n| Parameter | Type | Expected Values | Description |\n| --- | --- | --- | --- |\n| data | object |  | Response data object |\n| data.patients | array |  | List of patients |\n| data.patients\\[\\].oid | string | 1234567890 | Unique identifier for the patient |\n| data.patients\\[\\].name | string | Patient Testname | Patient's name |\n| data.patients\\[\\].last_visit | datetime | 2024-06-06T10:56:50.468Z | Last visit date and time |\n| data.patients\\[\\].clinic_id | string | 60532c11111101ba3a3Test | Clinic identifier |\n| data.patients\\[\\].patient_profile | object |  | Patient object |\n| data.patients\\[\\].patient.patient_oid | string | 1234567890 | Unique identifier for the patient |\n| data.patients\\[\\].patient.first_name | string | Patient | Patient's first name |\n| data.patients\\[\\].patient.middle_name | string |  | Patient's middle name |\n| data.patients\\[\\].patient.last_name | string | Testname | Patient's last name |\n| data.patients\\[\\].patient.dob | date | 1981-11-11 | Patient's date of birth |\n| data.patients\\[\\].patient.health-ids | array | \\[\"test@abdm\", \"test@ndhm\"\\] | List of patient's health IDs |\n|  |  |  |  |\n| data.patients\\[\\].patient.email | string | [ekademo@gmail.com](https://mailto:ekademo@gmail.com) | Patient's email address |\n| data.patients\\[\\].patient.gen | string | M | Patient's gender |\n| data.patients\\[\\].patient.mobile | string | +919999999999 | Patient's mobile number |\n| data.patients\\[\\].patient.at | datetime | 2021-03-19T13:15:26.318Z | Timestamp of patient profile creation |\n**Status Codes**\n\n• 200: Success\n\n• 403: Patient/Business data missing\n\n• 500: Wrong API URL/Wrong JSON request/ Something went wrong",
        "operationId": "Getpatientdetailsbyid",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 24 Mar 2020 06:26:06 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "380"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Cookie, Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/200OK1"
                    },
                    {
                      "example": {
                        "data": {
                          "patient_oid": "123456789",
                          "name": "Test Patient",
                          "last_visit": "2024-06-06T10:56:50.468Z",
                          "clinic_id": "12345678",
                          "patient_profile": {
                            "patient_oid": "123456789",
                            "first_name": "Test",
                            "middle_name": "",
                            "last_name": "Patient",
                            "dob": "1984-11-11",
                            "email": "ekademo@gmail.com",
                            "gen": "M",
                            "mobile": "+919999999999",
                            "created_at": "2021-03-19T13:15:26.318Z",
                            "address": {
                              "city": "Bangalore",
                              "line1": "ABC",
                              "line2": "XYZ",
                              "pincode": 560049,
                              "state": "Karnataka",
                              "country": "India",
                              "district": "Bangalore Urban"
                            },
                            "metadata": {
                              "blood_group": "AB+",
                              "aadhar_number": "12345",
                              "notes": "Has a history of HTN",
                              "father_name": "Test Father"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {
                    "patient_oid": "123456789",
                    "name": "Test Patient",
                    "last_visit": "2024-06-06T10:56:50.468Z",
                    "clinic_id": "12345678",
                    "patient_profile": {
                      "patient_oid": "123456789",
                      "first_name": "Test",
                      "middle_name": "",
                      "last_name": "Patient",
                      "dob": "1984-11-11",
                      "email": "ekademo@gmail.com",
                      "gen": "M",
                      "mobile": "+919999999999",
                      "created_at": "2021-03-19T13:15:26.318Z",
                      "address": {
                        "city": "Bangalore",
                        "line1": "ABC",
                        "line2": "XYZ",
                        "pincode": 560049,
                        "state": "Karnataka",
                        "country": "India",
                        "district": "Bangalore Urban"
                      },
                      "metadata": {
                        "blood_group": "AB+",
                        "aadhar_number": "12345",
                        "notes": "Has a history of HTN",
                        "father_name": "Test Father"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/403ForbiddenBusinessPatientDetailsMissing1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "UNAUTHORIZED_PATIENT_SEARCH",
                          "message": "Unauthorized access: You do not have permission to search for patients in this directory"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "UNAUTHORIZED_PATIENT_SEARCH",
                    "message": "Unauthorized access: You do not have permission to search for patients in this directory"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/500WrongAPIURLTokenmismatchedWrongJSONrequest.1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "INVALID_DATA",
                          "message": "Data entered is incorrect"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "INVALID_DATA",
                    "message": "Data entered is incorrect"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/patients/search": {
      "get": {
        "tags": [
          "Patient Registration API"
        ],
        "summary": "Search Patient by mobile",
        "description": "This API provides functionality to search a patient by their mobile number in doctor's directory\n\n### Request Parameter\n\n| Parameter | Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- | --- |\n| mobile | string |  | Patient's mobile number | Required |\n\n### **Response parameter**\n\n| Parameter | Type | Expected Values | Description |\n| --- | --- | --- | --- |\n| data | object |  | Response data object |\n| data.patients | array |  | List of patients |\n| data.patients\\[\\].oid | string | 1234567890 | Unique identifier for the patient |\n| data.patients\\[\\].name | string | Patient Testname | Patient's name |\n| data.patients\\[\\].last_visit | datetime | 2024-06-06T10:56:50.468Z | Last visit date and time |\n| data.patients\\[\\].clinic_id | string | 60532c11111101ba3a3Test | Clinic identifier |\n| data.patients\\[\\].patient_profile | object |  | Patient object |\n| data.patients\\[\\].patient.patient_oid | string | 1234567890 | Unique identifier for the patient |\n| data.patients\\[\\].patient.first_name | string | Patient | Patient's first name |\n| data.patients\\[\\].patient.middle_name | string |  | Patient's middle name |\n| data.patients\\[\\].patient.last_name | string | Testname | Patient's last name |\n| data.patients\\[\\].patient.dob | date | 1981-11-11 | Patient's date of birth |\n| data.patients\\[\\].patient.dob-valid | boolean | true | Date of birth validity |\n| data.patients\\[\\].patient.health-ids | array | \\[\"test@abdm\", \"test@ndhm\"\\] | List of patient's health IDs |\n|  |  |  |  |\n| data.patients\\[\\].patient.email | string | [ekademo@gmail.com](https://mailto:ekademo@gmail.com) | Patient's email address |\n| data.patients\\[\\].patient.gen | string | M | Patient's gender |\n| data.patients\\[\\].patient.mobile | string | +919999999999 | Patient's mobile number |\n| data.patients\\[\\].patient.at | datetime | 2021-03-19T13:15:26.318Z | Timestamp of patient profile creation |\n**Status Codes**\n\n• 200: Success\n\n• 403: Patient/Business data missing\n\n• 500: Wrong API URL/Wrong JSON request/ Something went wrong",
        "operationId": "SearchPatientbymobile",
        "parameters": [
          {
            "name": "mobile",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "<mobile_no>"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 24 Mar 2020 06:26:06 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "380"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Cookie, Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/200OK2"
                    },
                    {
                      "example": {
                        "data": {
                          "patients": [
                            {
                              "patient_oid": "123456789",
                              "name": "Test Patient",
                              "last_visit": "2024-06-06T10:56:50.468Z",
                              "clinic_id": "12345678",
                              "patient_profile": {
                                "patient_oid": "123456789",
                                "first_name": "Test",
                                "middle_name": "",
                                "last_name": "Patient",
                                "dob": "1984-11-11",
                                "email": "ekademo@gmail.com",
                                "gen": "M",
                                "mobile": "+919999999999",
                                "created_at": "2021-03-19T13:15:26.318Z"
                              }
                            },
                            {
                              "patient_oid": "234567890",
                              "name": "Test PT 2",
                              "last_visit": null,
                              "is_recent": false,
                              "clinic_id": null,
                              "patient_profile": {
                                "first_name": "Test",
                                "middle_name": "PT",
                                "last_name": "2",
                                "patient_oid": "234567890",
                                "email": "demo_test@eka.care",
                                "gen": "M",
                                "mobile": "+91999999999",
                                "dob": "1991-11-11",
                                "created_at": "2021-03-19T13:15:26318Z"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {
                    "patients": [
                      {
                        "patient_oid": "123456789",
                        "name": "Test Patient",
                        "last_visit": "2024-06-06T10:56:50.468Z",
                        "clinic_id": "12345678",
                        "patient_profile": {
                          "patient_oid": "123456789",
                          "first_name": "Test",
                          "middle_name": "",
                          "last_name": "Patient",
                          "dob": "1984-11-11",
                          "email": "ekademo@gmail.com",
                          "gen": "M",
                          "mobile": "+919999999999",
                          "created_at": "2021-03-19T13:15:26.318Z"
                        }
                      },
                      {
                        "patient_oid": "234567890",
                        "name": "Test PT 2",
                        "last_visit": null,
                        "is_recent": false,
                        "clinic_id": null,
                        "patient_profile": {
                          "first_name": "Test",
                          "middle_name": "PT",
                          "last_name": "2",
                          "patient_oid": "234567890",
                          "email": "demo_test@eka.care",
                          "gen": "M",
                          "mobile": "+91999999999",
                          "dob": "1991-11-11",
                          "created_at": "2021-03-19T13:15:26318Z"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/403ForbiddenBusinessPatientDetailsMissing1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "UNAUTHORIZED_PATIENT_SEARCH",
                          "message": "Unauthorized access: You do not have permission to search for patients in this directory"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "UNAUTHORIZED_PATIENT_SEARCH",
                    "message": "Unauthorized access: You do not have permission to search for patients in this directory"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/500WrongAPIURLTokenmismatchedWrongJSONrequest.1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "INVALID_DATA",
                          "message": "Data entered is incorrect"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "INVALID_DATA",
                    "message": "Data entered is incorrect"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/doctor/{doctor_id}/patient/{patient_id}/edit": {
      "patch": {
        "tags": [
          "Patient Registration API"
        ],
        "summary": "Update Patient Details API",
        "description": "Thi API provides functionality to update patient details for the registered patients .\n\n**Parameters**\n\nThe request body should include the fields that need to be updated. Below is an example request body for updating the last name of a patient:\n\n{  \n\"last_name\": \"NewLastName\"  \n}\n\n**Response Paramters**\n\n|  |  |  |  |\n| --- | --- | --- | --- |\n| Parameter | Type | Expected Values | Description |\n| code | int(10) | 200 | Response message |\n| patientId | varchar(20) | 20185 | API response code |\n\n**Status Codes**  \n• 200: Success\n\n• 500: PatientId/labPatientId is missing",
        "operationId": "UpdatePatientDetailsAPI",
        "parameters": [
          {
            "name": "doctor_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePatientDetailsAPIRequest"
                  },
                  {
                    "example": {
                      "firstName": "John",
                      "middleName": "Doe",
                      "lastName": "NewLastName",
                      "mobile": "+91999999999",
                      "email": "john.doe@example.com",
                      "address": {
                        "city": "Bangalore",
                        "line1": "ABC",
                        "line2": "XYZ",
                        "pincode": 560049,
                        "state": "Karnataka",
                        "country": "India"
                      },
                      "metadata": {
                        "blood_group": "AB+",
                        "aadhar_number": "12345"
                      }
                    }
                  }
                ]
              },
              "example": {
                "firstName": "John",
                "middleName": "Doe",
                "lastName": "NewLastName",
                "mobile": "+91999999999",
                "email": "john.doe@example.com",
                "address": {
                  "city": "Bangalore",
                  "line1": "ABC",
                  "line2": "XYZ",
                  "pincode": 560049,
                  "state": "Karnataka",
                  "country": "India"
                },
                "metadata": {
                  "blood_group": "AB+",
                  "aadhar_number": "12345"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 16 Apr 2020 09:22:28 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/200-Success1"
                    },
                    {
                      "example": {
                        "patientId": "1234567890"
                      }
                    }
                  ]
                },
                "example": {
                  "patientId": "1234567890"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/entities": {
      "get": {
        "tags": [
          "Doctor and clinic API"
        ],
        "summary": "Get Clinic and Doctor details",
        "description": "### **Purpose**\n\nThe Get Clinic and Doctor Details API provides a comprehensive list of clinics and doctors associated with those clinics for a business. This API is designed to retrieve detailed information about clinics, the doctors working at each clinic, and the overarching business entity.\n\n### **Basic Information**\n\n**Endpoint**\n\n• **URL:** {{HOST}}/v1/business/entities\n\n• **Method:** GET\n\n### **Detailed API Description**\n\n**Fetch Clinic and Doctor Details**\n\n**Endpoint:** {{HOST}}/v1/business/entities\n\n**Method:** GET\n\n**Response:**\n\n• **Status Code:** 200 OK\n\n• **Body:**\n\n``` json\n{\n    \"status\" : 200,\n    \"data\": {\n        \"clinics\": [\n            {\n                \"clinic_id\": \"{{clinic_id1}}\",\n                \"name\": \"Skin clinic derma 1\",\n                \"doctors\": [\n                    \"12345678901234\",\n                    \"11987654321765\"\n                ]\n            },\n            {\n                \"clinic_id\": \"{{clinic_id2}}\",\n                \"name\": \"family clinic 2\",\n                \"doctors\": [\n                   \"87198101903i101\"\n                ]\n            }\n        ],\n        \"doctors\": [\n            {\n                \"name\": \"Dr. GP Physician\",\n                \"doctor_id\": \"12345678901234\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            },\n            {\n                \"name\": \"Dr. ABC XYZ\",\n                \"doctor_id\": \"11987654321765\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            },\n            {\n                \"name\": \"Dr. Ortho Doctor\",\n                \"doctor_id\": \"87198101903i101\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            }\n        ],\n        \"business\": {\n            \"business_id\": \"{{business_id}}\",\n            \"name\": \"{{business_name}}\"\n        }\n    }\n}\n\n ```\n\n  \n\n**Field Descriptions**\n\n• **status:** (integer) HTTP status code of the response.\n\n• **data:** (object) The main data object containing clinics, doctors, and business details.\n\n• **clinics:** (array of objects) List of clinics.\n\n• **clinic_id:** (string) Unique identifier of the clinic.\n\n• **name:** (string) Name of the clinic.\n\n• **doctors:** (array of strings) List of doctor IDs associated with the clinic.\n\n• **doctors:** (array of objects) List of doctors.\n\n• **name:** (string) Name of the doctor.\n\n• **doctor_id:** (string) Unique identifier of the doctor.\n\n• **pic:** (string) URL of the doctor’s profile picture.\n\n• **business:** (object) Details of the business entity.\n\n• **business_id:** (string) Unique identifier of the business.\n\n• **name:** (string) Name of the business.",
        "operationId": "GetClinicandDoctordetails",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{x-api-key}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"status\" : 200,\n    \"data\": {\n        \"clinics\": [\n            {\n                \"clinic_id\": \"{{clinic_id1}}\",\n                \"name\": \"Skin clinic derma 1\",\n                \"doctors\": [\n                    \"12345678901234\",\n                    \"11987654321765\"\n                ]\n            },\n            {\n                \"clinic_id\": {{clinic_id2}},\n                \"name\": \"family clinic 2\",\n                \"doctors\": [\n                   \"87198101903i101\"\n                ]\n            }\n        ],\n        \"doctors\": [\n            {\n                \"name\": \"Dr. GP Physician\",\n                \"doctor_id\": \"12345678901234\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            },\n            {\n                \"name\": \"Dr. ABC XYZ\",\n                \"doctor_id\": \"11987654321765\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            },\n            {\n                \"name\": \"Dr. Ortho Doctor\",\n                \"doctor_id\": \"87198101903i101\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            }\n        ],\n        \"business\": {\n            \"business_id\": {{business_id}},\n            \"name\": {{business_name}}\n        }\n    }\n}\n\n"
                },
                "example": "{\n    \"status\" : 200,\n    \"data\": {\n        \"clinics\": [\n            {\n                \"clinic_id\": \"{{clinic_id1}}\",\n                \"name\": \"Skin clinic derma 1\",\n                \"doctors\": [\n                    \"12345678901234\",\n                    \"11987654321765\"\n                ]\n            },\n            {\n                \"clinic_id\": {{clinic_id2}},\n                \"name\": \"family clinic 2\",\n                \"doctors\": [\n                   \"87198101903i101\"\n                ]\n            }\n        ],\n        \"doctors\": [\n            {\n                \"name\": \"Dr. GP Physician\",\n                \"doctor_id\": \"12345678901234\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            },\n            {\n                \"name\": \"Dr. ABC XYZ\",\n                \"doctor_id\": \"11987654321765\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            },\n            {\n                \"name\": \"Dr. Ortho Doctor\",\n                \"doctor_id\": \"87198101903i101\",\n                \"pic\": \"https://abc.eka.care/doctor-avatar/123456789\"\n            }\n        ],\n        \"business\": {\n            \"business_id\": {{business_id}},\n            \"name\": {{business_name}}\n        }\n    }\n}\n\n"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/doctor/{doctor_id}": {
      "get": {
        "tags": [
          "Doctor and clinic API"
        ],
        "summary": "Get Doctor profile",
        "description": "### Response Parameters\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| id | string | Unique identifier for the doctor in Eka |\n| created_at | datetime | Timestamp when the doctor profile was created |\n| profile | object | Doctor's profile details |\n| profile.personal | object | Personal details of the doctor |\n| profile.personal.designation | string | Designation (e.g., Dr.) |\n| profile.personal.first_name | string | First name of the doctor |\n| profile.personal.middle_name | string | Middle name of the doctor |\n| profile.personal.last_name | string | Last name of the doctor |\n| profile.personal.email | string | Email address of the doctor |\n| profile.personal.gender | string | Gender of the doctor |\n| profile.personal.dob | date | Date of birth of the doctor |\n| profile.professional | object | Professional details of the doctor |\n| profile.professional.active | boolean | Flag indicating if the profile is active |\n| profile.professional.about | string | About section describing the doctor |\n| profile.professional.language | array | Languages spoken by the doctor |\n| profile.professional.language\\[\\].language | string | Language name (e.g., English) |\n| profile.professional.clinics | array | Clinics associated with the doctor |\n| profile.professional.clinics\\[\\] | object | Clinic details |\n| profile.professional.clinics\\[\\]..id | string | Unique identifier for the clinic |\n| profile.professional.clinics\\[\\].city_name | string | City name where the clinic is located |\n| profile.professional.clinics\\[\\].name | string | Name of the clinic |\n| profile.professional.clinics\\[\\].email | string | Email address of the clinic |\n| profile.professional.clinics\\[\\].about | string | About section of the clinic |\n| profile.professional.clinics\\[\\].speciality | array | Specialities offered at the clinic |\n| profile.professional.clinics\\[\\].number | array | Contact numbers for the clinic |\n| profile.professional.clinics\\[\\].number\\[\\].name | string | Type of contact number (e.g., Phone, Mobile) |\n| profile.professional.clinics\\[\\].number\\[\\].n | string | Contact number |\n| profile.professional.clinics\\[\\].address | object | Address details of the clinic |\n| profile.professional.clinics\\[\\].address.line1 | string | Address line 1 |\n| profile.professional.clinics\\[\\].address.line2 | string | Address line 2 |\n| profile.professional.clinics\\[\\].address.city | string | City of the clinic |\n| profile.professional.clinics\\[\\].address.state | string | State of the clinic |\n| profile.professional.clinics\\[\\].address.country | string | Country of the clinic |\n| profile.professional.clinics\\[\\].address.pincode | string | Pincode of the clinic |\n| profile.professional.clinics\\[\\].location | array | Location coordinates of the clinic |\n| profile.professional.default_clinic | string | Default clinic ID |\n| profile.professional.all_registrations | array | Registrations of the doctor |\n| profile.professional.all_registrations\\[\\].id | number | Registration ID |\n| profile.professional.all_registrations\\[\\].council | string | Medical council name |\n| profile.professional.all_registrations\\[\\].medical_id | string | Medical ID number |\n| profile.professional.all_registrations\\[\\].year | string | Year of registration |\n| profile.professional.all_registrations\\[\\].default | boolean | Flag indicating if it is the default registration |\n| profile.professional.degree | array | Degrees earned by the doctor |\n| profile.professional.degree\\[\\].id | number | Degree ID |\n| profile.professional.degree\\[\\].name | string | Name of the degree |\n| profile.professional.degree\\[\\].branch_name | string | Branch name |\n| profile.professional.degree\\[\\].college_name | string | College name |\n| profile.professional.degree\\[\\].display_status | string | Display status of the degree |\n| profile.professional.degree\\[\\].start_year | string | Start year of the degree |\n| profile.professional.degree\\[\\].end_year | string | End year of the degree |\n| profile.professional.major_speciality | object | Major speciality of the doctor |\n| profile.professional.major_speciality.name | string | Name of the major speciality |\n| profile.professional.speciality | array | Specialities of the doctor |\n| profile.professional.speciality\\[\\].name | string | Name of the speciality |\n| **Status Codes** |  |  |\n\n• 200: Success\n\n• 403: Doctor data missing\n\n• 500: Wrong API URL/Token mismatched/Wrong JSON request.",
        "operationId": "GetDoctorprofile",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "doctor_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 24 Mar 2020 06:26:06 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "380"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Cookie, Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/200OK4"
                    },
                    {
                      "example": {
                        "id": "1234567890",
                        "profile": {
                          "personal": {
                            "first_name": "doctor",
                            "middle_name": "",
                            "last_name": "doctor",
                            "dob": "",
                            "gender": "M"
                          },
                          "professional": {
                            "active": true,
                            "about": "doctor doctor is a Cardiologist with 43 years of experience.",
                            "language": [
                              {
                                "code": "en",
                                "language": "English"
                              }
                            ],
                            "degree": [
                              {
                                "name": "MD",
                                "branch_name": "",
                                "college_name": "",
                                "start_year": "",
                                "end_year": ""
                              }
                            ],
                            "major_speciality": {
                              "name": "Cardiologist",
                              "code": "CA"
                            },
                            "speciality": [
                              {
                                "name": "General Physician"
                              },
                              {
                                "name": "Diabetologist"
                              },
                              {
                                "name": "Allergy Specialist"
                              }
                            ],
                            "clinics": [
                              {
                                "id": "1234567899876",
                                "name": "Vagus Hospital & Health Services",
                                "contacts": [
                                  {
                                    "name": "Phone",
                                    "number": "+91999999999"
                                  }
                                ],
                                "address": {
                                  "line1": "H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom., Pocket 2, Gate No :-2, nearest to Homeopathy clinic.",
                                  "city": "Delhi",
                                  "country": "India",
                                  "state": "Delhi",
                                  "pin": "110085"
                                }
                              }
                            ],
                            "default_clinic": "1234567899876"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "1234567890",
                  "profile": {
                    "personal": {
                      "first_name": "doctor",
                      "middle_name": "",
                      "last_name": "doctor",
                      "dob": "",
                      "gender": "M"
                    },
                    "professional": {
                      "active": true,
                      "about": "doctor doctor is a Cardiologist with 43 years of experience.",
                      "language": [
                        {
                          "code": "en",
                          "language": "English"
                        }
                      ],
                      "degree": [
                        {
                          "name": "MD",
                          "branch_name": "",
                          "college_name": "",
                          "start_year": "",
                          "end_year": ""
                        }
                      ],
                      "major_speciality": {
                        "name": "Cardiologist",
                        "code": "CA"
                      },
                      "speciality": [
                        {
                          "name": "General Physician"
                        },
                        {
                          "name": "Diabetologist"
                        },
                        {
                          "name": "Allergy Specialist"
                        }
                      ],
                      "clinics": [
                        {
                          "id": "1234567899876",
                          "name": "Vagus Hospital & Health Services",
                          "contacts": [
                            {
                              "name": "Phone",
                              "number": "+91999999999"
                            }
                          ],
                          "address": {
                            "line1": "H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom., Pocket 2, Gate No :-2, nearest to Homeopathy clinic.",
                            "city": "Delhi",
                            "country": "India",
                            "state": "Delhi",
                            "pin": "110085"
                          }
                        }
                      ],
                      "default_clinic": "1234567899876"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/403ForbiddenBusinessPatientDetailsMissing1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "UNAUTHORIZED_ENTITY",
                          "message": "You are not authorized to view requisted resource Doctor"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "UNAUTHORIZED_ENTITY",
                    "message": "You are not authorized to view requisted resource Doctor"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/500WrongAPIURLTokenmismatchedWrongJSONrequest.1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "INVALID_DATA",
                          "message": "Doctor id entered is incorrect"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "INVALID_DATA",
                    "message": "Doctor id entered is incorrect"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/doctor/clinics/{doctor_id}": {
      "get": {
        "tags": [
          "Doctor and clinic API"
        ],
        "summary": "Get Clinics for doctor [WIP]",
        "description": "This API provides functionality to search a patient by their mobile number in doctor's directory\n\n### Request Parameter\n\n| Parameter | Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- | --- |\n| doctor_oid | string |  | Unique identifier for the doctor | Required |\n\n### **Response parameter**\n\n**Status Codes**\n\n• 200: Success\n\n• 403: Patient/Organization data missing\n\n• 500: Wrong API URL/Token mismatched/Wrong JSON request.",
        "operationId": "GetClinicsfordoctor[WIP]",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "doctor_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Tue, 24 Mar 2020 06:26:06 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "380"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Cookie, Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              }
            },
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/403ForbiddenBusinessPatientDetailsMissing11"
                    },
                    {
                      "example": {
                        "data": {},
                        "err": {
                          "code": "DOCTOR_DATA_INVALID",
                          "message": "Please enter valid doctor data"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "err": {
                    "code": "DOCTOR_DATA_INVALID",
                    "message": "Please enter valid doctor data"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/500WrongAPIURLTokenmismatchedWrongJSONrequest.11"
                    },
                    {
                      "example": {
                        "data": {},
                        "err": {
                          "code": "INVALID_DATA",
                          "message": "Data entered in incorrect"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "err": {
                    "code": "INVALID_DATA",
                    "message": "Data entered in incorrect"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/doctor/{doctor_id}/clinic/{clinic_id}/appointments/slots": {
      "get": {
        "tags": [
          "Appointment API"
        ],
        "summary": "Get Appointment Slots",
        "description": "This API is the first step in booking appointment slot for a patient for a doctor's clinic\n\n**Parameters**\n\n| Parameter | Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- | --- |\n| docid | string |  | Unique identifier for the doctor | Required |\n| clinicid | string |  | Unique identifier for the clinic | Required |\n| start_date | date | YYYY-MM-DD | Start date for the appointment slots | Required |\n| end_date | date | YYYY-MM-DD | End date for the appointment slots | Required |\n\n**Response Parameters**\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | object | Response data object |\n| data.schedule | object | Schedule of available slots |\n| data.schedule. | object | Object containing appointment slots for the clinic |\n| data.schedule.. | array | Array of available slots for the given date |\n| data.schedule..\\[\\].available | boolean | Indicates if the slot is available |\n| data.schedule..\\[\\].conf_id | string | Configuration ID for the slot |\n| data.schedule..\\[\\].e | datetime | End time of the slot |\n| data.schedule..\\[\\].s | datetime | Start time of the slot |\n| data.schedule..\\[\\].slots_booked | integer | Number of slots booked |\n| data.services | object | Object containing service details |\n| data.services. | object | Service object |\n| data.services..allow_patient_booking | boolean | Indicates if patient booking is allowed |\n| data.services..appointment_type | string | Type of appointment (e.g., REGULAR) |\n| data.services..archive | boolean | Indicates if the service is archived |\n| data.services..book_ahead_days | integer | Number of days ahead booking is allowed |\n| data.services..c_at | datetime | Creation timestamp of the service |\n| data.services..conf_id | string | Configuration ID for the service |\n| data.services..conv_fee | integer | Convenience fee for the service |\n| data.services..currency | string | Currency code (e.g., INR) |\n| data.services..duration | integer | Duration of the service in minutes |\n| data.services..eka_fee | integer | Eka fee for the service |\n| data.services..followup_validity | integer | Validity period for follow-up |\n| data.services..mode | array | Modes of the service (e.g., tele, in-clinic) |\n| data.services..nickname | string | Nickname for the service |\n| data.services..owner_id | string | Owner ID for the service |\n| data.services..post_pay | boolean | Indicates if post-payment is allowed |\n| data.services..pre_pay | boolean | Indicates if pre-payment is allowed |\n| data.services..price | integer | Price of the service |\n| data.services..service_id | integer | Service ID |\n| data.services..service_name | string | Name of the service |\n\n**Status codes**\n\n• 200: Success\n\n• 403: Business data missing\n\n• 500: Wrong API URL/Token mismatched/Wrong JSON request.",
        "operationId": "GetAppointmentSlots",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{{start_date}}"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "{{end_date}}"
            }
          },
          {
            "name": "doctor_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clinic_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sun, 12 Apr 2020 11:09:57 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "377"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Cookie, Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"data\": {\n        \"schedule\": {\n            {{clinic_id}}: { \n                    \"2024-06-19\": [\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T10:40:00+05:30\",\n                            \"s\": \"2024-06-19T10:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T10:50:00+05:30\",\n                            \"s\": \"2024-06-19T10:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:00:00+05:30\",\n                            \"s\": \"2024-06-19T10:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:10:00+05:30\",\n                            \"s\": \"2024-06-19T11:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:20:00+05:30\",\n                            \"s\": \"2024-06-19T11:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:30:00+05:30\",\n                            \"s\": \"2024-06-19T11:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:40:00+05:30\",\n                            \"s\": \"2024-06-19T11:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:50:00+05:30\",\n                            \"s\": \"2024-06-19T11:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:00:00+05:30\",\n                            \"s\": \"2024-06-19T11:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:10:00+05:30\",\n                            \"s\": \"2024-06-19T12:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:20:00+05:30\",\n                            \"s\": \"2024-06-19T12:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:30:00+05:30\",\n                            \"s\": \"2024-06-19T12:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:40:00+05:30\",\n                            \"s\": \"2024-06-19T12:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:50:00+05:30\",\n                            \"s\": \"2024-06-19T12:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T13:00:00+05:30\",\n                            \"s\": \"2024-06-19T12:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T18:40:00+05:30\",\n                            \"s\": \"2024-06-19T18:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T18:50:00+05:30\",\n                            \"s\": \"2024-06-19T18:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:00:00+05:30\",\n                            \"s\": \"2024-06-19T18:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:10:00+05:30\",\n                            \"s\": \"2024-06-19T19:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:20:00+05:30\",\n                            \"s\": \"2024-06-19T19:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:30:00+05:30\",\n                            \"s\": \"2024-06-19T19:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:40:00+05:30\",\n                            \"s\": \"2024-06-19T19:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:50:00+05:30\",\n                            \"s\": \"2024-06-19T19:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T20:00:00+05:30\",\n                            \"s\": \"2024-06-19T19:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T20:10:00+05:30\",\n                            \"s\": \"2024-06-19T20:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T20:20:00+05:30\",\n                            \"s\": \"2024-06-19T20:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T20:30:00+05:30\",\n                            \"s\": \"2024-06-19T20:20:00+05:30\",\n                            \"slots_booked\": null\n                        }\n                    ],\n                    \"2024-06-20\": [\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T10:40:00+05:30\",\n                            \"s\": \"2024-06-20T10:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T10:50:00+05:30\",\n                            \"s\": \"2024-06-20T10:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:00:00+05:30\",\n                            \"s\": \"2024-06-20T10:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:10:00+05:30\",\n                            \"s\": \"2024-06-20T11:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:20:00+05:30\",\n                            \"s\": \"2024-06-20T11:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:30:00+05:30\",\n                            \"s\": \"2024-06-20T11:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:40:00+05:30\",\n                            \"s\": \"2024-06-20T11:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:50:00+05:30\",\n                            \"s\": \"2024-06-20T11:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:00:00+05:30\",\n                            \"s\": \"2024-06-20T11:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:10:00+05:30\",\n                            \"s\": \"2024-06-20T12:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:20:00+05:30\",\n                            \"s\": \"2024-06-20T12:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:30:00+05:30\",\n                            \"s\": \"2024-06-20T12:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:40:00+05:30\",\n                            \"s\": \"2024-06-20T12:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:50:00+05:30\",\n                            \"s\": \"2024-06-20T12:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T13:00:00+05:30\",\n                            \"s\": \"2024-06-20T12:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T18:40:00+05:30\",\n                            \"s\": \"2024-06-20T18:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T18:50:00+05:30\",\n                            \"s\": \"2024-06-20T18:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:00:00+05:30\",\n                            \"s\": \"2024-06-20T18:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:10:00+05:30\",\n                            \"s\": \"2024-06-20T19:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:20:00+05:30\",\n                            \"s\": \"2024-06-20T19:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:30:00+05:30\",\n                            \"s\": \"2024-06-20T19:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:40:00+05:30\",\n                            \"s\": \"2024-06-20T19:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:50:00+05:30\",\n                            \"s\": \"2024-06-20T19:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T20:00:00+05:30\",\n                            \"s\": \"2024-06-20T19:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T20:10:00+05:30\",\n                            \"s\": \"2024-06-20T20:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T20:20:00+05:30\",\n                            \"s\": \"2024-06-20T20:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T20:30:00+05:30\",\n                            \"s\": \"2024-06-20T20:20:00+05:30\",\n                            \"slots_booked\": null\n                        }\n                    ]\n                }\n            },\n        \"services\": {\n            \"7166c97b908466a27b8c11b3c93090a65dd61fe85eeda9a38761ade663581dc4\": {\n                \"allow_patient_booking\": true,\n                \"appointment_type\": \"REGULAR\",\n                \"c_at\": \"2022-06-18T20:33:34.159Z\",\n                \"conf_id\": \"7166c97b908466a27b8c11b3c93090a65dd61fe85eeda9a38761ade663581dc4\",\n                \"mode\": [\n                    \"tele\"\n                ],\n                \"owner_id\": \"161459684229004\",\n                \"post_pay\": true,\n                \"pre_pay\": false,\n                \"price\": null,\n                \"service_name\": \"consultation\"\n            },\n            \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\": {\n                \"allow_patient_booking\": true,\n                \"appointment_type\": \"REGULAR\",\n                \"book_ahead_days\": 21,\n                \"c_at\": \"2022-06-18T20:33:33.684Z\",\n                \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                \"mode\": [\n                    \"in-clinic\"\n                ],\n                \"owner_id\": \"{{doctor_id}}\",\n                \"post_pay\": true,\n                \"pre_pay\": false,\n                \"price\": null,\n                \"service_name\": \"consultation\"\n            },\n            \"eedaa0837acbc0380108615f34f1f42de20da6aab299f592cbb5a5dd10f94d07\": {\n                \"allow_patient_booking\": true,\n                \"appointment_type\": \"REGULAR\",\n                \"archive\": false,\n                \"book_ahead_days\": 21,\n                \"c_at\": \"2023-11-18T08:05:53.718Z\",\n                \"conf_id\": \"eedaa0837acbc0380108615f34f1f42de20da6aab299f592cbb5a5dd10f94d07\",\n                 \"mode\": [\n                    \"in-clinic\"\n                ],\n                \"owner_id\": \"{{doctor_id}}\",\n                \"post_pay\": true,\n                \"pre_pay\": false,\n                \"price\": null,\n                \"service_name\": \"Tele-Consulation\"\n            }\n        }\n    }\n}"
                },
                "example": "{\n    \"data\": {\n        \"schedule\": {\n            {{clinic_id}}: { \n                    \"2024-06-19\": [\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T10:40:00+05:30\",\n                            \"s\": \"2024-06-19T10:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T10:50:00+05:30\",\n                            \"s\": \"2024-06-19T10:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:00:00+05:30\",\n                            \"s\": \"2024-06-19T10:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:10:00+05:30\",\n                            \"s\": \"2024-06-19T11:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:20:00+05:30\",\n                            \"s\": \"2024-06-19T11:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:30:00+05:30\",\n                            \"s\": \"2024-06-19T11:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:40:00+05:30\",\n                            \"s\": \"2024-06-19T11:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T11:50:00+05:30\",\n                            \"s\": \"2024-06-19T11:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:00:00+05:30\",\n                            \"s\": \"2024-06-19T11:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:10:00+05:30\",\n                            \"s\": \"2024-06-19T12:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:20:00+05:30\",\n                            \"s\": \"2024-06-19T12:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:30:00+05:30\",\n                            \"s\": \"2024-06-19T12:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:40:00+05:30\",\n                            \"s\": \"2024-06-19T12:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T12:50:00+05:30\",\n                            \"s\": \"2024-06-19T12:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T13:00:00+05:30\",\n                            \"s\": \"2024-06-19T12:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T18:40:00+05:30\",\n                            \"s\": \"2024-06-19T18:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T18:50:00+05:30\",\n                            \"s\": \"2024-06-19T18:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:00:00+05:30\",\n                            \"s\": \"2024-06-19T18:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:10:00+05:30\",\n                            \"s\": \"2024-06-19T19:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:20:00+05:30\",\n                            \"s\": \"2024-06-19T19:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:30:00+05:30\",\n                            \"s\": \"2024-06-19T19:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:40:00+05:30\",\n                            \"s\": \"2024-06-19T19:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T19:50:00+05:30\",\n                            \"s\": \"2024-06-19T19:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T20:00:00+05:30\",\n                            \"s\": \"2024-06-19T19:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T20:10:00+05:30\",\n                            \"s\": \"2024-06-19T20:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T20:20:00+05:30\",\n                            \"s\": \"2024-06-19T20:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-19T20:30:00+05:30\",\n                            \"s\": \"2024-06-19T20:20:00+05:30\",\n                            \"slots_booked\": null\n                        }\n                    ],\n                    \"2024-06-20\": [\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T10:40:00+05:30\",\n                            \"s\": \"2024-06-20T10:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T10:50:00+05:30\",\n                            \"s\": \"2024-06-20T10:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:00:00+05:30\",\n                            \"s\": \"2024-06-20T10:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:10:00+05:30\",\n                            \"s\": \"2024-06-20T11:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:20:00+05:30\",\n                            \"s\": \"2024-06-20T11:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:30:00+05:30\",\n                            \"s\": \"2024-06-20T11:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:40:00+05:30\",\n                            \"s\": \"2024-06-20T11:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T11:50:00+05:30\",\n                            \"s\": \"2024-06-20T11:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:00:00+05:30\",\n                            \"s\": \"2024-06-20T11:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:10:00+05:30\",\n                            \"s\": \"2024-06-20T12:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:20:00+05:30\",\n                            \"s\": \"2024-06-20T12:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:30:00+05:30\",\n                            \"s\": \"2024-06-20T12:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:40:00+05:30\",\n                            \"s\": \"2024-06-20T12:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T12:50:00+05:30\",\n                            \"s\": \"2024-06-20T12:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T13:00:00+05:30\",\n                            \"s\": \"2024-06-20T12:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T18:40:00+05:30\",\n                            \"s\": \"2024-06-20T18:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T18:50:00+05:30\",\n                            \"s\": \"2024-06-20T18:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:00:00+05:30\",\n                            \"s\": \"2024-06-20T18:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:10:00+05:30\",\n                            \"s\": \"2024-06-20T19:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:20:00+05:30\",\n                            \"s\": \"2024-06-20T19:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:30:00+05:30\",\n                            \"s\": \"2024-06-20T19:20:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:40:00+05:30\",\n                            \"s\": \"2024-06-20T19:30:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T19:50:00+05:30\",\n                            \"s\": \"2024-06-20T19:40:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T20:00:00+05:30\",\n                            \"s\": \"2024-06-20T19:50:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T20:10:00+05:30\",\n                            \"s\": \"2024-06-20T20:00:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T20:20:00+05:30\",\n                            \"s\": \"2024-06-20T20:10:00+05:30\",\n                            \"slots_booked\": null\n                        },\n                        {\n                            \"available\": true,\n                            \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                            \"e\": \"2024-06-20T20:30:00+05:30\",\n                            \"s\": \"2024-06-20T20:20:00+05:30\",\n                            \"slots_booked\": null\n                        }\n                    ]\n                }\n            },\n        \"services\": {\n            \"7166c97b908466a27b8c11b3c93090a65dd61fe85eeda9a38761ade663581dc4\": {\n                \"allow_patient_booking\": true,\n                \"appointment_type\": \"REGULAR\",\n                \"c_at\": \"2022-06-18T20:33:34.159Z\",\n                \"conf_id\": \"7166c97b908466a27b8c11b3c93090a65dd61fe85eeda9a38761ade663581dc4\",\n                \"mode\": [\n                    \"tele\"\n                ],\n                \"owner_id\": \"161459684229004\",\n                \"post_pay\": true,\n                \"pre_pay\": false,\n                \"price\": null,\n                \"service_name\": \"consultation\"\n            },\n            \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\": {\n                \"allow_patient_booking\": true,\n                \"appointment_type\": \"REGULAR\",\n                \"book_ahead_days\": 21,\n                \"c_at\": \"2022-06-18T20:33:33.684Z\",\n                \"conf_id\": \"e2c63ceda76315147aa4c4e2d6eba6e653589b53a571bad1c61ec7c2bc588582\",\n                \"mode\": [\n                    \"in-clinic\"\n                ],\n                \"owner_id\": \"{{doctor_id}}\",\n                \"post_pay\": true,\n                \"pre_pay\": false,\n                \"price\": null,\n                \"service_name\": \"consultation\"\n            },\n            \"eedaa0837acbc0380108615f34f1f42de20da6aab299f592cbb5a5dd10f94d07\": {\n                \"allow_patient_booking\": true,\n                \"appointment_type\": \"REGULAR\",\n                \"archive\": false,\n                \"book_ahead_days\": 21,\n                \"c_at\": \"2023-11-18T08:05:53.718Z\",\n                \"conf_id\": \"eedaa0837acbc0380108615f34f1f42de20da6aab299f592cbb5a5dd10f94d07\",\n                 \"mode\": [\n                    \"in-clinic\"\n                ],\n                \"owner_id\": \"{{doctor_id}}\",\n                \"post_pay\": true,\n                \"pre_pay\": false,\n                \"price\": null,\n                \"service_name\": \"Tele-Consulation\"\n            }\n        }\n    }\n}"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/business/doctor/appointments/slots/book": {
      "post": {
        "tags": [
          "Appointment API"
        ],
        "summary": "Confirm Appointment Slot",
        "description": "This API is used to book an appointment slot for a patient based on the available slots retrieved from the \\`get appointment slots\\` API.\n\n**Method:** POST\n\n### Request Parameters\n\n#### Patient Information\n\n| Parameter | Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- | --- |\n| designation | varchar(10) | Mr./Miss/Mrs./Dr | Patient's designation | Optional |\n| first_name | varchar(100) | test1 | Patient's first name | Required |\n| middle_name | varchar(100) |  | Patient's middle name | Optional |\n| last_name | varchar(100) | test2 | Patient's last name | Required |\n| dob | Date | 1987-01-06 | Patient's date of birth | Required |\n| mobile | varchar(15) | +919999999999 | Patient's mobile number | Required |\n| gender | varchar(10) | M/F/O | Patient's gender | Required |\n| email | varchar(100) | [pp@orbi.health](https://mailto:pp@orbi.health) | Patient's email address | Optional |\n\n#### Slot Information\n\n| Parameter | Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- | --- |\n| start_time | datetime | 2024-06-11T09:00:00+05:30 | Start time of the appointment slot | Required |\n| end_time | datetime | 2024-06-11T09:30:00+05:30 | End time of the appointment slot | Required |\n| mode | string | in-clinic/tele | Mode of the appointment | Required |\n| service_type | integer | 1 | Type of service | Optional |\n| visit_type | string | REG | Type of visit (e.g., Regular, Follow-up) | Required |\n| service_conf_id | string | 904eec0a73d9b02d9145898db44e628bcb18e7a11cd92852be5a2d6f65159a04 | Configuration ID for the service | Required |\n\n**Response Parameters**\n\n|  |  |  |  |\n| --- | --- | --- | --- |\n| Parameter | Type | Expected Values | Description |\n| status | Int(10) | 200 | API response code |\n| start_time | Datetime | 2020-03-19T19:00:00Z | Appointment start date |\n| message | Varchar(50) | Appointment has been confirmed | Response message |\n| appointment_id | int(11) | 33833 | Appointment ID |\n\n**Status Codes**  \n• 200: Success\n\n• 403: Forbidden access\n\n• 404: AppointmentId not found",
        "operationId": "ConfirmAppointmentSlot",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": "{\n    \"patient\": {\n        \"designation\": \"Mr.\",\n        \"first_name\": \"Test\",\n        \"middle_name\": \"\",\n        \"last_name\": \"Patient\",\n        \"dob\": \"1987-01-06\",\n        \"mobile\": \"+919999999999\",\n        \"gender\": \"M\"\n    },\n    \"slot\": {\n        \"start_time\": \"2024-06-11T09:00:00+05:30\",\n        \"end_time\": \"2024-06-11T09:30:00+05:30\",\n        \"service_conf_id\": \"904eec0a73d9b02d9145898db44e628bcb18e7a11cd92852be5a2d6f65159a04\"\n    },\n    \"doctor_id\": {{doctor_id}}, \n    \"clinic_id\": {{clinic_id}}\n}"
              },
              "example": "{\n    \"patient\": {\n        \"designation\": \"Mr.\",\n        \"first_name\": \"Test\",\n        \"middle_name\": \"\",\n        \"last_name\": \"Patient\",\n        \"dob\": \"1987-01-06\",\n        \"mobile\": \"+919999999999\",\n        \"gender\": \"M\"\n    },\n    \"slot\": {\n        \"start_time\": \"2024-06-11T09:00:00+05:30\",\n        \"end_time\": \"2024-06-11T09:30:00+05:30\",\n        \"service_conf_id\": \"904eec0a73d9b02d9145898db44e628bcb18e7a11cd92852be5a2d6f65159a04\"\n    },\n    \"doctor_id\": {{doctor_id}}, \n    \"clinic_id\": {{clinic_id}}\n}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 16 Apr 2020 08:47:12 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"data\": {\n        \"start_time\": \"2024-06-11T09:00:00+05:30\",\n        \"message\": \"Appointment has been confirmed\",\n        \"appointment_id\": {{appointment_id}}\n    }\n}"
                },
                "example": "{\n    \"data\": {\n        \"start_time\": \"2024-06-11T09:00:00+05:30\",\n        \"message\": \"Appointment has been confirmed\",\n        \"appointment_id\": {{appointment_id}}\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 16 Apr 2020 08:47:12 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/400BadRequest1"
                    },
                    {
                      "example": {
                        "data": {},
                        "error": {
                          "code": "INVALID_REQUEST_PARAMETERS",
                          "message": "The request contains invalid parameters"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "data": {},
                  "error": {
                    "code": "INVALID_REQUEST_PARAMETERS",
                    "message": "The request contains invalid parameters"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/business/doctor/appointments/slots/reserve": {
      "post": {
        "tags": [
          "Appointment API"
        ],
        "summary": "Reserve appointment for business [Special Case- Do NOT use]",
        "description": "This API is used to book an appointment slot for a patient which reserves an appointment in a dummy way, that can be rescheduled and checked in once patient is available.\n\nIn this API, slots avaiability is not checked and a dumy reservation is made.\n\nSlots will **not** be `reserved` in this case but only an appointment will be assigned to a slot. Staff can then reschedule the appointment and assign to a particular doctor and a proper visit date and time.\n\n- if no `visit_start_date` is passed, next available slot of current date will be booked.\n    \n- The dummy reservation **archives/deleted** once the date of reservation crosses.\n    \n- To keep the reservation alive, one can pass a future date (say 3 months) while calling this API so that booking is valid till then.\n    \n- Staff can search for the patient name, go to the appointment, and reschedule to correct doctor+datetime\n    \n\n**Method:** POST\n\n### Request Parameters\n\n| Parameter | Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- | --- |\n| first_name | varchar(100) | Patient | Patient's first name | Required |\n| middle_name | varchar(100) |  | Patient's middle name | Optional |\n| last_name | varchar(100) | Test | Patient's last name | Required |\n| dob | Date | 1987-01-06 | Patient's date of birth | Required |\n| mobile | varchar(15) | +919999999999 | Patient's mobile number | Required |\n| gender | varchar(10) | M/F/O | Patient's gender | Required |\n| doctor_id | varchar(100) | default | Doctor's ID | Required |\n| clinic_id | varchar(100) | {{clinic_id}} | Clinic's ID | Required |\n| visit_start_time | datetime | 2024-06-26T11:28:45.000Z | Start time of the appointment slot | Optional |\n| client_meta.client_visit_id | varchar(100) | RNI1234567 | Client visit ID | Optional |\n| client_meta.patient_id | varchar(100) | P123456 | Patient ID | Optional |\n\n**Response Parameters**\n\n| Parameter | Type | Expected Values | Description | Required/Optional/Not Required |\n| --- | --- | --- | --- | --- |\n| appointment_id | varchar(100) | apt-12345-123456 | Appointment's ID | Required |\n| doctor_id | varchar(100) | 1234567890 | Doctor's ID | Required |\n| patient_id | varchar(100) | 1234567890 | Patient's ID | Required |\n| clinic_id | varchar(100) | 019319i10i01a3e462 | Clinic's ID | Required |\n| channel | varchar(50) | Walking | Channel of appointment | Required |\n| status | varchar(10) | BK | Status of appointment | Required |\n| start_time | datetime | 2024-06-26T11:28:45.000Z | Start time of the appointment | Required |\n| end_time | datetime | 2024-06-26T11:28:45.000Z | End time of the appointment | Required |\n| message | varchar(255) | Appointment has been confirmed | Confirmation message | Required |\n\n**Status Codes**  \n• 200: Success\n\n• 400: Bad Request\n\n• 403: Forbidden",
        "operationId": "Reserveappointmentforbusiness[SpecialCase-DoNOTuse]",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{x-api-key}}"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "{\n    \"patient\": {\n        \"designation\": \"Mr.\",\n        \"first_name\": \"Test\",\n        \"middle_name\": \"\",\n        \"last_name\": \"Patient\",\n        \"dob\": \"1987-01-06\",\n        \"mobile\": \"+919999999999\",\n        \"gender\": \"M\"\n    },\n    \"visit_start_time\":\"2024-06-26T11:28:45.000Z\",\n    \"doctor_id\" : {{doctor_id}},\n    \"clinic_id\" : {{clinic_id}},\n    \"client_meta\" : { // information from client registration system\n        \"client_visit_id\": \"RNI1234567\",\n        \"patient_id\" : \"P123456\",\n        \"payment_details\": {\n            \"payment_id\" : \"txn_123\",\n            \"amount_paid\" : \"1010.50\"\n        }\n    }\n\n}"
              },
              "example": "{\n    \"patient\": {\n        \"designation\": \"Mr.\",\n        \"first_name\": \"Test\",\n        \"middle_name\": \"\",\n        \"last_name\": \"Patient\",\n        \"dob\": \"1987-01-06\",\n        \"mobile\": \"+919999999999\",\n        \"gender\": \"M\"\n    },\n    \"visit_start_time\":\"2024-06-26T11:28:45.000Z\",\n    \"doctor_id\" : {{doctor_id}},\n    \"clinic_id\" : {{clinic_id}},\n    \"client_meta\" : { // information from client registration system\n        \"client_visit_id\": \"RNI1234567\",\n        \"patient_id\" : \"P123456\",\n        \"payment_details\": {\n            \"payment_id\" : \"txn_123\",\n            \"amount_paid\" : \"1010.50\"\n        }\n    }\n\n}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 16 Apr 2020 08:47:12 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"status\" : 200,\n    \"data\": {\n        \"appointment_id\": {{appointment_id}},\n        \"doctor_id\": {{doctor_id}},\n        \"patient_id\": {{patient_id}},\n        \"clinic_id\": {{clinic_id}},\n        \"channel\": \"Walkin\",\n        \"status\": \"BK\",\n        \"start_time\": \"2024-06-26T11:28:45.000Z\",\n        \"end_time\": \"2024-06-26T11:28:45.000Z\",\n        \"message\": \"Appointment has been confirmed\",\n        \"created_at\": \"2024-06-26T11:28:45.000Z\"\n    }\n}"
                },
                "example": "{\n    \"status\" : 200,\n    \"data\": {\n        \"appointment_id\": {{appointment_id}},\n        \"doctor_id\": {{doctor_id}},\n        \"patient_id\": {{patient_id}},\n        \"clinic_id\": {{clinic_id}},\n        \"channel\": \"Walkin\",\n        \"status\": \"BK\",\n        \"start_time\": \"2024-06-26T11:28:45.000Z\",\n        \"end_time\": \"2024-06-26T11:28:45.000Z\",\n        \"message\": \"Appointment has been confirmed\",\n        \"created_at\": \"2024-06-26T11:28:45.000Z\"\n    }\n}"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 16 Apr 2020 08:47:12 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/422-UnprocessableEntity1"
                    },
                    {
                      "example": {
                        "status": 422,
                        "data": {},
                        "error": {
                          "code": "APPOINTMENT_BOOKING_FAILED",
                          "message": "Unable to book appointment due to unavailable slots",
                          "details": {
                            "reason": "NO_AVAILABLE_SLOTS",
                            "doctorId": "12345"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": 422,
                  "data": {},
                  "error": {
                    "code": "APPOINTMENT_BOOKING_FAILED",
                    "message": "Unable to book appointment due to unavailable slots",
                    "details": {
                      "reason": "NO_AVAILABLE_SLOTS",
                      "doctorId": "12345"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 16 Apr 2020 08:47:12 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/400BadRequest3"
                    },
                    {
                      "example": {
                        "status": 400,
                        "data": {},
                        "error": {
                          "code": "INVALID_REQUEST_PARAMETERS",
                          "message": "The request contains invalid parameters"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": 400,
                  "data": {},
                  "error": {
                    "code": "INVALID_REQUEST_PARAMETERS",
                    "message": "The request contains invalid parameters"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 16 Apr 2020 08:47:12 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/403Forbidden3"
                    },
                    {
                      "example": {
                        "status": 403,
                        "data": {},
                        "error": {
                          "code": "UNAUTHORIZED_ENTITY",
                          "message": "Unauthorized access. Booking appointments for business entities or doctors is not allowed"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": 403,
                  "data": {},
                  "error": {
                    "code": "UNAUTHORIZED_ENTITY",
                    "message": "Unauthorized access. Booking appointments for business entities or doctors is not allowed"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/v2/business/appointments/{appointment_id}": {
      "get": {
        "tags": [
          "Appointment API"
        ],
        "summary": "Get Appointment Details",
        "description": "## Get Appointment Details by ID\n\n### Overview\n\nThis API endpoint is used to retrieve the details of an appointment using its unique identifier. The response includes comprehensive information about the appointment, including patient and doctor details, appointment status, and related services.\n\n### Endpoint\n\n**URL:** `{{HOST}}/v2/business/appointments/{{appointment_id}}`  \n**Method:** GET\n\n### Request Parameters\n\n| Parameter | Type | Description | Required |\n| --- | --- | --- | --- |\n| appointment_id | string | Unique identifier for the appointment | Yes |\n\n### Response Parameters\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | object | Response data object |\n| data.appointment_id | string | Unique identifier for the appointment |\n| data.created_at | datetime | Appointment creation timestamp |\n| data.doctor_oid | string | Unique identifier for the doctor |\n| data.patient_oid | string | Unique identifier for the patient |\n| data.clinic_id | string | Unique identifier for the clinic |\n| data.channel | enum | Channel of the appointment (`Offline` or `Online`) |\n| data.status | enum | Appointment status (`CM`, `IN`, `CMNP`, etc.) |\n| data.start_time | datetime | Start time of the appointment |\n| data.end_time | datetime | End time of the appointment |\n| data.visit_checkin | datetime | Check-in time for the visit |\n| data.visit_start | datetime | Start time for the visit |\n| data.visit_end | datetime | End time for the visit |\n| data.stage | enum | Stage of the appointment (`COMPLETED`, etc.) |\n| data.visit-type | enum | Type of visit (`WALKIN`, etc.) |\n| data.payment | object | Payment details |\n| data.payment.payment_id | string | Payment ID (nullable) |\n| data.payment.payment_status | enum | Payment status (nullable) |\n| data.payment.amount | number | Payment amount (nullable) |\n| data.prescription_id | string | Unique identifier for the prescription |\n| data.service | object | Service details |\n| data.service.created_at | datetime | Service creation timestamp |\n| data.service.mode | array | Modes of the service (`in-clinic`, etc.) |\n| data.service.price | number | Service price (nullable) |\n| data.service.post_pay | boolean | Indicates if post-payment is allowed |\n| data.service.service_name | string | Name of the service |\n| data.service.book_ahead_days | number | Number of days ahead the service can be booked |\n| data.service.appointment_type | enum | Type of appointment (`REGULAR`, etc.) |\n| data.service.allow_patient_booking | boolean | Indicates if patient booking is allowed |",
        "operationId": "GetAppointmentDetails",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{x-api-key}}"
            }
          },
          {
            "name": "appointment_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string"
                },
                "example": "Sun, 12 Apr 2020 11:09:57 GMT"
              },
              "Content-Length": {
                "schema": {
                  "type": "string"
                },
                "example": "377"
              },
              "Connection": {
                "schema": {
                  "type": "string"
                },
                "example": "keep-alive"
              },
              "Server": {
                "schema": {
                  "type": "string"
                },
                "example": "nginx/1.10.3 (Ubuntu)"
              },
              "Vary": {
                "schema": {
                  "type": "string"
                },
                "example": "Cookie, Accept-Encoding"
              },
              "Content-Encoding": {
                "schema": {
                  "type": "string"
                },
                "example": "gzip"
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string"
                },
                "example": "max-age=15768000"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "aid": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "doctor_oid": {
                          "type": "string"
                        },
                        "patient_oid": {
                          "type": "string"
                        },
                        "clinic_id": {
                          "type": "string"
                        },
                        "channel": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "start_time": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "end_time": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "visit_checkin": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "visit_start": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "visit_end": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "stage": {
                          "type": "string"
                        },
                        "visit-type": {
                          "type": "string"
                        },
                        "payment": {
                          "type": "object",
                          "properties": {
                            "payment_id": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "payment_status": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "amount": {
                              "type": [
                                "number",
                                "null"
                              ]
                            }
                          }
                        },
                        "prescription_id": {
                          "type": "string"
                        },
                        "service": {
                          "type": "object",
                          "properties": {
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "mode": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "price": {
                              "type": [
                                "number",
                                "null"
                              ]
                            },
                            "post_pay": {
                              "type": "boolean"
                            },
                            "service_name": {
                              "type": "string"
                            },
                            "book_ahead_days": {
                              "type": "integer"
                            },
                            "appointment_type": {
                              "type": "string"
                            },
                            "allow_patient_booking": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "data": {
                      "aid": "example_appointment_id",
                      "created_at": "2023-07-30T18:07:24.000Z",
                      "doctor_oid": "example_doctor_id",
                      "patient_oid": "example_patient_id",
                      "clinic_id": "example_clinic_id",
                      "channel": "Offline",
                      "status": "CM",
                      "start_time": "2023-07-24T15:41:41.000Z",
                      "end_time": "2023-07-24T15:46:41.000Z",
                      "visit_checkin": "2023-07-30T12:37:24.000Z",
                      "visit_start": "2023-07-24T15:41:41.000Z",
                      "visit_end": "2023-07-24T15:46:41.000Z",
                      "stage": "COMPLETED",
                      "visit-type": "WALKIN",
                      "payment": {
                        "payment_id": null,
                        "payment_status": null,
                        "amount": null
                      },
                      "prescription_id": "example_rx_id",
                      "service": {
                        "created_at": "2022-01-01T00:00:00.000Z",
                        "mode": [
                          "in-clinic"
                        ],
                        "price": null,
                        "post_pay": false,
                        "service_name": "consultation",
                        "book_ahead_days": 21,
                        "appointment_type": "REGULAR",
                        "allow_patient_booking": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/business/doctor/appointments/{appointment_id}/cancel": {
      "put": {
        "tags": [
          "Appointment API"
        ],
        "summary": "Cancel Appointment",
        "description": "## Cancel Appointment API\n\n### Overview\n\nThis API endpoint is used to cancel an existing appointment.\n\n### Endpoint\n\n**URL:** `{{HOST}}/v2`/business/doctor/appointments/`{appointment_id}/cancel`  \n**Method:** PUT\n\n### Request Parameters\n\n| Parameter | Type | Description | Required |\n| --- | --- | --- | --- |\n| appointment_id | string | Unique identifier for the appointment | Yes |\n\n### Request Headers\n\n| Header | Type | Description | Required |\n| --- | --- | --- | --- |\n| Content-Type | string | `application/json` | Yes |\n| Authorization | string | Bearer {YOUR_API_KEY} | Yes |\n\n### Sample Request\n\n``` bash\ncurl --location --request PUT '{{HOST}}/appointment/{{appointment_id}}/cancel' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer {YOUR_API_KEY}'\n\n ```",
        "operationId": "CancelAppointment",
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Thu, 16 Apr 2020 08:47:12 GMT"
                  }
                }
              },
              "Transfer-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "chunked"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"data\": {\n        \"message\": \"Appointment has been cancelled\",\n        \"appointment_id\": {{appointment_id}}\n    }\n}"
                },
                "example": "{\n    \"data\": {\n        \"message\": \"Appointment has been cancelled\",\n        \"appointment_id\": {{appointment_id}}\n    }\n}"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/business/appointments/patient/{patient_id}": {
      "get": {
        "tags": [
          "Appointment API"
        ],
        "summary": "Get all appointments for profile",
        "operationId": "Getallappointmentsforprofile",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{x-api-key}}"
            }
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"success\": true,\n    \"data\": [\n        {\n        \"aid\": {{appointment_id}},\n        \"created_at\": \"2023-07-30T18:07:24.000Z\",\n        \"doctor_id\": {{doctor_id}},\n        \"patient_id\": {{patient_id}},\n        \"clinic_id\": {{clinic_id}},\n        \"channel\": \"Offline\",\n        \"status\": \"CM\",\n        \"start_time\": \"2023-07-24T15:41:41.000Z\",\n        \"end_time\": \"2023-07-24T15:46:41.000Z\",\n        \"visit_checkin\": \"2023-07-30T12:37:24.000Z\",\n        \"visit_start\": \"2023-07-24T15:41:41.000Z\",\n        \"visit_end\": \"2023-07-24T15:46:41.000Z\",\n        \"stage\": \"COMPLETED\",\n        \"visit-type\": \"WALKIN\",\n        \"payment\": {\n            \"payment_id\": null,\n            \"payment_status\": null,\n            \"amount\": null\n        },\n        \"prescription_id\": {{rx_id}},\n        \"service\": [{\n            \"created_at\": \"2022-01-01T00:00:00.000Z\",\n            \"mode\": [\n                \"in-clinic\"\n            ],\n            \"price\": null,\n            \"post_pay\": false,\n            \"service_name\": \"consultation\",\n            \"book_ahead_days\": 21,\n            \"appointment_type\": \"REGULAR\",\n            \"allow_patient_booking\": true\n        }]\n    },\n    {\n        \"aid\": {{appointment_id}},\n        \"created_at\": \"2023-07-30T18:07:24.000Z\",\n        \"doctor_id\": {{doctor_id}},\n        \"patient_id\": {{patient_id}},\n        \"clinic_id\": {{clinic_id}},\n        \"channel\": \"Offline\",\n        \"status\": \"CM\",\n        \"start_time\": \"2023-07-24T15:41:41.000Z\",\n        \"end_time\": \"2023-07-24T15:46:41.000Z\",\n        \"visit_checkin\": \"2023-07-30T12:37:24.000Z\",\n        \"visit_start\": \"2023-07-24T15:41:41.000Z\",\n        \"visit_end\": \"2023-07-24T15:46:41.000Z\",\n        \"stage\": \"COMPLETED\",\n        \"visit-type\": \"WALKIN\",\n        \"payment\": {\n            \"payment_id\": null,\n            \"payment_status\": null,\n            \"amount\": null\n        },\n        \"prescription_id\": {{rx_id}},\n        \"service\": [{\n            \"created_at\": \"2022-01-01T00:00:00.000Z\",\n            \"mode\": [\n                \"in-clinic\"\n            ],\n            \"price\": null,\n            \"post_pay\": false,\n            \"service_name\": \"consultation\",\n            \"book_ahead_days\": 21,\n            \"appointment_type\": \"REGULAR\",\n            \"allow_patient_booking\": true\n        }]\n    }\n    ]\n}"
                },
                "example": "{\n    \"success\": true,\n    \"data\": [\n        {\n        \"aid\": {{appointment_id}},\n        \"created_at\": \"2023-07-30T18:07:24.000Z\",\n        \"doctor_id\": {{doctor_id}},\n        \"patient_id\": {{patient_id}},\n        \"clinic_id\": {{clinic_id}},\n        \"channel\": \"Offline\",\n        \"status\": \"CM\",\n        \"start_time\": \"2023-07-24T15:41:41.000Z\",\n        \"end_time\": \"2023-07-24T15:46:41.000Z\",\n        \"visit_checkin\": \"2023-07-30T12:37:24.000Z\",\n        \"visit_start\": \"2023-07-24T15:41:41.000Z\",\n        \"visit_end\": \"2023-07-24T15:46:41.000Z\",\n        \"stage\": \"COMPLETED\",\n        \"visit-type\": \"WALKIN\",\n        \"payment\": {\n            \"payment_id\": null,\n            \"payment_status\": null,\n            \"amount\": null\n        },\n        \"prescription_id\": {{rx_id}},\n        \"service\": [{\n            \"created_at\": \"2022-01-01T00:00:00.000Z\",\n            \"mode\": [\n                \"in-clinic\"\n            ],\n            \"price\": null,\n            \"post_pay\": false,\n            \"service_name\": \"consultation\",\n            \"book_ahead_days\": 21,\n            \"appointment_type\": \"REGULAR\",\n            \"allow_patient_booking\": true\n        }]\n    },\n    {\n        \"aid\": {{appointment_id}},\n        \"created_at\": \"2023-07-30T18:07:24.000Z\",\n        \"doctor_id\": {{doctor_id}},\n        \"patient_id\": {{patient_id}},\n        \"clinic_id\": {{clinic_id}},\n        \"channel\": \"Offline\",\n        \"status\": \"CM\",\n        \"start_time\": \"2023-07-24T15:41:41.000Z\",\n        \"end_time\": \"2023-07-24T15:46:41.000Z\",\n        \"visit_checkin\": \"2023-07-30T12:37:24.000Z\",\n        \"visit_start\": \"2023-07-24T15:41:41.000Z\",\n        \"visit_end\": \"2023-07-24T15:46:41.000Z\",\n        \"stage\": \"COMPLETED\",\n        \"visit-type\": \"WALKIN\",\n        \"payment\": {\n            \"payment_id\": null,\n            \"payment_status\": null,\n            \"amount\": null\n        },\n        \"prescription_id\": {{rx_id}},\n        \"service\": [{\n            \"created_at\": \"2022-01-01T00:00:00.000Z\",\n            \"mode\": [\n                \"in-clinic\"\n            ],\n            \"price\": null,\n            \"post_pay\": false,\n            \"service_name\": \"consultation\",\n            \"book_ahead_days\": 21,\n            \"appointment_type\": \"REGULAR\",\n            \"allow_patient_booking\": true\n        }]\n    }\n    ]\n}"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/prescription/{rx_id}": {
      "get": {
        "tags": [
          "Prescription API"
        ],
        "summary": "Get Prescription details",
        "description": "This API can be used to fetch details of a prescription created by doctor.\n\n**Response Parameters**\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | object | Response data object |\n| data.rx_id | string | Prescription ID |\n| data.visit_id | string | Appointment ID |\n| data.created_at | datetime | Timestamp when the prescription was created |\n| data.doctor | object | Object containing doctor details |\n| data.doctor.id | string | Doctor ID |\n| data.patient | object | Object containing patient details |\n| data.patient.id | string | Patient ID |\n| data.selected_clinic | string | Selected clinic ID |\n| data.rx_url | string | URL to the prescription |\n| data.visit_name | string | Name of the visit |\n| data.rx_entities | object | Object containing prescription entities |\n| data.rx_entities.symptoms | array | Array of symptoms |\n| data.rx_entities.symptoms\\[\\].id | string | Symptom ID |\n| data.rx_entities.symptoms\\[\\].name | string | Name of the symptom |\n| data.rx_entities.symptoms\\[\\].properties | object | Object containing properties of the symptom |\n| data.rx_entities.symptoms\\[\\].properties.since | string | Duration since the symptom started |\n| data.rx_entities.symptoms\\[\\].properties.severity | string | Severity of the symptom |\n| data.rx_entities.symptoms\\[\\].properties.abc | string | Additional property of the symptom |\n| data.rx_entities.diagnosis | array | Array of diagnoses |\n| data.rx_entities.diagnosis\\[\\].id | string | Diagnosis ID |\n| data.rx_entities.diagnosis\\[\\].name | string | Name of the diagnosis |\n| data.rx_entities.medications | array | Array of medications |\n| data.rx_entities.medications\\[\\].name | string | Name of the medication |\n| data.rx_entities.medications\\[\\].id | string | Medication ID |\n| data.rx_entities.medications\\[\\].dosage_form | string | Dosage form of the medication |\n| data.rx_entities.medications\\[\\].frequency | string | Frequency of the medication |\n| data.rx_entities.medications\\[\\].duration | string | Duration for which the medication should be taken |\n| data.rx_entities.medications\\[\\].timing | string | Timing of the medication |\n| data.rx_entities.medications\\[\\].instruction | string | Instruction for taking the medication |\n| data.rx_entities.medications\\[\\].dose | string | Dose of the medication |\n| data.rx_entities.medications\\[\\].generic_name | string | Generic name of the medication |\n| data.rx_entities.medications\\[\\].tapering_dose | array | Array of tapering doses for the medication |\n| data.rx_entities.labTests | array | Array of lab tests |\n| data.rx_entities.labTests\\[\\].id | string | Lab test ID |\n| data.rx_entities.labTests\\[\\].name | string | Name of the lab test |\n| data.rx_entities.labTests\\[\\].partner_id | string | Partner ID for the lab test |\n| data.rx_entities.labTests\\[\\].remark | string | Remark for the lab test |\n\n**Status codes**\n\n• 200: Success  \n• 403: Forbidden  \n• 404: Rx id/Business data missing  \n• 500: Wrong API URL/Wrong JSON request/ Something went wrong",
        "operationId": "GetPrescriptiondetails",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{x-api-key}}"
            }
          },
          {
            "name": "rx_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sun, 12 Apr 2020 11:09:57 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "377"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Cookie, Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n  \"data\": {\n    \"rx_id\": {{rx_id}},\n    \"visit_id\": {{appointment_id}},\n    \"created_at\": \"2024-03-08T05:50:37.059Z\",\n    \"doctor\": {\n      \"id\": {{doctor_id}}\n    },\n    \"patient\": {\n      \"id\": {{patient_id}}\n    },\n    \"selected_clinic\": {{clinic_id}},\n    \"rx_url\": \"url\",\n    \"visit_name\": \"Febrile illness, Dengue L\",\n    \"rx_entities\": {\n      \"symptoms\": [\n        {\n          \"id\": \"id-123\",\n          \"name\": \"Fever With Chills\",\n          \"properties\": {\n            \"since\": \"5 days\",\n            \"severity\": \"high\",\n            \"abc\": \"xyz\"\n          }\n        }\n      ],\n      \"diagnosis\": [\n        {\n          \"id\": \"id-2345\",\n          \"name\": \"Febrile illness\"\n        }\n      ],\n      \"medications\": [\n        {\n          \"name\": \"Dolo 650\",\n          \"id\": \"id-678\",\n          \"dosage_form\": \"tablet\",\n          \"frequency\": \"1-1-1\",\n          \"duration\": \"5 Days\",\n          \"timing\": \"After Meal\",\n          \"instruction\": \"drink with water\",\n          \"dose\": \"1 tablet\",\n          \"generic_name\": \"Paracetamol (650mg)\",\n          \"tapering_dose\": [\n            \n          ]\n        }\n      ],\n      \"labTests\": [\n        {\n          \"id\": \"id-888\",\n          \"name\": \"Complete Blood Count (CBC)\",\n          \"partner_id\": \"MP0101\",\n          \"remark\": null\n        }\n      ],\n      \"speciality\" : {\n        \"opthal_readings\": {\n            \"refraction\": {\n            \"rightEye\": {\n                \"spherical\": -2.25,\n                \"cylindrical\": -0.75,\n                \"axis\": 180,\n                \"addPower\": 2.00\n            },\n            \"leftEye\": {\n                \"spherical\": -2.00,\n                \"cylindrical\": -0.50,\n                \"axis\": 175,\n                \"addPower\": 2.00\n            }\n            },\n            \"ipd\": {\n            \"distance\": 62,\n            \"near\": 59\n            },\n            \"lensAdvised\": {\n            \"type\": \"Progressive\",\n            \"material\": \"Polycarbonate\",\n            \"coatings\": [\n                \"Anti-reflective\",\n                \"Blue light filter\"\n            ]\n            },\n            \"glassAdvised\": {\n            \"frame\": \"Metal\",\n            \"style\": \"Full rim\",\n            \"size\": \"Medium\"\n            }\n        }\n      }\n    }\n  }\n}"
                },
                "example": "{\n  \"data\": {\n    \"rx_id\": {{rx_id}},\n    \"visit_id\": {{appointment_id}},\n    \"created_at\": \"2024-03-08T05:50:37.059Z\",\n    \"doctor\": {\n      \"id\": {{doctor_id}}\n    },\n    \"patient\": {\n      \"id\": {{patient_id}}\n    },\n    \"selected_clinic\": {{clinic_id}},\n    \"rx_url\": \"url\",\n    \"visit_name\": \"Febrile illness, Dengue L\",\n    \"rx_entities\": {\n      \"symptoms\": [\n        {\n          \"id\": \"id-123\",\n          \"name\": \"Fever With Chills\",\n          \"properties\": {\n            \"since\": \"5 days\",\n            \"severity\": \"high\",\n            \"abc\": \"xyz\"\n          }\n        }\n      ],\n      \"diagnosis\": [\n        {\n          \"id\": \"id-2345\",\n          \"name\": \"Febrile illness\"\n        }\n      ],\n      \"medications\": [\n        {\n          \"name\": \"Dolo 650\",\n          \"id\": \"id-678\",\n          \"dosage_form\": \"tablet\",\n          \"frequency\": \"1-1-1\",\n          \"duration\": \"5 Days\",\n          \"timing\": \"After Meal\",\n          \"instruction\": \"drink with water\",\n          \"dose\": \"1 tablet\",\n          \"generic_name\": \"Paracetamol (650mg)\",\n          \"tapering_dose\": [\n            \n          ]\n        }\n      ],\n      \"labTests\": [\n        {\n          \"id\": \"id-888\",\n          \"name\": \"Complete Blood Count (CBC)\",\n          \"partner_id\": \"MP0101\",\n          \"remark\": null\n        }\n      ],\n      \"speciality\" : {\n        \"opthal_readings\": {\n            \"refraction\": {\n            \"rightEye\": {\n                \"spherical\": -2.25,\n                \"cylindrical\": -0.75,\n                \"axis\": 180,\n                \"addPower\": 2.00\n            },\n            \"leftEye\": {\n                \"spherical\": -2.00,\n                \"cylindrical\": -0.50,\n                \"axis\": 175,\n                \"addPower\": 2.00\n            }\n            },\n            \"ipd\": {\n            \"distance\": 62,\n            \"near\": 59\n            },\n            \"lensAdvised\": {\n            \"type\": \"Progressive\",\n            \"material\": \"Polycarbonate\",\n            \"coatings\": [\n                \"Anti-reflective\",\n                \"Blue light filter\"\n            ]\n            },\n            \"glassAdvised\": {\n            \"frame\": \"Metal\",\n            \"style\": \"Full rim\",\n            \"size\": \"Medium\"\n            }\n        }\n      }\n    }\n  }\n}"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/": {
      "post": {
        "tags": [
          "Appointment Webhooks"
        ],
        "summary": "Appointment Webhooks",
        "description": "This webhook is triggered once _a raised appointment is confirmed from the organization for which integration is configured_.\n\nWhen an appointment is created, a webhook event is sent to registered webhooks with details about the appointment, including the appointment ID, doctor ID, patient ID, and event type.\n\n**Example Webhook Event Payload**\n\n``` json\n{\n  \"event\": \"appointment.created\",\n  \"data\": {\n    \"appointment_id\": \"12345-abcde-67890-fghij\",\n    \"doctor_id\": \"98765-zyxwv-43210-utsrq\",\n    \"patient_id\": \"54321-lkjhg-09876-mnbvc\",\n    \"event_type\": \"appointment.created\",\n    \"timestamp\": \"2024-06-28T10:30:00Z\"\n  }\n}\n\n ```\n\n**Field Definitions**\n\n• **event**: string - The type of event. For appointment creation, this will be \"appointment.created\".\n\n• **data**: object - Contains detailed information about the appointment event.\n\n• **appointment_id**: string - Unique identifier for the appointment.\n\n• **doctor_id**: string - Unique identifier for the doctor.\n\n• **patient_id**: string - Unique identifier for the patient.\n\n• **event_type**: string - Type of the event. For this event, it will be \"appointment.created\".\n\n• **timestamp**: string (ISO 8601) - The date and time when the event occurred.\n\n**Example Webhook Request**\n\n**Endpoint:** [https://your-registered-webhook-url.com](https://your-registered-webhook-url.com)\n\n**Method:** POST",
        "operationId": "AppointmentConfirmed",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": "{\n  \"event_type\": \"appointment_created\",\n  \"data\": {\n    \"appointment_id\": {{appointment_id}},\n    \"doctor_id\":{{doctor_id}},\n    \"patient_id\": {{patient_id}},\n    \"client_meta\" : {\n        \"visit_id\" : {{visit_id}}\n    },\n    \"created_at\" : \"2023-07-30T18:07:24.000Z\"\n  }\n}"
              },
              "example": "{\n  \"event_type\": \"appointment_created\",\n  \"data\": {\n    \"appointment_id\": {{appointment_id}},\n    \"doctor_id\":{{doctor_id}},\n    \"patient_id\": {{patient_id}},\n    \"client_meta\" : {\n        \"visit_id\" : {{visit_id}}\n    },\n    \"created_at\" : \"2023-07-30T18:07:24.000Z\"\n  }\n}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/doctor/appointments/{appointment_id}": {
      "get": {
        "tags": [
          "Appointment Webhooks"
        ],
        "summary": "Get Appointment Details",
        "description": "## Get Appointment Details by ID API\n\n### Overview\n\nThis API endpoint is used to retrieve the details of an appointment using its unique identifier. The response includes comprehensive information about the appointment, including patient and doctor details, appointment status, and related services.\n\n### Endpoint\n\n**URL:** `http://HOST/v1/appointment/{appointment_id}`  \n**Method:** GET\n\n### Request Parameters\n\n| Parameter | Type | Description | Required |\n| --- | --- | --- | --- |\n| appointment_id | string | Unique identifier for the appointment | Yes |\n\n### Response Parameters\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | object | Response data object |\n| data.appointment_id | string | Unique identifier for the appointment |\n| data.created_at | datetime | Appointment creation timestamp |\n| data.doctor_oid | string | Unique identifier for the doctor |\n| data.patient_oid | string | Unique identifier for the patient |\n| data.clinic_id | string | Unique identifier for the clinic |\n| data.channel | enum | Channel of the appointment (`Offline` or `Online`) |\n| data.status | enum | Appointment status (`CM`, `IN`, `CMNP`, etc.) |\n| data.start_time | datetime | Start time of the appointment |\n| data.end_time | datetime | End time of the appointment |\n| data.visit_checkin | datetime | Check-in time for the visit |\n| data.visit_start | datetime | Start time for the visit |\n| data.visit_end | datetime | End time for the visit |\n| data.stage | enum | Stage of the appointment (`COMPLETED`, etc.) |\n| data.visit-type | enum | Type of visit (`WALKIN`, etc.) |\n| data.payment | object | Payment details |\n| data.payment.payment_id | string | Payment ID (nullable) |\n| data.payment.payment_status | enum | Payment status (nullable) |\n| data.payment.amount | number | Payment amount (nullable) |\n| data.prescription_id | string | Unique identifier for the prescription |\n| data.service | object | Service details |\n| data.service.created_at | datetime | Service creation timestamp |\n| data.service.mode | array | Modes of the service (`in-clinic`, etc.) |\n| data.service.price | number | Service price (nullable) |\n| data.service.archive | boolean | Archive status of the service |\n| data.service.eka_fee | number | Eka fee for the service (nullable) |\n| data.service.pre_pay | boolean | Indicates if pre-payment is allowed |\n| data.service.conv_fee | number | Convenience fee for the service |\n| data.service.currency | string | Currency code (`INR`) |\n| data.service.duration | number | Duration of the service in minutes |\n| data.service.post_pay | boolean | Indicates if post-payment is allowed |\n| data.service.service_id | number | Service ID |\n| data.service.service_name | string | Name of the service |\n| data.service.book_ahead_days | number | Number of days ahead the service can be booked |\n| data.service.appointment_type | enum | Type of appointment (`REGULAR`, etc.) |\n| data.service.followup_validity | number | Validity period for follow-up (nullable) |\n| data.service.allow_patient_booking | boolean | Indicates if patient booking is allowed |\n| data.patient | object | Patient details |\n| data.patient.patient_oid | string | Unique identifier for the patient |\n| data.patient.designation | string | Patient's designation |\n| data.patient.first_name | string | Patient's first name |\n| data.patient.middle_name | string | Patient's middle name |\n| data.patient.lastName | string | Patient's last name |\n| data.patient.dob | date | Patient's date of birth |\n| data.patient.age | number | Patient's age |\n| data.patient.mobile | string | Patient's mobile number |\n| data.patient.gender | string | Patient's gender |\n| data.patient.email | string | Patient's email address |\n| data.patient.UHID | string | Unique Health ID |\n| data.patient.address | object | Patient's address |\n| data.patient.address.city | string | City of the patient |\n| data.patient.address.line1 | string | Address line 1 |\n| data.patient.address.line2 | string | Address line 2 |\n| data.patient.address.pincode | number | Pincode of the patient |\n| data.patient.address.state | string | State of the patient |\n| data.patient.address.country | string | Country of the patient |\n| data.patient.metadata | object | Patient metadata |\n| data.patient.metadata.blood_group | string | Patient's blood group |\n| data.patient.metadata.aadhar_number | string | Patient's Aadhar number |\n| data.patient.metadata.notes | string | Notes about the patient |\n| data.doctor | object | Doctor details |\n| data.doctor.doc_id | string | Unique identifier for the doctor |\n| data.doctor.created_at | datetime | Doctor profile creation timestamp |\n| data.doctor.profile | object | Doctor's profile details |\n| data.doctor.profile.personal | object | Personal details of the doctor |\n| data.doctor.profile.personal.designation | string | Designation (e.g., Dr.) |\n| data.doctor.profile.personal.first_name | string | First name of the doctor |\n| data.doctor.profile.personal.middle_name | string | Middle name of the doctor |\n| data.doctor.profile.personal.last_name | string | Last name of the doctor |\n| data.doctor.profile.personal.email | string | Email address of the doctor |\n| data.doctor.profile.personal.gender | string | Gender of the doctor |\n| data.doctor.profile.personal.dob | date | Date of birth of the doctor |\n| data.doctor.profile.personal.pic | string | URL of the doctor's profile picture |",
        "operationId": "GetAppointmentDetails",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "{{x-api-key}}"
            }
          },
          {
            "name": "appointment_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sun, 12 Apr 2020 11:09:57 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "377"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nginx/1.10.3 (Ubuntu)"
                  }
                }
              },
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Cookie, Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=15768000"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"data\": {\n        \"aid\": {{appointment_id}},\n        \"created_at\": \"2023-07-30T18:07:24.000Z\",\n        \"doctor_id\": {{doctor_id}},\n        \"patient_id\": {{patient_id}},\n        \"clinic_id\": {{clinic_id}},\n        \"channel\": \"Offline\",\n        \"status\": \"CM\",\n        \"start_time\": \"2023-07-24T15:41:41.000Z\",\n        \"end_time\": \"2023-07-24T15:46:41.000Z\",\n        \"visit_checkin\": \"2023-07-30T12:37:24.000Z\",\n        \"visit_start\": \"2023-07-24T15:41:41.000Z\",\n        \"visit_end\": \"2023-07-24T15:46:41.000Z\",\n        \"stage\": \"COMPLETED\",\n        \"visit-type\": \"WALKIN\",\n        \"payment\": {\n            \"payment_id\": null,\n            \"payment_status\": null,\n            \"amount\": null\n        },\n        \"prescription_id\": {{rx_id}},\n        \"service\": {\n            \"created_at\": \"2022-01-01T00:00:00.000Z\",\n            \"mode\": [\n                \"in-clinic\"\n            ],\n            \"price\": null,\n            \"post_pay\": false,\n            \"service_name\": \"consultation\",\n            \"book_ahead_days\": 21,\n            \"appointment_type\": \"REGULAR\",\n            \"allow_patient_booking\": true\n        }\n    }\n}"
                },
                "example": "{\n    \"data\": {\n        \"aid\": {{appointment_id}},\n        \"created_at\": \"2023-07-30T18:07:24.000Z\",\n        \"doctor_id\": {{doctor_id}},\n        \"patient_id\": {{patient_id}},\n        \"clinic_id\": {{clinic_id}},\n        \"channel\": \"Offline\",\n        \"status\": \"CM\",\n        \"start_time\": \"2023-07-24T15:41:41.000Z\",\n        \"end_time\": \"2023-07-24T15:46:41.000Z\",\n        \"visit_checkin\": \"2023-07-30T12:37:24.000Z\",\n        \"visit_start\": \"2023-07-24T15:41:41.000Z\",\n        \"visit_end\": \"2023-07-24T15:46:41.000Z\",\n        \"stage\": \"COMPLETED\",\n        \"visit-type\": \"WALKIN\",\n        \"payment\": {\n            \"payment_id\": null,\n            \"payment_status\": null,\n            \"amount\": null\n        },\n        \"prescription_id\": {{rx_id}},\n        \"service\": {\n            \"created_at\": \"2022-01-01T00:00:00.000Z\",\n            \"mode\": [\n                \"in-clinic\"\n            ],\n            \"price\": null,\n            \"post_pay\": false,\n            \"service_name\": \"consultation\",\n            \"book_ahead_days\": 21,\n            \"appointment_type\": \"REGULAR\",\n            \"allow_patient_booking\": true\n        }\n    }\n}"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/business/doctor/prescription/{rx_id}": {
      "get": {
        "tags": [
          "Prescription Webhooks"
        ],
        "summary": "Get prescription details",
        "description": "The Prescription API allows a business to manage prescriptions, including retrieving details of a specific prescription.\n\n**Retrieve Prescription Details**\n\nRetrieve details of a specific prescription using the prescription ID.\n\n**Endpoint:** {{HOST}}/v1/business/prescription/{{rx_id}}\n\n**Method:** GET\n\n**Request Parameters:**\n\n• **rx_id**: The unique identifier for the prescription.\n",
        "operationId": "Getprescriptiondetails",
        "parameters": [
          {
            "name": "rx_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\n    \"data\": {\n        \"rx_id\": {{rx_id}},\n        \"visit_id\": {{appointment_id}},\n        \"date\": \"2024-03-08T05:50:37.059Z\",\n        \"doctor\": {\n            \"id\": {{doctor_id}}\n        },\n        \"patient\": {\n            \"id\": {{patient_id}}\n        },\n        \"selected_clinic\": {{clinic_id}},\n        \"rx_url\": \"url\",\n        \"visit_name\": \"Febrile illness, Dengue L\",\n        \"rx_entities\": {\n            \"symptoms\": [\n                {\n                    \"id\": \"id-123\",\n                    \"name\": \"Fever With Chills\",\n                    \"properties\": {\n                        \"since\": \"5 days\",\n                        \"severity\": \"high\",\n                        \"abc\": \"xyz\"\n                    }\n                }\n            ],\n            \"diagnosis\": [\n                {\n                    \"id\": \"id-2345\",\n                    \"name\": \"Febrile illness\"\n                }\n            ],\n            \"medications\": [\n                {\n                    \"name\": \"Dolo 650\",\n                    \"id\": \"id-678\",\n                    \"dosage_form\": \"tablet\",\n                    \"frequency\": \"1-1-1\",\n                    \"duration\": \"5 Days\",\n                    \"timing\": \"After Meal\",\n                    \"instruction\": \"drink with water\",\n                    \"dose\": \"1 tablet\",\n                    \"generic_name\": \"Paracetamol (650mg)\",\n                    \"tapering_dose\": []\n                }\n            ],\n            \"labTests\": [\n                {\n                    \"id\": \"id-888\",\n                    \"name\": \"Complete Blood Count (CBC)\",\n                    \"partner_id\": \"MP0101\",\n                    \"remark\": null\n                }\n            ]\n        }\n    }\n}"
                },
                "example": "{\n    \"data\": {\n        \"rx_id\": {{rx_id}},\n        \"visit_id\": {{appointment_id}},\n        \"date\": \"2024-03-08T05:50:37.059Z\",\n        \"doctor\": {\n            \"id\": {{doctor_id}}\n        },\n        \"patient\": {\n            \"id\": {{patient_id}}\n        },\n        \"selected_clinic\": {{clinic_id}},\n        \"rx_url\": \"url\",\n        \"visit_name\": \"Febrile illness, Dengue L\",\n        \"rx_entities\": {\n            \"symptoms\": [\n                {\n                    \"id\": \"id-123\",\n                    \"name\": \"Fever With Chills\",\n                    \"properties\": {\n                        \"since\": \"5 days\",\n                        \"severity\": \"high\",\n                        \"abc\": \"xyz\"\n                    }\n                }\n            ],\n            \"diagnosis\": [\n                {\n                    \"id\": \"id-2345\",\n                    \"name\": \"Febrile illness\"\n                }\n            ],\n            \"medications\": [\n                {\n                    \"name\": \"Dolo 650\",\n                    \"id\": \"id-678\",\n                    \"dosage_form\": \"tablet\",\n                    \"frequency\": \"1-1-1\",\n                    \"duration\": \"5 Days\",\n                    \"timing\": \"After Meal\",\n                    \"instruction\": \"drink with water\",\n                    \"dose\": \"1 tablet\",\n                    \"generic_name\": \"Paracetamol (650mg)\",\n                    \"tapering_dose\": []\n                }\n            ],\n            \"labTests\": [\n                {\n                    \"id\": \"id-888\",\n                    \"name\": \"Complete Blood Count (CBC)\",\n                    \"partner_id\": \"MP0101\",\n                    \"remark\": null\n                }\n            ]\n        }\n    }\n}"
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "AuthLoginRequest": {
        "title": "AuthLoginRequest",
        "required": [
          "client_id",
          "client_secret"
        ],
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          }
        },
        "example": {
          "client_id": "testing",
          "client_secret": "4440ffe2-07e4-3364-a162-887f7652ae5d"
        }
      },
      "AuthLogin": {
        "title": "AuthLogin",
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        },
        "example": {
          "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI010101.eyJleHAiOjE3MjMxMTE3MDYsImlhdCI6MTcyMzEwOTkwNiwiYy1pZCI6InRlc3RpbmcifQ.RqiPmu983VyW8jm1RFW-UrW3m14ZezKqXfBzkKl80"
        }
      },
      "200Success": {
        "title": "200Success",
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        },
        "example": {
          "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjMxMTE3MDYsImlhdCI6MTcyMzEwOTkwNiwiYy1pZCI6InRlc3RpbmcifQ.RqiPmu983VyW8jm1RFW-UrW3m14ZezKqXfBTkElsoPG"
        }
      },
      "200OK": {
        "title": "200OK",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "example": {
          "data": {
            "patient_oid": "123456789",
            "profile": {
              "id": "123456789",
              "created_at": "2024-06-12T21:55:51.593Z",
              "updated_at": "2024-06-17T09:52:55.257Z"
            }
          }
        }
      },
      "Data": {
        "title": "Data",
        "required": [
          "patient_oid",
          "profile"
        ],
        "type": "object",
        "properties": {
          "patient_oid": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          }
        },
        "example": {
          "patient_oid": "123456789",
          "profile": {
            "id": "123456789",
            "created_at": "2024-06-12T21:55:51.593Z",
            "updated_at": "2024-06-17T09:52:55.257Z"
          }
        }
      },
      "Profile": {
        "title": "Profile",
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "example": {
          "id": "123456789",
          "created_at": "2024-06-12T21:55:51.593Z",
          "updated_at": "2024-06-17T09:52:55.257Z"
        }
      },
      "Error": {
        "title": "Error",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "code": "NOT_ALLOWED",
          "message": "You are not allowed to add resource"
        }
      },
      "403ForbiddenBusinessPatientDetailsMissing1": {
        "title": "403ForbiddenBusinessPatientDetailsMissing1",
        "required": [
          "data",
          "error"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "data": {},
          "error": {
            "code": "NOT_ALLOWED",
            "message": "You are not allowed to add resource"
          }
        }
      },
      "500WrongAPIURLTokenmismatchedWrongJSONrequest.1": {
        "title": "500WrongAPIURLTokenmismatchedWrongJSONrequest.1",
        "required": [
          "data",
          "error"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "data": {},
          "error": {
            "code": "INVALID_DATA",
            "message": "Data entered in incorrect"
          }
        }
      },
      "200OK1": {
        "title": "200OK1",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data1"
          }
        },
        "example": {
          "data": {
            "patient_oid": "123456789",
            "name": "Test Patient",
            "last_visit": "2024-06-06T10:56:50.468Z",
            "clinic_id": "12345678",
            "patient_profile": {
              "patient_oid": "123456789",
              "first_name": "Test",
              "middle_name": "",
              "last_name": "Patient",
              "dob": "1984-11-11",
              "email": "ekademo@gmail.com",
              "gen": "M",
              "mobile": "+919999999999",
              "created_at": "2021-03-19T13:15:26.318Z",
              "address": {
                "city": "Bangalore",
                "line1": "ABC",
                "line2": "XYZ",
                "pincode": 560049,
                "state": "Karnataka",
                "country": "India",
                "district": "Bangalore Urban"
              },
              "metadata": {
                "blood_group": "AB+",
                "aadhar_number": "12345",
                "notes": "Has a history of HTN",
                "father_name": "Test Father"
              }
            }
          }
        }
      },
      "Data1": {
        "title": "Data1",
        "required": [
          "patient_oid",
          "name",
          "last_visit",
          "clinic_id",
          "patient_profile"
        ],
        "type": "object",
        "properties": {
          "patient_oid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "last_visit": {
            "type": "string"
          },
          "clinic_id": {
            "type": "string"
          },
          "patient_profile": {
            "$ref": "#/components/schemas/PatientProfile"
          }
        },
        "example": {
          "patient_oid": "123456789",
          "name": "Test Patient",
          "last_visit": "2024-06-06T10:56:50.468Z",
          "clinic_id": "12345678",
          "patient_profile": {
            "patient_oid": "123456789",
            "first_name": "Test",
            "middle_name": "",
            "last_name": "Patient",
            "dob": "1984-11-11",
            "email": "ekademo@gmail.com",
            "gen": "M",
            "mobile": "+919999999999",
            "created_at": "2021-03-19T13:15:26.318Z",
            "address": {
              "city": "Bangalore",
              "line1": "ABC",
              "line2": "XYZ",
              "pincode": 560049,
              "state": "Karnataka",
              "country": "India",
              "district": "Bangalore Urban"
            },
            "metadata": {
              "blood_group": "AB+",
              "aadhar_number": "12345",
              "notes": "Has a history of HTN",
              "father_name": "Test Father"
            }
          }
        }
      },
      "PatientProfile": {
        "title": "PatientProfile",
        "required": [
          "patient_oid",
          "first_name",
          "middle_name",
          "last_name",
          "dob",
          "email",
          "gen",
          "mobile",
          "created_at",
          "address",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "patient_oid": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gen": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "example": {
          "patient_oid": "123456789",
          "first_name": "Test",
          "middle_name": "",
          "last_name": "Patient",
          "dob": "1984-11-11",
          "email": "ekademo@gmail.com",
          "gen": "M",
          "mobile": "+919999999999",
          "created_at": "2021-03-19T13:15:26.318Z",
          "address": {
            "city": "Bangalore",
            "line1": "ABC",
            "line2": "XYZ",
            "pincode": 560049,
            "state": "Karnataka",
            "country": "India",
            "district": "Bangalore Urban"
          },
          "metadata": {
            "blood_group": "AB+",
            "aadhar_number": "12345",
            "notes": "Has a history of HTN",
            "father_name": "Test Father"
          }
        }
      },
      "Address": {
        "title": "Address",
        "required": [
          "city",
          "line1",
          "line2",
          "pincode",
          "state",
          "country",
          "district"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "line1": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "pincode": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "district": {
            "type": "string"
          }
        },
        "example": {
          "city": "Bangalore",
          "line1": "ABC",
          "line2": "XYZ",
          "pincode": 560049,
          "state": "Karnataka",
          "country": "India",
          "district": "Bangalore Urban"
        }
      },
      "Metadata": {
        "title": "Metadata",
        "required": [
          "blood_group",
          "aadhar_number",
          "notes",
          "father_name"
        ],
        "type": "object",
        "properties": {
          "blood_group": {
            "type": "string"
          },
          "aadhar_number": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "father_name": {
            "type": "string"
          }
        },
        "example": {
          "blood_group": "AB+",
          "aadhar_number": "12345",
          "notes": "Has a history of HTN",
          "father_name": "Test Father"
        }
      },
      "200OK2": {
        "title": "200OK2",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data2"
          }
        },
        "example": {
          "data": {
            "patients": [
              {
                "patient_oid": "123456789",
                "name": "Test Patient",
                "last_visit": "2024-06-06T10:56:50.468Z",
                "clinic_id": "12345678",
                "patient_profile": {
                  "patient_oid": "123456789",
                  "first_name": "Test",
                  "middle_name": "",
                  "last_name": "Patient",
                  "dob": "1984-11-11",
                  "email": "ekademo@gmail.com",
                  "gen": "M",
                  "mobile": "+919999999999",
                  "created_at": "2021-03-19T13:15:26.318Z"
                }
              },
              {
                "patient_oid": "234567890",
                "name": "Test PT 2",
                "last_visit": null,
                "is_recent": false,
                "clinic_id": null,
                "patient_profile": {
                  "first_name": "Test",
                  "middle_name": "PT",
                  "last_name": "2",
                  "patient_oid": "234567890",
                  "email": "demo_test@eka.care",
                  "gen": "M",
                  "mobile": "+91999999999",
                  "dob": "1991-11-11",
                  "created_at": "2021-03-19T13:15:26318Z"
                }
              }
            ]
          }
        }
      },
      "Data2": {
        "title": "Data2",
        "required": [
          "patients"
        ],
        "type": "object",
        "properties": {
          "patients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Patient"
            },
            "description": ""
          }
        },
        "example": {
          "patients": [
            {
              "patient_oid": "123456789",
              "name": "Test Patient",
              "last_visit": "2024-06-06T10:56:50.468Z",
              "clinic_id": "12345678",
              "patient_profile": {
                "patient_oid": "123456789",
                "first_name": "Test",
                "middle_name": "",
                "last_name": "Patient",
                "dob": "1984-11-11",
                "email": "ekademo@gmail.com",
                "gen": "M",
                "mobile": "+919999999999",
                "created_at": "2021-03-19T13:15:26.318Z"
              }
            },
            {
              "patient_oid": "234567890",
              "name": "Test PT 2",
              "last_visit": null,
              "is_recent": false,
              "clinic_id": null,
              "patient_profile": {
                "first_name": "Test",
                "middle_name": "PT",
                "last_name": "2",
                "patient_oid": "234567890",
                "email": "demo_test@eka.care",
                "gen": "M",
                "mobile": "+91999999999",
                "dob": "1991-11-11",
                "created_at": "2021-03-19T13:15:26318Z"
              }
            }
          ]
        }
      },
      "Patient": {
        "title": "Patient",
        "required": [
          "patient_oid",
          "name",
          "last_visit",
          "clinic_id",
          "patient_profile"
        ],
        "type": "object",
        "properties": {
          "patient_oid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "last_visit": {
            "type": "string",
            "nullable": true
          },
          "clinic_id": {
            "type": "string",
            "nullable": true
          },
          "patient_profile": {
            "$ref": "#/components/schemas/PatientProfile1"
          },
          "is_recent": {
            "type": "boolean"
          }
        },
        "example": {
          "patient_oid": "123456789",
          "name": "Test Patient",
          "last_visit": "2024-06-06T10:56:50.468Z",
          "clinic_id": "12345678",
          "patient_profile": {
            "patient_oid": "123456789",
            "first_name": "Test",
            "middle_name": "",
            "last_name": "Patient",
            "dob": "1984-11-11",
            "email": "ekademo@gmail.com",
            "gen": "M",
            "mobile": "+919999999999",
            "created_at": "2021-03-19T13:15:26.318Z"
          }
        }
      },
      "PatientProfile1": {
        "title": "PatientProfile1",
        "required": [
          "patient_oid",
          "first_name",
          "middle_name",
          "last_name",
          "dob",
          "email",
          "gen",
          "mobile",
          "created_at"
        ],
        "type": "object",
        "properties": {
          "patient_oid": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gen": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        },
        "example": {
          "patient_oid": "123456789",
          "first_name": "Test",
          "middle_name": "",
          "last_name": "Patient",
          "dob": "1984-11-11",
          "email": "ekademo@gmail.com",
          "gen": "M",
          "mobile": "+919999999999",
          "created_at": "2021-03-19T13:15:26.318Z"
        }
      },
      "200OK3": {
        "title": "200OK3",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data3"
          }
        },
        "example": {
          "data": {
            "patients": [
              {
                "oid": "123456789",
                "name": "Test Patient",
                "last_visit": "2024-06-06T10:56:50.468Z",
                "clinic_id": "12345678",
                "patient_profile": {
                  "oid": "123456789",
                  "first_name": "Test",
                  "middle_name": "",
                  "last_name": "Patient",
                  "dob": "1984-11-11",
                  "email": "ekademo@gmail.com",
                  "gen": "M",
                  "mobile": "+919999999999",
                  "created_at": "2021-03-19T13:15:26.318Z"
                }
              },
              {
                "oid": "234567890",
                "name": "Test PT 2",
                "last_visit": null,
                "is_recent": false,
                "clinic_id": null,
                "patient_profile": {
                  "first_name": "Test",
                  "middle_name": "PT",
                  "last_name": "2",
                  "oid": "234567890",
                  "email": "demo_test@eka.care",
                  "gen": "M",
                  "mobile": "+91999999999",
                  "dob": "1991-11-11",
                  "created_at": "2021-03-19T13:15:26318Z"
                }
              }
            ]
          }
        }
      },
      "Data3": {
        "title": "Data3",
        "required": [
          "patients"
        ],
        "type": "object",
        "properties": {
          "patients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Patient1"
            },
            "description": ""
          }
        },
        "example": {
          "patients": [
            {
              "oid": "123456789",
              "name": "Test Patient",
              "last_visit": "2024-06-06T10:56:50.468Z",
              "clinic_id": "12345678",
              "patient_profile": {
                "oid": "123456789",
                "first_name": "Test",
                "middle_name": "",
                "last_name": "Patient",
                "dob": "1984-11-11",
                "email": "ekademo@gmail.com",
                "gen": "M",
                "mobile": "+919999999999",
                "created_at": "2021-03-19T13:15:26.318Z"
              }
            },
            {
              "oid": "234567890",
              "name": "Test PT 2",
              "last_visit": null,
              "is_recent": false,
              "clinic_id": null,
              "patient_profile": {
                "first_name": "Test",
                "middle_name": "PT",
                "last_name": "2",
                "oid": "234567890",
                "email": "demo_test@eka.care",
                "gen": "M",
                "mobile": "+91999999999",
                "dob": "1991-11-11",
                "created_at": "2021-03-19T13:15:26318Z"
              }
            }
          ]
        }
      },
      "Patient1": {
        "title": "Patient1",
        "required": [
          "oid",
          "name",
          "last_visit",
          "clinic_id",
          "patient_profile"
        ],
        "type": "object",
        "properties": {
          "oid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "last_visit": {
            "type": "string",
            "nullable": true
          },
          "clinic_id": {
            "type": "string",
            "nullable": true
          },
          "patient_profile": {
            "$ref": "#/components/schemas/PatientProfile2"
          },
          "is_recent": {
            "type": "boolean"
          }
        },
        "example": {
          "oid": "123456789",
          "name": "Test Patient",
          "last_visit": "2024-06-06T10:56:50.468Z",
          "clinic_id": "12345678",
          "patient_profile": {
            "oid": "123456789",
            "first_name": "Test",
            "middle_name": "",
            "last_name": "Patient",
            "dob": "1984-11-11",
            "email": "ekademo@gmail.com",
            "gen": "M",
            "mobile": "+919999999999",
            "created_at": "2021-03-19T13:15:26.318Z"
          }
        }
      },
      "PatientProfile2": {
        "title": "PatientProfile2",
        "required": [
          "oid",
          "first_name",
          "middle_name",
          "last_name",
          "dob",
          "email",
          "gen",
          "mobile",
          "created_at"
        ],
        "type": "object",
        "properties": {
          "oid": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gen": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        },
        "example": {
          "oid": "123456789",
          "first_name": "Test",
          "middle_name": "",
          "last_name": "Patient",
          "dob": "1984-11-11",
          "email": "ekademo@gmail.com",
          "gen": "M",
          "mobile": "+919999999999",
          "created_at": "2021-03-19T13:15:26.318Z"
        }
      },
      "UpdatePatientDetailsAPIRequest": {
        "title": "UpdatePatientDetailsAPIRequest",
        "required": [
          "firstName",
          "middleName",
          "lastName",
          "mobile",
          "email",
          "address",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address1"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata1"
          }
        },
        "example": {
          "firstName": "John",
          "middleName": "Doe",
          "lastName": "NewLastName",
          "mobile": "+91999999999",
          "email": "john.doe@example.com",
          "address": {
            "city": "Bangalore",
            "line1": "ABC",
            "line2": "XYZ",
            "pincode": 560049,
            "state": "Karnataka",
            "country": "India"
          },
          "metadata": {
            "blood_group": "AB+",
            "aadhar_number": "12345"
          }
        }
      },
      "Address1": {
        "title": "Address1",
        "required": [
          "city",
          "line1",
          "line2",
          "pincode",
          "state",
          "country"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "line1": {
            "type": "string"
          },
          "line2": {
            "type": "string"
          },
          "pincode": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "city": "Bangalore",
          "line1": "ABC",
          "line2": "XYZ",
          "pincode": 560049,
          "state": "Karnataka",
          "country": "India"
        }
      },
      "Metadata1": {
        "title": "Metadata1",
        "required": [
          "blood_group",
          "aadhar_number"
        ],
        "type": "object",
        "properties": {
          "blood_group": {
            "type": "string"
          },
          "aadhar_number": {
            "type": "string"
          }
        },
        "example": {
          "blood_group": "AB+",
          "aadhar_number": "12345"
        }
      },
      "200-Success1": {
        "title": "200-Success1",
        "required": [
          "patientId"
        ],
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string"
          }
        },
        "example": {
          "patientId": "1234567890"
        }
      },
      "500patientIdlabPatientIdismissing": {
        "title": "500patientIdlabPatientIdismissing",
        "required": [
          "message",
          "code"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "message": "Please check data.",
          "code": 500
        }
      },
      "200OK4": {
        "title": "200OK4",
        "required": [
          "id",
          "profile"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile1"
          }
        },
        "example": {
          "id": "1234567890",
          "profile": {
            "personal": {
              "first_name": "doctor",
              "middle_name": "",
              "last_name": "doctor",
              "dob": "",
              "gender": "M"
            },
            "professional": {
              "active": true,
              "about": "doctor doctor is a Cardiologist with 43 years of experience.",
              "language": [
                {
                  "code": "en",
                  "language": "English"
                }
              ],
              "degree": [
                {
                  "name": "MD",
                  "branch_name": "",
                  "college_name": "",
                  "start_year": "",
                  "end_year": ""
                }
              ],
              "major_speciality": {
                "name": "Cardiologist",
                "code": "CA"
              },
              "speciality": [
                {
                  "name": "General Physician"
                },
                {
                  "name": "Diabetologist"
                },
                {
                  "name": "Allergy Specialist"
                }
              ],
              "clinics": [
                {
                  "id": "1234567899876",
                  "name": "Vagus Hospital & Health Services",
                  "contacts": [
                    {
                      "name": "Phone",
                      "number": "+91999999999"
                    }
                  ],
                  "address": {
                    "line1": "H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom., Pocket 2, Gate No :-2, nearest to Homeopathy clinic.",
                    "city": "Delhi",
                    "country": "India",
                    "state": "Delhi",
                    "pin": "110085"
                  }
                }
              ],
              "default_clinic": "1234567899876"
            }
          }
        }
      },
      "Profile1": {
        "title": "Profile1",
        "required": [
          "personal",
          "professional"
        ],
        "type": "object",
        "properties": {
          "personal": {
            "$ref": "#/components/schemas/Personal"
          },
          "professional": {
            "$ref": "#/components/schemas/Professional"
          }
        },
        "example": {
          "personal": {
            "first_name": "doctor",
            "middle_name": "",
            "last_name": "doctor",
            "dob": "",
            "gender": "M"
          },
          "professional": {
            "active": true,
            "about": "doctor doctor is a Cardiologist with 43 years of experience.",
            "language": [
              {
                "code": "en",
                "language": "English"
              }
            ],
            "degree": [
              {
                "name": "MD",
                "branch_name": "",
                "college_name": "",
                "start_year": "",
                "end_year": ""
              }
            ],
            "major_speciality": {
              "name": "Cardiologist",
              "code": "CA"
            },
            "speciality": [
              {
                "name": "General Physician"
              },
              {
                "name": "Diabetologist"
              },
              {
                "name": "Allergy Specialist"
              }
            ],
            "clinics": [
              {
                "id": "1234567899876",
                "name": "Vagus Hospital & Health Services",
                "contacts": [
                  {
                    "name": "Phone",
                    "number": "+91999999999"
                  }
                ],
                "address": {
                  "line1": "H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom., Pocket 2, Gate No :-2, nearest to Homeopathy clinic.",
                  "city": "Delhi",
                  "country": "India",
                  "state": "Delhi",
                  "pin": "110085"
                }
              }
            ],
            "default_clinic": "1234567899876"
          }
        }
      },
      "Personal": {
        "title": "Personal",
        "required": [
          "first_name",
          "middle_name",
          "last_name",
          "dob",
          "gender"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "middle_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          }
        },
        "example": {
          "first_name": "doctor",
          "middle_name": "",
          "last_name": "doctor",
          "dob": "",
          "gender": "M"
        }
      },
      "Professional": {
        "title": "Professional",
        "required": [
          "active",
          "about",
          "language",
          "degree",
          "major_speciality",
          "speciality",
          "clinics",
          "default_clinic"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "about": {
            "type": "string"
          },
          "language": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Language"
            },
            "description": ""
          },
          "degree": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Degree"
            },
            "description": ""
          },
          "major_speciality": {
            "$ref": "#/components/schemas/MajorSpeciality"
          },
          "speciality": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Speciality"
            },
            "description": ""
          },
          "clinics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Clinic"
            },
            "description": ""
          },
          "default_clinic": {
            "type": "string"
          }
        },
        "example": {
          "active": true,
          "about": "doctor doctor is a Cardiologist with 43 years of experience.",
          "language": [
            {
              "code": "en",
              "language": "English"
            }
          ],
          "degree": [
            {
              "name": "MD",
              "branch_name": "",
              "college_name": "",
              "start_year": "",
              "end_year": ""
            }
          ],
          "major_speciality": {
            "name": "Cardiologist",
            "code": "CA"
          },
          "speciality": [
            {
              "name": "General Physician"
            },
            {
              "name": "Diabetologist"
            },
            {
              "name": "Allergy Specialist"
            }
          ],
          "clinics": [
            {
              "id": "1234567899876",
              "name": "Vagus Hospital & Health Services",
              "contacts": [
                {
                  "name": "Phone",
                  "number": "+91999999999"
                }
              ],
              "address": {
                "line1": "H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom., Pocket 2, Gate No :-2, nearest to Homeopathy clinic.",
                "city": "Delhi",
                "country": "India",
                "state": "Delhi",
                "pin": "110085"
              }
            }
          ],
          "default_clinic": "1234567899876"
        }
      },
      "Language": {
        "title": "Language",
        "required": [
          "code",
          "language"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "example": {
          "code": "en",
          "language": "English"
        }
      },
      "Degree": {
        "title": "Degree",
        "required": [
          "name",
          "branch_name",
          "college_name",
          "start_year",
          "end_year"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "branch_name": {
            "type": "string"
          },
          "college_name": {
            "type": "string"
          },
          "start_year": {
            "type": "string"
          },
          "end_year": {
            "type": "string"
          }
        },
        "example": {
          "name": "MD",
          "branch_name": "",
          "college_name": "",
          "start_year": "",
          "end_year": ""
        }
      },
      "MajorSpeciality": {
        "title": "MajorSpeciality",
        "required": [
          "name",
          "code"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "example": {
          "name": "Cardiologist",
          "code": "CA"
        }
      },
      "Speciality": {
        "title": "Speciality",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "General Physician"
        }
      },
      "Clinic": {
        "title": "Clinic",
        "required": [
          "id",
          "name",
          "contacts",
          "address"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "description": ""
          },
          "address": {
            "$ref": "#/components/schemas/Address2"
          }
        },
        "example": {
          "id": "1234567899876",
          "name": "Vagus Hospital & Health Services",
          "contacts": [
            {
              "name": "Phone",
              "number": "+91999999999"
            }
          ],
          "address": {
            "line1": "H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom., Pocket 2, Gate No :-2, nearest to Homeopathy clinic.",
            "city": "Delhi",
            "country": "India",
            "state": "Delhi",
            "pin": "110085"
          }
        }
      },
      "Contact": {
        "title": "Contact",
        "required": [
          "name",
          "number"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        },
        "example": {
          "name": "Phone",
          "number": "+91999999999"
        }
      },
      "Address2": {
        "title": "Address2",
        "required": [
          "line1",
          "city",
          "country",
          "state",
          "pin"
        ],
        "type": "object",
        "properties": {
          "line1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "pin": {
            "type": "string"
          }
        },
        "example": {
          "line1": "H No -122/a,, Pocket 2 back side of Yamaha 2 wheeler showroom., Pocket 2, Gate No :-2, nearest to Homeopathy clinic.",
          "city": "Delhi",
          "country": "India",
          "state": "Delhi",
          "pin": "110085"
        }
      },
      "Err": {
        "title": "Err",
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "code": "DOCTOR_DATA_INVALID",
          "message": "Please enter valid doctor data"
        }
      },
      "403ForbiddenBusinessPatientDetailsMissing11": {
        "title": "403ForbiddenBusinessPatientDetailsMissing11",
        "required": [
          "data",
          "err"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "err": {
            "$ref": "#/components/schemas/Err"
          }
        },
        "example": {
          "data": {},
          "err": {
            "code": "DOCTOR_DATA_INVALID",
            "message": "Please enter valid doctor data"
          }
        }
      },
      "500WrongAPIURLTokenmismatchedWrongJSONrequest.11": {
        "title": "500WrongAPIURLTokenmismatchedWrongJSONrequest.11",
        "required": [
          "data",
          "err"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "err": {
            "$ref": "#/components/schemas/Err"
          }
        },
        "example": {
          "data": {},
          "err": {
            "code": "INVALID_DATA",
            "message": "Data entered in incorrect"
          }
        }
      },
      "400BadRequest1": {
        "title": "400BadRequest1",
        "required": [
          "data",
          "error"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "data": {},
          "error": {
            "code": "INVALID_REQUEST_PARAMETERS",
            "message": "The request contains invalid parameters"
          }
        }
      },
      "403Forbidden1": {
        "title": "403Forbidden1",
        "required": [
          "data",
          "error"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "data": {},
          "error": {
            "code": "UNAUTHORIZED_ENTITY",
            "message": "Unauthorized access. Booking appointments for business entities or doctors is not allowed"
          }
        }
      },
      "Error24": {
        "title": "Error24",
        "required": [
          "code",
          "message",
          "details"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/Details"
          }
        },
        "example": {
          "code": "APPOINTMENT_BOOKING_FAILED",
          "message": "Unable to book appointment due to unavailable slots",
          "details": {
            "reason": "NO_AVAILABLE_SLOTS",
            "doctorId": "12345"
          }
        }
      },
      "Details": {
        "title": "Details",
        "required": [
          "reason",
          "doctorId"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "doctorId": {
            "type": "string"
          }
        },
        "example": {
          "reason": "NO_AVAILABLE_SLOTS",
          "doctorId": "12345"
        }
      },
      "422-UnprocessableEntity1": {
        "title": "422-UnprocessableEntity1",
        "required": [
          "status",
          "data",
          "error"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/Error24"
          }
        },
        "example": {
          "status": 422,
          "data": {},
          "error": {
            "code": "APPOINTMENT_BOOKING_FAILED",
            "message": "Unable to book appointment due to unavailable slots",
            "details": {
              "reason": "NO_AVAILABLE_SLOTS",
              "doctorId": "12345"
            }
          }
        }
      },
      "400BadRequest3": {
        "title": "400BadRequest3",
        "required": [
          "status",
          "data",
          "error"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "status": 400,
          "data": {},
          "error": {
            "code": "INVALID_REQUEST_PARAMETERS",
            "message": "The request contains invalid parameters"
          }
        }
      },
      "403Forbidden3": {
        "title": "403Forbidden3",
        "required": [
          "status",
          "data",
          "error"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "example": {
          "status": 403,
          "data": {},
          "error": {
            "code": "UNAUTHORIZED_ENTITY",
            "message": "Unauthorized access. Booking appointments for business entities or doctors is not allowed"
          }
        }
      },
      "PatientInformationUpdatedRequest": {
        "title": "PatientInformationUpdatedRequest",
        "required": [
          "nationalIdentityNumber",
          "patient_merge",
          "Patient middleName",
          "optionCode",
          "Patient Name",
          "country code",
          "wardNo",
          "ethnicity",
          "Patient Contact",
          "Patient City",
          "Patient Designation",
          "labId",
          "zipcode",
          "Patient email",
          "Patient Alternate Contact",
          "ssnNumber",
          "race",
          "referral_id",
          "Patient Address",
          "Patient Dob",
          "status",
          "Mobile Number",
          "Patient firstName",
          "Insurance Details",
          "Patient gender",
          "workerCode",
          "Patient Type",
          "Patient lastName",
          "state",
          "Patient Age",
          "Patient Id",
          "nationality",
          "insuranceNo",
          "Patient Area",
          "old_patient_id",
          "old_user_det_id",
          "Guarantor Details",
          "org_id",
          "mrn",
          "passportNumber",
          "Patient MRN",
          "landmark",
          "areaOfResidance",
          "webhookId"
        ],
        "type": "object",
        "properties": {
          "nationalIdentityNumber": {
            "type": "string"
          },
          "patient_merge": {
            "type": "integer",
            "format": "int32"
          },
          "Patient middleName": {
            "type": "string"
          },
          "optionCode": {
            "type": "string"
          },
          "Patient Name": {
            "type": "string"
          },
          "country code": {
            "type": "string"
          },
          "wardNo": {
            "type": "string"
          },
          "ethnicity": {
            "type": "string"
          },
          "Patient Contact": {
            "type": "string"
          },
          "Patient City": {
            "type": "string"
          },
          "Patient Designation": {
            "type": "string"
          },
          "labId": {
            "type": "integer",
            "format": "int32"
          },
          "zipcode": {
            "type": "string"
          },
          "Patient email": {
            "type": "string"
          },
          "Patient Alternate Contact": {
            "type": "string"
          },
          "ssnNumber": {
            "type": "string"
          },
          "race": {
            "type": "string"
          },
          "referral_id": {
            "type": "string"
          },
          "Patient Address": {
            "type": "string"
          },
          "Patient Dob": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "Mobile Number": {
            "type": "string"
          },
          "Patient firstName": {
            "type": "string"
          },
          "Insurance Details": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "Patient gender": {
            "type": "string"
          },
          "workerCode": {
            "type": "string"
          },
          "Patient Type": {
            "type": "string"
          },
          "Patient lastName": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "Patient Age": {
            "type": "string"
          },
          "Patient Id": {
            "type": "integer",
            "format": "int32"
          },
          "nationality": {
            "type": "string"
          },
          "insuranceNo": {
            "type": "string"
          },
          "Patient Area": {
            "type": "string"
          },
          "old_patient_id": {
            "type": "integer",
            "format": "int32"
          },
          "old_user_det_id": {
            "type": "integer",
            "format": "int32"
          },
          "Guarantor Details": {
            "type": "object"
          },
          "org_id": {
            "type": "string"
          },
          "mrn": {
            "type": "string"
          },
          "passportNumber": {
            "type": "string"
          },
          "Patient MRN": {
            "type": "string"
          },
          "landmark": {
            "type": "string"
          },
          "areaOfResidance": {
            "type": "string"
          },
          "webhookId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "nationalIdentityNumber": "",
          "patient_merge": 0,
          "Patient middleName": "",
          "optionCode": "",
          "Patient Name": "Dummy Patient 12",
          "country code": "44",
          "wardNo": "Angola",
          "ethnicity": "Hispanic or Latino",
          "Patient Contact": "",
          "Patient City": "Pune",
          "Patient Designation": "Mr.",
          "labId": 1336,
          "zipcode": "123432",
          "Patient email": "Test@gmail.com",
          "Patient Alternate Contact": "1234554321",
          "ssnNumber": "",
          "race": "",
          "referral_id": "1665687",
          "Patient Address": "",
          "Patient Dob": "2022-01-01",
          "status": "Patient Information Update",
          "Mobile Number": "1234554321",
          "Patient firstName": "Dummy",
          "Insurance Details": [],
          "Patient gender": "Male",
          "workerCode": "",
          "Patient Type": "I",
          "Patient lastName": "Patient",
          "state": "Maharashtra",
          "Patient Age": "2 years",
          "Patient Id": 18178,
          "nationality": "Indian",
          "insuranceNo": "",
          "Patient Area": "Baner, Pune, Maharashtra, India",
          "old_patient_id": 0,
          "old_user_det_id": 0,
          "Guarantor Details": {},
          "org_id": "179510",
          "mrn": "",
          "passportNumber": "",
          "Patient MRN": "11234MRN",
          "landmark": "",
          "areaOfResidance": "Pune",
          "webhookId": 58
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "apikey",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "## **API Authentication Guide for Third Parties**\n\n**Overview**\n\nTo interact with our APIs securely, you must first authenticate and obtain an access token. This token must be included in the headers of all subsequent API requests. The token is valid for 30 minutes, after which you will need to re-authenticate to obtain a new token. This guide will walk you through the necessary steps and provide tips on managing token expiration programmatically.\n\n**Step 1: Obtain an Access Token**\n\nThe first step in interacting with our API is to authenticate using your client credentials. This will provide you with an access token.\n\n**Authentication Request**\n\nMake a POST request to the authentication endpoint with your client credentials:\n\n``` bash\ncurl --location '{{AUTH_HOST}}/connect-auth/v1/account/login' \\\n--header 'Content-Type: application/json' \\\n--data '{\n    \"client_id\": \"<client_id_assigned>\",\n    \"client_secret\": \"<secret_key_assigned>\"\n}'\n\n ```\n\n**Response**\n\nIf the authentication is successful, you will receive a JSON response containing the access token:\n\n``` json\n{\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5c1KlsXVCJ9.eyJleHAiOjE3MjMxMDk1NTIsImlhdCI6MTcyMzEwNzc1MiwiYy1pZCI6Im1ldHJvcG9saXMifQ.PdxjlgB3ZK4qGPdYwqfptAaZvBsGtSjqYLSN0wp1\"\n}\n\n ```\n\nThe access_token is valid for 30 minutes.\n\n**Step 2: Use the Access Token**\n\nInclude the access token in the `auth` header for all subsequent API requests. This token is essential for the API gateway to authenticate your requests and allow access.\n\n**Example API Request**\n\nHere’s how to include the access token in your API requests:\n\n``` bash\ncurl --location '{{HOST}}/api-suite/v1/any-endpoint' \\\n--header 'auth: eyJhbGciOiJIUzI1NiIsInR5c1KlsXVCJ9.eyJleHAiOjE3MjMxMDk1NTIsImlhdCI6MTcyMzEwNzc1MiwiYy1pZCI6Im1ldHJvcG9saXMifQ.PdxjlgB3ZK4qGPdYwqfptAaZvBsGtSjqYLSN0wp1' \\\n--header 'Content-Type: application/json'\n\n ```\n\n**Token Expiration and Renewal**\n\nThe access token is valid for **30 minutes.** After this period, you must re-authenticate to obtain a new token. Failing to do so will result in authentication errors for your API requests.\n\n**Error Handling**\n\nIf the token is expired or not included in the `auth` header, all API requests will return a **401 Unauthorized** status code. Ensure your application handles this scenario by prompting re-authentication or renewing the token as needed.\n\n**Summary**\n\n1\\. **Authenticate:** Obtain an access token using your client credentials.\n\n2\\. **Authorize:** Include the access token in the auth header for all API requests.\n\n3\\. **Token Management:** Ensure the token is renewed every 30 minutes to maintain continuous access. Implement token renewal logic in your application to handle this automatically.\n\n4.**Error Handling:** Handle 401 Unauthorized errors by re-authenticating and obtaining a new token."
    },
    {
      "name": "Patient Registration API",
      "description": "### Overview\n\nThe Patient Directory API is designed to manage patient information within a business' directory. This API allows for searching, adding, and editing patient details in a specific doctor's directory. It facilitates efficient patient management and ensures that all necessary information is up-to-date and easily accessible.\n\n### Main Actors\n\n- **Patient:** The individual whose information is being managed in the doctor's directory. This includes personal details, contact information, medical history, and other relevant data.\n    \n\n### Functionality\n\n1. **Search for Patients:**\n    \n    1. This functionality allows users to search for existing patients in a business' directory using various search criteria such as mobile number, name, etc. It helps in quickly locating patient records and retrieving relevant details.\n        \n2. **Add a Patient:**\n    \n    1. This functionality enables the addition of new patient records to a business' directory. Users can provide necessary details such as personal information, contact details, and medical history to create a new patient profile.\n        \n3. **Edit a Patient:**\n    \n    1. This functionality allows users to update existing patient records in a doctor's directory. Users can modify personal details, contact information, and other relevant data to ensure that the patient profile remains accurate and current.\n        \n\n### Example Endpoints\n\n- **Search for Patients:**\n    \n    - `GET {{HOST}}/v1/business/patients/search?mobile=`\n        \n- **Add a Patient:**\n    \n    - `POST {{HOST}}/v1/business/doctor/{{doctor_id}}/patient/add`\n        \n- **Edit a Patient:**\n    \n    - `PUT {{HOST}}/v1/business/doctor/{{doctor_id}}/patient/{{patient_id}}`\n        \n\n### Usage\n\nThese APIs are crucial for maintaining an organized and comprehensive patient directory within a business' practice. They ensure that patient data is readily available, easily searchable, and always up-to-date, thus enhancing the overall efficiency of patient management.\n\n### Notes\n\n- Ensure that all required fields are provided when adding or editing patient information.\n    \n- Use appropriate search criteria to narrow down patient records effectively.\n    \n- Handle sensitive patient data with care and comply with relevant privacy regulations.\n    \n- Currently a patient can only be added in a reference to a doctor in a business. This lets adding the patient to business directory as well as searching on business level automatically."
    },
    {
      "name": "Doctor and clinic API",
      "description": "### Purpose\n\nThe Doctor and Clinic Details API serves the following main purposes:\n\n1. **Retrieve Doctor Profile Details:**\n    \n    - This API provides detailed information about a doctor's profile, including their professional background, specialties, and contact information.\n        \n2. **Fetch Associated Clinic Details\\[WIP\\]:**\n    \n    - In addition to the doctor's profile, this API retrieves information about the clinics associated with the doctor. This includes clinic locations, contact details, and available services.\n        \n3. **Get Clinic and Doctor Details for a Business:**  \n    This API provides a comprehensive list of clinics and doctors associated with those clinics for a business, allowing for detailed information retrieval about the entire business entity.\n    \n\n### **Basic Information**\n\n**Endpoint 1: Get Doctor Details**\n\n• **URL:** {{HOST}}/v1/business/doctor/{doctor_id}\n\n• **Method:** GET\n\n**Endpoint 2: Get Clinic and Doctor Details for a Business**\n\n• **URL:** {{HOST}}/v1/business/entities\n\n• **Method:** GET\n\n### Usage\n\nThis API is intended to be used by healthcare platforms, patient management systems, and appointment booking systems to display comprehensive information about doctors and their associated clinics. By integrating this API, users can make informed decisions when selecting a healthcare provider or booking an appointment.\n\n### Example Workflow\n\n1. **Fetch Doctor Profile:**\n    \n    - Retrieve detailed information about a specific doctor using their unique identifier.\n        \n2. **Fetch Clinic Details:**\n    \n    - Retrieve details of a clinics associated with the doctor.\n        \n3. **Fetch Clinic and Doctor Details for a Business:**  \n    •Retrieve a list of clinics, each with associated doctors, and detailed profiles of the doctors using a single API call."
    },
    {
      "name": "Appointment API",
      "description": "#### Appointment API allows a business to to the following actions:\n\n- Search for all slots daywise for a doctor and clinic.\n    \n- Book appointment on a particular slot.\n    \n- Check in a patient with appointment.\n    \n- Get details of an appointment.\n    \n- Edit/Delete/Reschedule appointments.\n    \n\n## Workflow for Booking an Appointment for a Patient\n\n### Step 1: Add Patient to Business' Directory (if not present)\n\nBefore booking an appointment, ensure that the patient is added to the business' directory. Use the following API to add a patient.\n\n_Note: You can also create an appointment without adding patient first. Providing patient details while creating an appointment adds the patient directory too._\n\n**Endpoint:** `{{HOST}}/v1/business/doctor/{{doctor_id}}/patient/add`\n\n**Method:** POST\n\n### Step 2: Search for Available Slots\n\nOnce the patient is added, select the doctor and clinic, and search for the available slots for the desired dates.\n\n**Endpoint:** `{{HOST}}/v1/business/doctor/{doctor_id}/clinic/{clinic_id}/appointments/slots?start_date={{start_date}}&end_date={{end_date}}`\n\n**Method:** GET\n\n### Step 3: Book an Appointment Slot\n\nAfter finding an available slot, book the appointment for the desired date and slot, including additional parameters like type of appointment and payment mode. The appointment will be created in this step\n\n**Endpoint:** `{{HOST}}/v2/business/doctor/{doctor_id}/appointments/slots/book`\n\n**Method:** POST\n\n### Step 4(Optional): Check-In Patient for Appointment\n\nCheck-in a patient for a previously created appointment using the appointment ID.  \n**Endpoint** : `{{HOST}}/v2/business/appointments/{{appointment_id}}/check-in`  \n**Method:** PUT\n\n### Step 5: Get Appointment Details\n\n**Purpose**\n\nRetrieve details of a specific appointment using the appointment ID.\n\n**Endpoint :** `{{HOST}}/v1/business/appointments/{appointment_id}`  \n**Method:** GET\n\n#### Request Parameters\n\n- **business_id**: The unique identifier for the business.\n    \n- **appointment_id**: The unique identifier for the appointment.\n    \n\n### Step 6: Edit and Reschedule Appointments\n\n**Purpose:** Edit and reschedule existing appointments. The current process to reschedule an appointment is\n\n1. Delete the current appointment using appointment_id\n    \n2. Create a new appointment with new details/slots/timinga/\n    \n\n**Cancel Endpoint:** `{{HOST}}/v2/business/appointments/{appointment_id}/cancel`\n\n**Book Endppoint:** `{{HOST}}/v2/business/doctor/{doctor_id}/appointments/slots/book`  \nMethod:** PUT  \n**Description:** Modify details of an existing appointment or reschedule it to a different slot."
    },
    {
      "name": "Prescription API",
      "description": "The Prescription API allows a business to manage prescriptions, including retrieving details of a specific prescription.\n\n## Workflow for Managing a Prescription\n\n### Step 1: Retrieve Prescription Details\n\nRetrieve details of a specific prescription using the prescription ID.\n\n**Endpoint:** `{{HOST}}/v1/business/prescription/{{rx_id}}`\n\n**Method:** `GET`\n\n**Request Parameters:**\n\n- **rx_id**: The unique identifier for the prescription.\n    \n\nResponse\n\n``` json\n{\n    \"data\": {\n        \"rx_id\": \"rx_id\",\n        \"visit_id\": \"appointment_id\",\n        \"date\": \"2024-03-08T05:50:37.059Z\",\n        \"doctor\": {\n            \"id\": \"doctor_id\"\n        },\n        \"patient\": {\n            \"id\": \"patient_id\"\n        },\n        \"selected_clinic\": \"clinic_id\",\n        \"rx_url\": \"pdf_url\",\n        \"visit_name\": \"Febrile illness, Dengue L\",\n        \"rx_entities\": {\n            \"symptoms\": [\n                {\n                    \"id\": \"s-1234\",\n                    \"name\": \"Fever With Chills\",\n                    \"properties\": {\n                        \"since\": \"5 days\",\n                        \"severity\": \"high\",\n                        \"abc\": \"xyz\"\n                    }\n                }\n            ],\n            \"diagnosis\": [\n                {\n                    \"id\": \"d-1345\",\n                    \"name\": \"Febrile illness\"\n                }\n            ],\n            \"medications\": [\n                {\n                    \"name\": \"Dolo 650\",\n                    \"id\": \"b-13456\",\n                    \"dosage_form\": \"tablet\",\n                    \"frequency\": \"1-1-1\",\n                    \"duration\": \"5 Days\",\n                    \"timing\": \"After Meal\",\n                    \"instruction\": \"drink with water\",\n                    \"dose\": \"1 tablet\",\n                    \"generic_name\": \"Paracetamol (650mg)\",\n                    \"tapering_dose\": []\n                }\n            ],\n            \"labTests\": [\n                {\n                    \"id\": \"lp-14567\",\n                    \"name\": \"Complete Blood Count (CBC)\",\n                    \"partner_id\": \"MP0101\",\n                    \"remark\": null\n                }\n            ]\n        }\n    }\n}\n\n ```\n\n### Field Definitions\n\n- **rx_id**: `string` - Unique identifier for the prescription.\n    \n- **visit_id**: `string` - Unique identifier for the visit during which the prescription was created.\n    \n- **date**: `string` (ISO 8601) - Date and time when the prescription was created.\n    \n- **doctor**: `object` - Information about the doctor who created the prescription.\n    \n    - **id**: `string` - Unique identifier for the doctor.\n        \n- **patient**: `object` - Information about the patient for whom the prescription was created.\n    \n    - **id**: `string` - Unique identifier for the patient.\n        \n- **selected_clinic**: `string` - Unique identifier for the clinic where the prescription was created.\n    \n- **rx_url**: `string` - URL to download/view the prescription PDF.\n    \n- **visit_name**: `string` - Description or name of the visit.\n    \n- **rx_entities**: `object` - Contains detailed information about the prescription entities.\n    \n    - **symptoms**: `array` - List of symptoms.\n        \n        - **id**: `string` - Unique identifier for the symptom.\n            \n        - **name**: `string` - Name of the symptom.\n            \n        - **properties**: `object` - Additional properties of the symptom.\n            \n            - **since**: `string` - Duration of the symptom.\n                \n            - **severity**: `string` - Severity of the symptom.\n                \n            - **abc**: `string` - Other property (example).\n                \n    - **diagnosis**: `array` - List of diagnoses.\n        \n        - **id**: `string` - Unique identifier for the diagnosis.\n            \n        - **name**: `string` - Name of the diagnosis.\n            \n    - **medications**: `array` - List of medications.\n        \n        - **name**: `string` - Name of the medication.\n            \n        - **id**: `string` - Unique identifier for the medication.\n            \n        - **dosage_form**: `string` - Form of the dosage (e.g., tablet).\n            \n        - **frequency**: `string` - Frequency of taking the medication.\n            \n        - **duration**: `string` - Duration for taking the medication.\n            \n        - **timing**: `string` - Timing for taking the medication.\n            \n        - **instruction**: `string` - Additional instructions for taking the medication.\n            \n        - **dose**: `string` - Dose of the medication.\n            \n        - **generic_name**: `string` - Generic name of the medication.\n            \n        - **tapering_dose**: `array` - Tapering dose information if applicable.\n            \n    - **labTests**: `array` - List of lab tests.\n        \n        - **id**: `string` - Unique identifier for the lab test.\n            \n        - **name**: `string` - Name of the lab test.\n            \n        - **partner_id**: `string` - Identifier for the partner providing the lab test.\n            \n        - **remark**: `string` - Additional remarks for the lab test."
    },
    {
      "name": "Appointment Webhooks"
    },
    {
      "name": "Prescription Webhooks",
      "description": "A webhook event for a prescription being created would typically be a POST request sent to the registered webhook URL. The payload of the request would include the relevant details such as prescription ID, appointment ID, doctor ID, patient ID, and the event type.\n\n**Request Headers**\n\n```\nContent-Type: application/json\n\n ```\n\n**Request Body**\n\n``` json\n{\n  \"event_type\": \"prescription_created\",\n  \"data\": {\n    \"rx_id\": \"P-AN-AAB74FCF-52ED-537E-8032-ED69CD1D5A76\",\n    \"appointment_id\": \"09779b1b-4b2a-453b-8854-2fc0af2f1d93\",\n    \"doctor_id\": \"168085238706770\",\n    \"patient_id\": \"170313939719215\"\n  }\n}\n\n ```\n\n**Field Definitions**\n\n• **event_type**: string - Type of the event. For this example, it is “prescription_created”.\n\n• **data**: object - Contains the details of the prescription event.\n\n• **rx_id**: string - Unique identifier for the prescription.\n\n• **appointment_id**: string - Unique identifier for the appointment during which the prescription was created.\n\n• **doctor_id**: string - Unique identifier for the doctor who created the prescription.\n\n• **patient_id**: string - Unique identifier for the patient for whom the prescription was created.\n\nThis JSON payload would be sent as the body of a POST request to the registered webhook URL. The receiving system can then process this information as needed."
    },
    {
      "name": "Patient Information Webhooks"
    }
  ]
}