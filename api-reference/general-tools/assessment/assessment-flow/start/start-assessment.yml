openapi: 3.0.3
info:
  title: Assessment APIs
  version: 1.0.0
servers:
  - url: https://api.eka.care

paths:
  /assessments/api/v1/start/{hash}:
    put:
      tags:
        - Assessments > Start
      summary: Start Assessment
      description: >-
        This API is used to start the assessment. It returns the first question of the assessment.
        <Tip>Use this API to get the first question.</Tip>
      parameters:
        - name: hash
          in: path
          required: true
          description: The unique identifier for the assessment.
          schema:
            type: string
        - name: auth
          in: header
          required: true  # Use 'true' (lowercase)
          description: >-
            The auth token of the user. It is used to authenticate the user.
          schema:
            type: string
        - name: client-id
          in: header
          required: true
          description: >-
            The client ID of the user. It is used to identify the user.
          schema:
            type: string
        - name: locale
          in: header
          description: >-
            The locale of the user. It is used to determine the language of the assessment. Supported locales are `en`, `hi`, `kn` for English, Hindi, and Kannada respectively. Default value is `en`.
          schema:
            type: string
            enum: [en, hi, kn]
          example: en
        - name: Content-Type
          in: header
          description: >-
            The content type of the request is `application/json`.
          schema:
            type: string
            enum: [application/json]
            default: application/json
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterComponentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-err'

# Define your schemas here if needed
components:
  schemas:
    MasterComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: number
                default: 0
                example: 0.1
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
              component_code:
                type: string
                example: <component-code>
              question_text:
                type: string
                example: <Question Text>
              tip:
                type: string
                example: <Tip>
              component_data:
                type: object
                properties:
                  url:
                    type: string
                    description: >-
                      This is valid for an autosuggest component
                  choices:
                    type: array
                    description: >-
                      This is valid for a choice type components, multi, radio (single choice), radio group
                    items:
                      type: object
                      properties:
                        choice_id:
                          type: string
                          example: xyzjahaj
                        choice_label:
                          type: string
                          example: I have Diabetes
                  default_choice:
                    type: string
                    description: >-
                      This will be a choice id in case of choice components else will be a string in case of user-input components
              is_mandatory:
                type: boolean
                example: true
                description: >-
                  This is a boolean value, if true user has to answer this question
        is_last_question:
          type: boolean
          example: false
          description: >-
            This is a boolean value, if true this is the last question of the assessment
        progress:
          type: integer
          minimum: 0
          maximum: 100
          description: >-
            This is the progress of the assessment, it is a number between 0 and 100 
    400-err:
      type: object
      properties:
        message:
          type: string
