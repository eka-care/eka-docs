openapi: 3.0.3
info:
  title: Assessment APIs
  version: 1.0.0
servers:
  - url: https://api.eka.care

paths:
  /assessments/api/v1/start/{assessment_id}:
    put:
      tags:
        - Assessments
      summary: Step 2. Start Assessment
      description: >-
        This API is used to start and get the first question of the assessment.
        <Tip>Use this API to get the first question.</Tip>
      
      security:
        - authApiKey: []

      parameters:
        - $ref: '#/components/parameters/client-id'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/assessment_id'
      
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MasterComponentResponse'
                    title: Master Response
                  - $ref: '#/components/schemas/ATSGComponentResponse'
                    title: ATSG Response
                  - $ref: '#/components/schemas/RadioComponentResponse'
                    title: Radio Response
                  - $ref: '#/components/schemas/MultiComponentResponse'
                    title: Multi Select Response
                  - $ref: '#/components/schemas/RadioGroupComponentResponse'
                    title: Radio Group Response           
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error-400"

  /assessment/api/v1/continue/{assessment_id}/{qid}:
    put:
      tags:
        - Assessments
      summary: Step 3. Continue Assessment
      description: >-
        This API is used to submit user answers and get the next questions based on the answers.
        <Tip>Call this API multiple times until the assessment is complete where `is_last_question` will be true </Tip>
      
      security:
        - authApiKey: []

      parameters:
        - $ref: '#/components/parameters/client-id'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/assessment_id'
        - $ref: '#/components/parameters/qid'

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_response:
                  type: array
                  items:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/ATSGRequest'
                        title: Autosuggest Request
                      - $ref: '#/components/schemas/RadioRequest'
                        title: RadioRequest
                      - $ref: '#/components/schemas/MultiRequest'
                        title: MultiRequest
                      - $ref: '#/components/schemas/RadioGroupRequest'
                        title: RadioGroupRequest
                      - $ref: '#/components/schemas/SkippedRequest'
                        title: SkippedRequest
              description: >-
                The request body should contain the answer to the question depending on the type of question component.
                It should be in format as explained in above dropdown.
     
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MasterComponentResponse'
                    title: Master Response
                  - $ref: '#/components/schemas/ATSGComponentResponse'
                    title: ATSG Response
                  - $ref: '#/components/schemas/RadioComponentResponse'
                    title: Radio Response
                  - $ref: '#/components/schemas/MultiComponentResponse'
                    title: Multi Select Response
                  - $ref: '#/components/schemas/RadioGroupComponentResponse'
                    title: Radio Group Response
                  - $ref: '#/components/schemas/LastQuestionResponse'
                    title: Last Question Response 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-400'
        '500':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-500'

# Define your schemas here if needed
components:
  schemas:
    Generic-Error:
      type: object
      properties:
        error_code:
          type: string
        display_message:
          type: string
        message:
          type: string
    Error-400:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Generic-Error'
      example:
        error:
          error_code: bad_request
          display_message: (Generic User friendly message)
          message: (Server error message)
    Error-500:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Generic-Error'
      example:
        error:
          error_code: server_error
          display_message: (Generic User friendly message)
          message: (Server error message)
    
    # Request basics
    Selected-Choice:
      type: object
      properties:
        choice_id:
          type: string
        choice_label:
          type: string
      example:
        choice_id: test
        choice_label: fever
    Selected-Choice-Qualifier:
      type: object
      properties:
        choice_id:
          type: string
        choice_label:
          type: string
        qualifier_id:
          type: string
      example:
        choice_id: test
        choice_label: fever
        qualifier_id: a
    
    # Request Component Based
    RadioRequest:
      type: object
      title: Radio Choice Request
      description: This is the request body for single select choice components
      properties:
        selected_choices:
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/Selected-Choice'
            required:
              - choice_id
      required:
        - selected_choices
    MultiRequest:
      type: object
      title: Multi Choice Request
      description: >-
        This is the request body for multi choice components
      properties:
        selected_choices:
          type: array
          items:
            $ref: '#/components/schemas/Selected-Choice'
            required:
              - choice_id
      required:
        - selected_choices 
    ATSGRequest:
      type: object
      properties:
        selected_choices:
          $ref: '#/components/schemas/Selected-Choice'
          required:
            - choice_id
            - choice_label
      required:
        - selected_choices
    RadioGroupRequest:
      type: object
      properties:
        selected_choices:
          $ref: '#/components/schemas/Selected-Choice-Qualifier'
          required:
            - choice_id
            - qualifier_id
      required:
        - selected_choices
    SkippedRequest:
      type: object

    # Response basics
    Question-Choice:
      type: object
      properties:
        choice_id:
          type: string
          example: xyzjahaj
        choice_label:
          type: string
          example: I have Diabetes
        selected:
          type: boolean
          example: false
      required:
        - choice_id
        - choice_label
    Question-Choice-Qualifier:
      type: object
      properties:
        choice_id:
          type: string
          example: xyzjahaj
        choice_label:
          type: string
          example: I have Diabetes
        qualifiers:
          type: object
          properties:
            p:
              type: string
              example: Present
            a:
              type: string
              example: Absent
            u:
              type: string
              exmple: Don't Know
            selected:
              type: boolean
              example: false
      required:
        - choice_id
        - choice_label
    Question-default:
      type: string
      description: >-
        This will be a choice id in case of choice components else will be a string in case of user-input components
    Question-mandatory:
      type: boolean
      example: true
      description: >-
        This is a boolean value, if true user has to answer this question
    Assessment-last-question:
      type: boolean
      example: false
      description: >-
        This is a boolean value, if true this is the last question of the assessment
    Assessment-progress:
      type: integer
      minimum: 0
      maximum: 100
      description: >-
        This is the progress of the assessment, it is a number between 0 and 100 

    #Response : component based
    MasterComponentData:
      type: object
      properties:
        url:
          type: string
          description: >-
            This is valid for an autosuggest component
        static_autosuggest_choices:
          type: object
          properties:
            sections:
              type: array
              items:
                type: object
                properties:
                  section_title:
                    type: string
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: unique identifier of choice
                        common_name:
                          type: string
                          description: name of the autosuggest item being searched
                required:
                  - section_title
                  - choices
        choices:
          type: array
          description: >-
            This is valid for a choice type components, multi, radio (single choice), radio group
          items:
            $ref: '#/components/schemas/Question-Choice-Qualifier'
        default:
          type: string
          description: >-
            This will be a choice id in case of choice components else will be a string in case of user-input components
    BaseChoiceComponentData:         
      type: object
      properties:
        choices:
          type: array
          description: >-
            This is valid for a choice type components, multi, radio (single choice), radio group
          items:
            $ref: '#/components/schemas/Question-Choice'
      required:
        - choices
    RadioGroupComponentData:         
      type: object
      properties:
        choices:
          type: array
          description: >-
            This is valid for a choice type components, multi, radio (single choice), radio group
          items:
            $ref: '#/components/schemas/Question-Choice-Qualifier'
      required:
        - choices
    ATSGComponentData:         
      type: object
      properties:
        url:
          type: string
        static_autosuggest_choices:
          type: object
          properties:
            sections:
              type: array
              items:
                type: object
                properties:
                  section_title:
                    type: string
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: unique identifier of choice
                        common_name:
                          type: string
                          description: name of the autosuggest item being searched
                required:
                  - section_title
                  - choices
      required:
        - url
    
    # Response Data
    MasterComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/MasterComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
        is_last_question:
          $ref: '#/components/schemas/Assessment-last-question'
        progress:
          $ref: '#/components/schemas/Assessment-progress'
    RadioComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                default: 'I-RADO'
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/BaseChoiceComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - component_code
              - question_text
              - component_data
              - is_mandatory
        progress:
          $ref: '#/components/schemas/Assessment-progress'
      required:
        - questions
    MultiComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                default: 'I-MULT'
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/BaseChoiceComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - component_code
              - question_text
              - component_data
              - is_mandatory
        progress:
          $ref: '#/components/schemas/Assessment-progress'
      required:
        - questions
    RadioGroupComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                default: 'I-RADG'
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/RadioGroupComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - component_code
              - question_text
              - component_data
              - is_mandatory
        progress:
          $ref: '#/components/schemas/Assessment-progress'
      required:
        - questions
    ATSGComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                default: 'I-ATSG'
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/ATSGComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - component_code
              - question_text
              - component_data
              - is_mandatory
        progress:
          $ref: '#/components/schemas/Assessment-progress'
      required:
        - questions
    LastQuestionResponse:
      type: object
      properties:
        is_last_question:
          $ref: '#/components/schemas/Assessment-last-question'
          default: true
          example: true
        progress:
          $ref: '#/components/schemas/Assessment-progress'
          default: 100
          example: 100

  parameters:
    client-id: 
      name: client-id
      in: header
      required: true
      description: >-
        The client id of the user. It is used to identify the user.
      schema:
        type: string
        default: hello
      example: hello
    locale:
      name: locale
      in: header
      description: >-
        The locale of the user. It is used to determine the language of the assessment. Supported locales are `en`, `hi`, `kn` for english, hindi and kannada respectively. Default value is `en`.
      schema:
        type: string
        enum: [en, hi, kn]
        default: en
        example: en
      example: en
    assessment_id:
      name: assessment_id
      in: path
      required: true
      description: >-
        The hash that uniquely identifies the assessment session.
      schema:
        type: string
    qid:
      name: qid
      in: path
      required: true
      description: >-
        The question id that uniquely identifies the question.
      schema:
        type: integer

  securitySchemes:
    authApiKey:
      in: header
      name: auth
      description: >-
        The authentication token of the developer (generated using Authorization API).
      type: apiKey
