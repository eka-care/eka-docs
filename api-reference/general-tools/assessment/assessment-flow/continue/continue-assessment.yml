openapi: 3.0.3
info:
  title: Assessment APIs
  version: 1.0.0
servers:
  - url: https://api.eka.care

paths:
  /assessment/api/v1/continue/{hash}/{qid}:
    put:
      tags:
        - Assessments > Continue
      summary: Continue Assessment
      description: >-
        This API is used to continue the assessment. It accepts answer in the request body and returns the next question of the assessment.
        <Tip>Call this API multiple times until progress reaches 100%</Tip>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                response:
                  qid: 0
                  respid:
                    id: 47258974-a65c-11eb-8d02-1e003a340630
                    choice: p
              description: >-
                The request body should contain the answer to the question depending on the type of question component.
                It should be in format as explained in above dropdown.

      parameters:
        - name: auth
          in: header
          required: True
          description: >-
            The auth token of the user. It is used to authenticate the user.
          schema:
            type: string
        - name: client-id
          in: header
          required: True
          description: >-
            The client id of the user. It is used to identify the user.
          schema:
            type: string
          example: application/json
        - name: locale
          in: header
          description: >-
            The locale of the user. It is used to determine the language of the assessment. Supported locales are `en`, `hi`, `kn` for english, hindi and kannada respectively. Default value is `en`.
          schema:
            type: string
          example: en
        - name: Content-Type
          in: header
          description: >-
            The content type of the request. It is used to determine the type of data being sent.
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterComponentResponse'
        '4XX':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
              example:
                error:
                  error_code: bad_request
                  display_message: Bad Request, please try again
                  message: Bad Request

components:
  schemas:
    MasterComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: number
                default: 0
                example: 0.1
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
              component_code:
                type: string
                example: <component-code>
              question_text:
                type: string
                example: <Question Text>
              tip:
                type: string
                example: <Tip>
              component_data:
                type: object
                properties:
                  url:
                    type: string
                    description: >-
                      This is valid for an autosuggest component
                  choices:
                    type: array
                    description: >-
                      This is valid for a choice type components, multi, radio (single choice), radio group
                    items:
                      type: object
                      properties:
                        choice_id:
                          type: string
                          example: xyzjahaj
                        choice_label:
                          type: string
                          example: I have Diabetes
                  default_choice:
                    type: string
                    description: >-
                      This will be a choice id in case of choice components else will be a string in case of user-input components
              is_mandatory:
                type: boolean
                example: true
                description: >-
                  This is a boolean value, if true user has to answer this question
        is_last_question:
          type: boolean
          example: false
          description: >-
            This is a boolean value, if true this is the last question of the assessment
        progress:
          type: integer
          minimum: 0
          maximum: 100
          description: >-
            This is the progress of the assessment, it is a number between 0 and 100 
    