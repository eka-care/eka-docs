openapi: 3.0.3
info:
  title: Assessment APIs
  version: 1.0.0
servers:
  - url: https://api.eka.care

paths:
  /assessment/api/v1/init/:
    post:
      tags:
        - Assessments > Initialization
      summary: Initialization
      description: >-
        This API is used to initialize the assessment. It returns the hash that uniquely identifies the assessment session.
        <Warning>This API must be called before starting the assessment</Warning>

      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Request Body
              type: object
              description: >-
                The request body should contain the user information.

                Users can either provide the date of birth or age using `dob` and `age` fields respectively inside `user_info`.
                The format should be:

                ```json

                {
                  "user_info": {
                    "dob": "YYYY-MM-DD", // or "age": 20,
                    "gender": "M"/"F"
                  },
                  "workflow_id": "1000",
                }
                ```
              properties:
                user_info:
                  type: object
                  title: User Information
                  oneOf:
                    - $ref: '#/components/schemas/AS-Age-Gender'
                    - $ref: '#/components/schemas/AS-Dob-Gender'
                practitioner_id:
                  type: string
                  description: >-
                    A unique practitioner id to identify the practitioner to associate an assessment with, if applicable.
                patient_id:
                  type: string
                  description: >-
                    A unique patient id to identify the patient to associate as assessment with, if applicable.
                workflow_id:
                  type: integer
                  description: >-
                    A unique id to identify the assessment to be taken. Use the get-workflow-id API to get the workflow id. 1000 is for symptom checker
                  default: 1000
              required:
                - user_info
      parameters:
        - name: auth
          in: header
          required: True
          description: >-
            The auth token of the user. It is used to authenticate the user.
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJiX2lkIjoiMTIzNDU2IiwiY2xpZW50X2lkIjoiNzg5MCIsImV4dHJhX2ZpZWxkIjoiZXh0cmFfZmllbGRfZGF0YSJ9.q9KzBI6f4l3OyM_EkB5Quq0l9EEMFh5JS-fx3F_PHUM
        - name: client-id
          in: header
          required: True
          description: >-
            The client id of the user. It is used to identify the user.
          schema:
            type: string
          example: application/json
        - name: locale
          in: header
          description: >-
            The locale of the user. It is used to determine the language of the assessment. Supported locales are `en`, `hi`, `kn` for english, hindi and kannada respectively. Default value is `en`.
          schema:
            type: string
            enum: [en, hi, kn]
          example: en
      responses:
        '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AS-init-200'
        '4XX':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AS-init-400'

components:
  schemas:
    AS-Age-Gender:
      description: >-
        The user information should contain atleast the age of the user.
      type: object
      title: Gender and Age
      properties:
        gender:
          type: string
          enum: [M, F]
          example: "M"
        age:
          type: integer
          minimum: 0
          maximum: 130
          example: 23
        dob:
          type: string
          format: date
          example: "2001-01-01"
      example:  # Example for the entire object
        user_info:
          gender: "M"
          age: 25
      required:
        - age
        - gender
    AS-Dob-Gender:
      type: object
      title: "Gender & Dob"
      description: >-
        The user information should contain atleast the dob of the user.
      properties:
        gender:
          type: string
          enum: [M, F]
          example: "M"
        dob:
          type: string
          format: date
          example: "2001-01-01"
        age:
          type: integer
          minimum: 0
          maximum: 130
          example: 23
      required:
        - dob
        - gender
      example:  # Example for the entire object
        user_info:
          gender: "M"
          dob: "2001-01-01"
    AS-init-200:
      type: object
      properties:
        init_hash:
          type: string
      required:
        - init_hash
      example:  # Example for the entire object
        init_hash: sn_121212121218718
    AS-init-400:
      type: object
      properties:
        error:
          type: object
          properties:
            error_code:
              type: string
            display_message:
              type: string
            message:
              type: string
      required:
        - error
      example:  # Example for the entire object
        error:
          error_code: bad_request
          display_message: "Something went wrong. Please try again."
          message: Bad Request
