openapi: 3.0.3
info:
  title: Assessment APIs
  version: 1.0.0
servers:
  - description: Production
    url: https://api.eka.care
  - description: Stage/Sandbox
    url: https://api.dev.eka.care

paths:
  /assessment/api/v1/start/{assessment_id}:
    put:
      tags:
        - Assessments
      summary: Step 2. Start Assessment
      description: >-
        This API is used to start and get the first question of the assessment.
        <Tip>Use this API to get the first question.</Tip>
      
      security:
        - authApiKey: []

      parameters:
        - $ref: '#/components/parameters/client-id'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/assessment_id'
      
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MasterComponentResponse'
                    title: Master Response
                  - $ref: '#/components/schemas/ATSGComponentResponse'
                    title: ATSG Response
                  - $ref: '#/components/schemas/RadioComponentResponse'
                    title: Radio Response
                  - $ref: '#/components/schemas/MultiComponentResponse'
                    title: Multi Select Response
                  - $ref: '#/components/schemas/RadioGroupComponentResponse'
                    title: Radio Group Response           
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error-400"

  /assessment/api/v1/continue/{assessment_id}/{qid}:
    put:
      tags:
        - Assessments
      summary: Step 3. Continue Assessment
      description: >-
        This API is used to submit user answers and get the next questions based on the answers.
        <Tip>Call this API multiple times until the assessment is complete where `is_last_question` will be true </Tip>
      
      security:
        - authApiKey: []

      parameters:
        - $ref: '#/components/parameters/client-id'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/assessment_id'
        - $ref: '#/components/parameters/qid'

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_response:
                  type: array
                  items:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/ATSGRequest'
                        title: Autosuggest Request
                      - $ref: '#/components/schemas/RadioRequest'
                        title: RadioRequest
                      - $ref: '#/components/schemas/MultiRequest'
                        title: MultiRequest
                      - $ref: '#/components/schemas/RadioGroupRequest'
                        title: RadioGroupRequest
                      - $ref: '#/components/schemas/UserInput'
                        title: UserInput
                      - $ref: '#/components/schemas/SkippedRequest'
                        title: SkippedRequest
              description: >-
                The request body should contain the answer to the question depending on the type of question component.
                It should be in format as explained in above dropdown.
    
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MasterComponentResponse'
                    title: Master Response
                  - $ref: '#/components/schemas/ATSGComponentResponse'
                    title: ATSG Response
                  - $ref: '#/components/schemas/RadioComponentResponse'
                    title: Radio Response
                  - $ref: '#/components/schemas/MultiComponentResponse'
                    title: Multi Select Response
                  - $ref: '#/components/schemas/RadioGroupComponentResponse'
                    title: Radio Group Response
                  - $ref: '#/components/schemas/LastQuestionResponse'
                    title: Last Question Response 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-400'
        '500':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-500'

# Define your schemas here if needed
components:
  schemas:
    Generic-Error:
      type: object
      properties:
        error_code:
          type: string
        display_message:
          type: string
        message:
          type: string
    Error-400:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Generic-Error'
      example:
        error:
          error_code: bad_request
          display_message: (Generic User friendly message)
          message: (Server error message)
    Error-500:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Generic-Error'
      example:
        error:
          error_code: server_error
          display_message: (Generic User friendly message)
          message: (Server error message)

    Selected-Choices:
      type: object
      properties:
        choice_id:
          type: string
          example: test-choice-1
        choice_label:
          type: string
          example: Fever
      required:
        - choice_id

    Selected-Choice-Qualifier:
      type: object
      properties:
        choice_id:
          type: string
          example: test-choice-1
        choice_label:
          type: string
          example: Loss of taste
        choice_qualifier:
          type: string
          description: >-
            This is the qualifier id. It is used to identify the qualifier. It is a string with values `p`, `a`, `u` for positive, negative and unknown respectively.
          example: p
      required:
        - choice_id
        - choice_qualifier
    
    # Request Component Based
    RadioRequest:
      type: object
      title: Radio Choice Request
      description: This is the request body for single select choice components
      properties:
        selected_choices:
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/Selected-Choices'
            required:
              - choice_id
      required:
        - selected_choices
      example:
        selected_choices:
          - choice_id: test-choice-1
            choice_label: I have Diabetes
            qualifier_id: p
    MultiRequest:
      type: object
      title: Multi Choice Request
      description: >-
        This is the request body for multi choice components
      properties:
        selected_choices:
          type: array
          items:
            $ref: '#/components/schemas/Selected-Choices'
      required:
        - selected_choices 
      example:
        selected_choices:
          - choice_id: 47258974-a65c-11eb-8d02-1e003a340630
            choice_label: Fever
          - choice_id: 473f9e54-a65c-11eb-8d02-1e003a340630
            choice_label: Cold
            qualifier_id: a
          - choice_id: 471e8e62-a65c-11eb-8d02-1e003a340630
            choice_label: Cough
    ATSGRequest:
      type: object
      properties:
        selected_choices:
          type: array
          items:
            $ref: '#/components/schemas/Selected-Choices'
      required:
        - selected_choices
    RadioGroupRequest:
      type: object
      properties:
        selected_choices:
          type: array
          items:
            $ref: '#/components/schemas/Selected-Choice-Qualifier'
      required:
        - selected_choices
      example:
        selected_choices:
          - choice_id: test-choice-1
            choice_label: I have Diabetes
            qualifier_id: p
          - choice_id: test-choice-1
            choice_label: I have Hypertension
            qualifier_id: a
          - choice_id: test-choice-1
            choice_label: I have Thyroid
            qualifier_id: u
    SkippedRequest:
      type: object

    UserInput:
      type: object
      properties:
        user_input:
          type: string
          description: >-
            The custom input provided as answer by user. It should be stringified- integer, string or date.
          example:
            "Rakesh"
      required:
        - user_input

    # Response basics
    Question-Choice:
      type: object
      properties:
        choice_id:
          type: string
          example: xyzjahaj
        choice_label:
          type: string
          example: I have Diabetes
        is_selected:
          type: boolean
          example: true
          default: false
      required:
        - choice_id
        - choice_label

    Question-Choice-Qualifier:
      type: object
      properties:
        choice_id:
          type: string
          example: s_344147d6-b416-11eb-8c69-1sweet340631
        choice_label:
          type: string
          example: I have Diabetes
        qualifier:
          type: object
          properties: 
            id:
              type: string
              enum: [p, a, u]
              example: p
            label:
              type: string
              enum: [Yes, No, Don't Know]
              example: "Yes"
            is_selected:
              type: boolean
              default: False
              example: False
          required:
            - id
            - label
      required:
        - choice_id
        - choice_label
        - qualifier
    Question-default:
      type: string
      description: >-
        This will be a choice id in case of choice components else will be a string in case of user-input components
    Question-mandatory:
      type: boolean
      example: true
      description: >-
        This is a boolean value, if true user has to answer this question
    Assessment-last-question:
      type: boolean
      example: false
      description: >-
        This is a **boolean value**. If true, this is the last question of the assessment and you can hit submit API.
    Assessment-progress:
      type: number
      minimum: 00.00
      maximum: 100.00
      example: 50.00
      description: >-
        This is the progress of the assessment in percentage format. It is a number **between 0.00 and 100.00**.
    #Response : component based
    MasterComponentData:
      type: object
      properties:
        url:
          type: object
          description: >-
            Valid only for **autosuggest component**. This content should be used to get autosuggest choices for users. After combining all the requests, You can get a url like: `https://example.eka.care?gender=m&age=23&src=sn&q`
          properties:
            base_url:
              type: string
              description: Base URL for autosuggest API
              example: "https://example.eka.care"
            query_params:
              type: object
              description: These are the query params to be sent with URL to get autosuggest choices.
              properties:
                gender:
                  type: string
                  example: "m"
                age: 
                  type: string
                  example: "21"
                src:
                  type: string
                  example: "sn"
            search_query_param:
              type: string
              example: "q"
        autosuggest_static_choices:
          description: >-
            This is valid only for **autosuggest component**. It contains the section wise static choices to be shown to users at first.
          type: object
          properties:
            sections:
              type: array
              items:
                type: object
                properties:
                  section_title:
                    type: string
                    description: >-
                      This is the title of the section
                    example: "Most Searched"
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: unique identifier of choice
                          example: "47258974-a65c-11eb-8d02-1e003a340630"
                        common_name:
                          type: string
                          description: name of the autosuggest item being searched
                          example: "Fever"
                        is_selected:
                          type: boolean
                          description: >-
                            This is a boolean value, if true this choice is be selected by default
                            example: false
                      required:
                        - id
                        - common_name
        choices:
          type: array
          description: >-
            Valid only for **choice type components**- multi choice, radio (single choice) and radio group
          items:
            allOf:
              - $ref: '#/components/schemas/Question-Choice-Qualifier'
              - type: object
                properties:
                  is_selected:
                    type: boolean
                    example: True
                    description: >-
                      This is a boolean value, if `true` this choice is be selected by default
            
    BaseChoiceComponentData:         
      type: object
      properties:
        choices:
          type: array
          description: >-
            This is valid for a choice type components, multi, radio (single choice), radio group
          items:
            $ref: '#/components/schemas/Question-Choice'
      required:
        - choices
    RadioGroupComponentData:         
      type: object
      properties:
        choices:
          type: array
          description: >-
            This is valid for a choice type components, multi, radio (single choice), radio group
          items:
            $ref: '#/components/schemas/Question-Choice-Qualifier'
      required:
        - choices
    ATSGComponentData:         
      type: object
      properties:
        url:
          description: >-
            This is **only valid for an autosuggest component**. This content can be used to get autosuggest choices for users. After combining all the requests, You can get a url like: `https://example.eka.care?gender=m&age=23&src=sn&q`
          type: object
          properties:
            base_url:
              type: string
              description: Base URL for autosuggest API
              example: "https://example.eka.care"
            query_params:
              type: object
              description: These are the query params to be sent with URL to get autosuggest choices.
              properties:
                gender:
                  type: string
                  example: "m"
                age: 
                  type: string
                  example: "21"
                src:
                  type: string
                  example: "sn"
            search_query_param:
              type: string
              example: "q"
        autosuggest_static_choices:
          description: >-
            This is valid only for **autosuggest component**. It contains the section wise static choices to be shown to users at first.
          type: object
          properties:
            sections:
              type: array
              items:
                type: object
                properties:
                  section_title:
                    type: string
                    description: >-
                      This is the title of the section
                    example: "Most Searched"
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: unique identifier of choice
                          example: "47258974-a65c-11eb-8d02-1e003a340630"
                        common_name:
                          type: string
                          description: name of the autosuggest item being searched
                          example: "Fever"
                        is_selected:
                          type: boolean
                          description: >-
                            This is a boolean value, if true this choice is be selected by default
                            example: false
                      required:
                        - id
                        - common_name
      required:
        - url
        - autosuggest_static_choices
    
    # Response Data
    MasterComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question. its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                example: "I-ATSG"
              question_text:
                type: string
                example: Add all symptoms
              tip:
                type: string
                example: Type here to search for symptoms
              component_data:
                $ref: '#/components/schemas/MasterComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - question_text
              - component_code
              - component_data
        progress:
          $ref: '#/components/schemas/Assessment-progress'
        is_last_question:
          $ref: '#/components/schemas/Assessment-last-question'
      required:
        - questions
        - progress
        - is_last_question
    RadioComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                default: 'I-RADO'
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/BaseChoiceComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - component_code
              - question_text
              - component_data
        progress:
          $ref: '#/components/schemas/Assessment-progress'
        is_last_question:
          $ref: '#/components/schemas/Assessment-last-question'
      required:
        - questions
        - progress
        - is_last_question
    MultiComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                default: 'I-MULT'
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/BaseChoiceComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - component_code
              - question_text
              - component_data
        progress:
          $ref: '#/components/schemas/Assessment-progress'
        is_last_question:
          $ref: '#/components/schemas/Assessment-last-question'
      required:
        - questions
        - progress
        - is_last_question
    RadioGroupComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                default: 'I-RADG'
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/RadioGroupComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - component_code
              - question_text
              - component_data
        progress:
          $ref: '#/components/schemas/Assessment-progress'
        is_last_question:
          $ref: '#/components/schemas/Assessment-last-question'
      required:
        - questions
        - progress
        - is_last_question
    ATSGComponentResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            type: object
            properties:
              qid:
                type: integer
                description: >-
                  This is the question id. It is used to identify the question., its an integer, during start it will always be 0
                example: 1
              component_code:
                type: string
                default: 'I-ATSG'
              question_text:
                type: string
              tip:
                type: string
              component_data:
                $ref: '#/components/schemas/ATSGComponentData'
              is_mandatory:
                $ref: '#/components/schemas/Question-mandatory'
            required:
              - qid
              - component_code
              - question_text
              - component_data
        progress:
          $ref: '#/components/schemas/Assessment-progress'
        is_last_question:
          $ref: '#/components/schemas/Assessment-last-question'
      required:
        - questions
        - progress
        - is_last_question
    LastQuestionResponse:
      type: object
      properties:
        is_last_question:
          $ref: '#/components/schemas/Assessment-last-question'
          default: true
          example: true
        progress:
          $ref: '#/components/schemas/Assessment-progress'
          default: 100
          example: 100

  parameters:
    client-id: 
      name: client-id
      in: header
      required: true
      description: >-
        Any unique string to identify the logged in developer.
      schema:
        type: string
        example: test-client
    locale:
      name: locale
      in: header
      description: >-
        Locale is used to determine the language of the assessment. Supported locales are `en`, `hi`, `kn` for english, hindi and kannada respectively with default being `en`.
      schema:
        type: string
        enum: [en, hi, kn]
        example: en
    assessment_id:
      name: assessment_id
      in: path
      required: true
      description: >-
        The hash that uniquely identifies the assessment session.
      schema:
        type: string
    qid:
      name: qid
      in: path
      required: true
      description: >-
        The question id that uniquely identifies the question.
      schema:
        type: integer

  securitySchemes:
    authApiKey:
      in: header
      name: auth
      description: >-
        The authentication token of the developer (generated using Authorization API).
      type: apiKey
